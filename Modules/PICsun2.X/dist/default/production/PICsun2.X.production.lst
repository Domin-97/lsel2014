

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Wed Mar 26 12:39:14 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0095                     	;# 
    59  0096                     	;# 
    60  0097                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  010C                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0117                     	;# 
    75  0118                     	;# 
    76  0119                     	;# 
    77  011A                     	;# 
    78  011B                     	;# 
    79  011D                     	;# 
    80  011D                     	;# 
    81  018C                     	;# 
    82  0191                     	;# 
    83  0191                     	;# 
    84  0192                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0194                     	;# 
    89  0195                     	;# 
    90  0196                     	;# 
    91  0199                     	;# 
    92  019A                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019C                     	;# 
    96  019D                     	;# 
    97  019E                     	;# 
    98  019F                     	;# 
    99  020C                     	;# 
   100  0211                     	;# 
   101  0211                     	;# 
   102  0212                     	;# 
   103  0212                     	;# 
   104  0213                     	;# 
   105  0213                     	;# 
   106  0214                     	;# 
   107  0214                     	;# 
   108  0215                     	;# 
   109  0215                     	;# 
   110  0215                     	;# 
   111  0216                     	;# 
   112  0216                     	;# 
   113  0217                     	;# 
   114  0217                     	;# 
   115  0291                     	;# 
   116  0292                     	;# 
   117  0293                     	;# 
   118  0294                     	;# 
   119  0295                     	;# 
   120  0295                     	;# 
   121  0296                     	;# 
   122  0391                     	;# 
   123  0392                     	;# 
   124  0393                     	;# 
   125  039A                     	;# 
   126  039C                     	;# 
   127  039D                     	;# 
   128  039E                     	;# 
   129  039F                     	;# 
   130  0FE4                     	;# 
   131  0FE5                     	;# 
   132  0FE6                     	;# 
   133  0FE7                     	;# 
   134  0FE8                     	;# 
   135  0FE9                     	;# 
   136  0FEA                     	;# 
   137  0FEB                     	;# 
   138  0FED                     	;# 
   139  0FEE                     	;# 
   140  0FEF                     	;# 
   141  000B                     _INTCONbits	set	11
   142  0011                     _PIR1bits	set	17
   143  001B                     _PR2	set	27
   144  001C                     _T2CONbits	set	28
   145  008B                     _SSP1IF	set	139
   146  0095                     _OPTION_REG	set	149
   147  0099                     _OSCCONbits	set	153
   148  0091                     _PIE1bits	set	145
   149  008C                     _TRISAbits	set	140
   150  011D                     _APFCONbits	set	285
   151  010C                     _LATA	set	268
   152  018C                     _ANSELA	set	396
   153  0212                     _SSP1ADD	set	530
   154  0211                     _SSP1BUF	set	529
   155  0215                     _SSP1CON1	set	533
   156  0216                     _SSP1CON2bits	set	534
   157  0211                     _SSPBUF	set	529
   158  0214                     _SSPSTAT	set	532
   159  020C                     _WPUA	set	524
   160  10A0                     _BF	set	4256
   161  10AC                     _CKP	set	4268
   162  10B0                     _SEN	set	4272
   163  10AE                     _SSPOV	set	4270
   164  10AF                     _WCOL	set	4271
   165  0293                     _CCP1CON	set	659
   166  0293                     _CCP1CONbits	set	659
   167  0291                     _CCPR1L	set	657
   168                           
   169                           	psect	text0
   170  0000                     __ptext0:	
   171                           
   172                           ;psect for function _I2CWrite
   173                           ; #config settings
   174  0000                     
   175                           	psect	cinit
   176  05AE                     start_initialization:	
   177  05AE                     __initialization:	
   178                           
   179                           ; Clear objects allocated to COMMON
   180  05AE  01F0               	clrf	__pbssCOMMON& (0+127)
   181  05AF  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   182  05B0  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   183  05B1  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   184  05B2  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   185                           
   186                           ; Clear objects allocated to BANK0
   187  05B3  304A               	movlw	low __pbssBANK0
   188  05B4  0084               	movwf	4
   189  05B5  3000               	movlw	high __pbssBANK0
   190  05B6  0085               	movwf	5
   191  05B7  3014               	movlw	20
   192  05B8  25D1               	fcall	clear_ram0
   193  05B9                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  05B9                     __end_of__initialization:	
   197  05B9  0020               	movlb	0
   198  05BA  2CE5               	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201  0070                     __pbssCOMMON:	
   202  0070                     _sunrise_seconds:	
   203  0070                     	ds	2
   204  0072                     _buffer_valid:	
   205  0072                     	ds	1
   206  0073                     _newcmd:	
   207  0073                     	ds	1
   208  0074                     _rcvd_byte:	
   209  0074                     	ds	1
   210                           
   211                           	psect	bssBANK0
   212  004A                     __pbssBANK0:	
   213  004A                     _rcv_buffer:	
   214  004A                     	ds	6
   215  0050                     _delta:	
   216  0050                     	ds	3
   217  0053                     _pwmdc:	
   218  0053                     	ds	3
   219  0056                     _light_peak:	
   220  0056                     	ds	2
   221  0058                     _peak_light_time:	
   222  0058                     	ds	2
   223  005A                     _simulated_time:	
   224  005A                     	ds	2
   225  005C                     _sunset_seconds:	
   226  005C                     	ds	2
   227                           
   228                           	psect	clrtext
   229  05D1                     clear_ram0:	
   230                           ;	Called with FSR0 containing the base address, and
   231                           ;	WREG with the size to clear
   232                           
   233  05D1  0064               	clrwdt	;clear the watchdog before getting into this loop
   234  05D2                     clrloop0:	
   235  05D2  0180               	clrf	0	;clear RAM location pointed to by FSR
   236  05D3  3101               	addfsr 0,1
   237  05D4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   238  05D5  2DD2               	goto	clrloop0	;have we reached the end yet?
   239  05D6  3400               	retlw	0	;all done for this memory range, return
   240                           
   241                           	psect	cstackCOMMON
   242  0075                     __pcstackCOMMON:	
   243  0075                     ?_I2CWrite:	
   244  0075                     ??_I2CWrite:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0075                     ?_isr:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0075                     ?_calc_times:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0075                     ?_simulate:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  0075                     ?___init:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0075                     ?_main:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0075                     I2CWrite@data:	
   263                           ; 2 bytes @ 0x0
   264                           
   265                           
   266                           ; 1 bytes @ 0x0
   267  0075                     	ds	1
   268  0076                     ??_isr:	
   269                           
   270                           ; 0 bytes @ 0x1
   271  0076                     	ds	2
   272  0078                     isr@i2cStatus:	
   273                           
   274                           ; 1 bytes @ 0x3
   275  0078                     	ds	1
   276  0079                     isr@value:	
   277                           
   278                           ; 1 bytes @ 0x4
   279  0079                     	ds	1
   280                           
   281                           	psect	cstackBANK0
   282  0020                     __pcstackBANK0:	
   283  0020                     ??___init:	
   284  0020                     ?___wmul:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0020                     ?___ftpack:	
   288                           ; 2 bytes @ 0x0
   289                           
   290  0020                     ?___ftneg:	
   291                           ; 3 bytes @ 0x0
   292                           
   293  0020                     ___wmul@multiplier:	
   294                           ; 3 bytes @ 0x0
   295                           
   296  0020                     ___ftpack@arg:	
   297                           ; 2 bytes @ 0x0
   298                           
   299  0020                     ___ftneg@f1:	
   300                           ; 3 bytes @ 0x0
   301                           
   302                           
   303                           ; 3 bytes @ 0x0
   304  0020                     	ds	2
   305  0022                     ___wmul@multiplicand:	
   306                           
   307                           ; 2 bytes @ 0x2
   308  0022                     	ds	1
   309  0023                     ??___ftneg:	
   310  0023                     ___ftpack@exp:	
   311                           ; 0 bytes @ 0x3
   312                           
   313                           
   314                           ; 1 bytes @ 0x3
   315  0023                     	ds	1
   316  0024                     ??___wmul:	
   317  0024                     ___ftpack@sign:	
   318                           ; 0 bytes @ 0x4
   319                           
   320  0024                     ___wmul@product:	
   321                           ; 1 bytes @ 0x4
   322                           
   323                           
   324                           ; 2 bytes @ 0x4
   325  0024                     	ds	1
   326  0025                     ??___ftpack:	
   327                           
   328                           ; 0 bytes @ 0x5
   329  0025                     	ds	1
   330  0026                     ?___awdiv:	
   331  0026                     ___awdiv@divisor:	
   332                           ; 2 bytes @ 0x6
   333                           
   334                           
   335                           ; 2 bytes @ 0x6
   336  0026                     	ds	2
   337  0028                     ?___awtoft:	
   338  0028                     ?___ftadd:	
   339                           ; 3 bytes @ 0x8
   340                           
   341  0028                     ?___lwtoft:	
   342                           ; 3 bytes @ 0x8
   343                           
   344  0028                     ___awdiv@dividend:	
   345                           ; 3 bytes @ 0x8
   346                           
   347  0028                     ___awtoft@c:	
   348                           ; 2 bytes @ 0x8
   349                           
   350  0028                     ___lwtoft@c:	
   351                           ; 2 bytes @ 0x8
   352                           
   353  0028                     ___ftadd@f1:	
   354                           ; 2 bytes @ 0x8
   355                           
   356                           
   357                           ; 3 bytes @ 0x8
   358  0028                     	ds	2
   359  002A                     ??___awdiv:	
   360                           
   361                           ; 0 bytes @ 0xA
   362  002A                     	ds	1
   363  002B                     ??___awtoft:	
   364  002B                     ??___lwtoft:	
   365                           ; 0 bytes @ 0xB
   366                           
   367  002B                     ___awdiv@counter:	
   368                           ; 0 bytes @ 0xB
   369                           
   370  002B                     ___ftadd@f2:	
   371                           ; 1 bytes @ 0xB
   372                           
   373                           
   374                           ; 3 bytes @ 0xB
   375  002B                     	ds	1
   376  002C                     ___awdiv@sign:	
   377                           
   378                           ; 1 bytes @ 0xC
   379  002C                     	ds	1
   380  002D                     ___awtoft@sign:	
   381  002D                     ___awdiv@quotient:	
   382                           ; 1 bytes @ 0xD
   383                           
   384                           
   385                           ; 2 bytes @ 0xD
   386  002D                     	ds	1
   387  002E                     ??___ftadd:	
   388  002E                     ?___ftdiv:	
   389                           ; 0 bytes @ 0xE
   390                           
   391  002E                     ___ftdiv@f2:	
   392                           ; 3 bytes @ 0xE
   393                           
   394                           
   395                           ; 3 bytes @ 0xE
   396  002E                     	ds	3
   397  0031                     ___ftdiv@f1:	
   398                           
   399                           ; 3 bytes @ 0x11
   400  0031                     	ds	1
   401  0032                     ___ftadd@sign:	
   402                           
   403                           ; 1 bytes @ 0x12
   404  0032                     	ds	1
   405  0033                     ___ftadd@exp2:	
   406                           
   407                           ; 1 bytes @ 0x13
   408  0033                     	ds	1
   409  0034                     ??___ftdiv:	
   410  0034                     ___ftadd@exp1:	
   411                           ; 0 bytes @ 0x14
   412                           
   413                           
   414                           ; 1 bytes @ 0x14
   415  0034                     	ds	1
   416  0035                     ?___ftsub:	
   417  0035                     ?___fttol:	
   418                           ; 3 bytes @ 0x15
   419                           
   420  0035                     ___ftsub@f2:	
   421                           ; 4 bytes @ 0x15
   422                           
   423  0035                     ___fttol@f1:	
   424                           ; 3 bytes @ 0x15
   425                           
   426                           
   427                           ; 3 bytes @ 0x15
   428  0035                     	ds	3
   429  0038                     ___ftdiv@cntr:	
   430  0038                     ___ftsub@f1:	
   431                           ; 1 bytes @ 0x18
   432                           
   433                           
   434                           ; 3 bytes @ 0x18
   435  0038                     	ds	1
   436  0039                     ??___fttol:	
   437  0039                     ___ftdiv@f3:	
   438                           ; 0 bytes @ 0x19
   439                           
   440                           
   441                           ; 3 bytes @ 0x19
   442  0039                     	ds	2
   443  003B                     ??___ftsub:	
   444                           
   445                           ; 0 bytes @ 0x1B
   446  003B                     	ds	1
   447  003C                     ___ftdiv@exp:	
   448                           
   449                           ; 1 bytes @ 0x1C
   450  003C                     	ds	1
   451  003D                     ___ftdiv@sign:	
   452  003D                     ___fttol@sign1:	
   453                           ; 1 bytes @ 0x1D
   454                           
   455                           
   456                           ; 1 bytes @ 0x1D
   457  003D                     	ds	1
   458  003E                     ??_calc_times:	
   459  003E                     ___fttol@lval:	
   460                           ; 0 bytes @ 0x1E
   461                           
   462                           
   463                           ; 4 bytes @ 0x1E
   464  003E                     	ds	4
   465  0042                     ___fttol@exp1:	
   466                           
   467                           ; 1 bytes @ 0x22
   468  0042                     	ds	1
   469  0043                     ?_setPWMdc:	
   470  0043                     setPWMdc@dc:	
   471                           ; 0 bytes @ 0x23
   472                           
   473                           
   474                           ; 2 bytes @ 0x23
   475  0043                     	ds	2
   476  0045                     ??_setPWMdc:	
   477                           
   478                           ; 0 bytes @ 0x25
   479  0045                     	ds	2
   480  0047                     ??_simulate:	
   481  0047                     ??_main:	
   482                           ; 0 bytes @ 0x27
   483                           
   484                           
   485                           ; 0 bytes @ 0x27
   486  0047                     	ds	3
   487                           
   488                           	psect	maintext
   489  04E5                     __pmaintext:	
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 205 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  2  134[COMMON] int 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 17F/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1
   509 ;;      Params:         0       0       0
   510 ;;      Locals:         0       0       0
   511 ;;      Temps:          0       3       0
   512 ;;      Totals:         0       3       0
   513 ;;Total ram usage:        3 bytes
   514 ;; Hardware stack levels required when called:    6
   515 ;; This function calls:
   516 ;;		_calc_times
   517 ;;		_simulate
   518 ;;		___init
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _main
   526  04E5                     _main:	
   527                           
   528                           ;PICsun_main.c: 207: __init();
   529                           
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   532  04E5  24A6               	fcall	___init
   533                           
   534                           ;PICsun_main.c: 210: rcv_buffer[0] = 6;
   535  04E6  3006               	movlw	6
   536  04E7  0020               	movlb	0	; select bank0
   537  04E8  00C7               	movwf	??_main
   538  04E9  0847               	movf	??_main,w
   539  04EA  00CA               	movwf	_rcv_buffer	;volatile
   540                           
   541                           ;PICsun_main.c: 211: rcv_buffer[1] = 0;
   542  04EB  01CB               	clrf	_rcv_buffer+1	;volatile
   543                           
   544                           ;PICsun_main.c: 212: rcv_buffer[2] = 0;
   545  04EC  01CC               	clrf	_rcv_buffer+2	;volatile
   546                           
   547                           ;PICsun_main.c: 213: rcv_buffer[3] = 18;
   548  04ED  3012               	movlw	18
   549  04EE  00C7               	movwf	??_main
   550  04EF  0847               	movf	??_main,w
   551  04F0  00CD               	movwf	_rcv_buffer+3	;volatile
   552                           
   553                           ;PICsun_main.c: 214: rcv_buffer[4] = 0;
   554  04F1  01CE               	clrf	_rcv_buffer+4	;volatile
   555                           
   556                           ;PICsun_main.c: 215: rcv_buffer[5] = 0;
   557  04F2  01CF               	clrf	_rcv_buffer+5	;volatile
   558                           
   559                           ;PICsun_main.c: 216: buffer_valid = 1;
   560  04F3  3001               	movlw	1
   561  04F4  00C7               	movwf	??_main
   562  04F5  0847               	movf	??_main,w
   563  04F6  00F2               	movwf	_buffer_valid	;volatile
   564  04F7                     l1939:	
   565                           ;PICsun_main.c: 218: while (1) {
   566                           
   567                           
   568                           ;PICsun_main.c: 219: if (buffer_valid == 1) {
   569  04F7  0872               	movf	_buffer_valid,w	;volatile
   570  04F8  3A01               	xorlw	1
   571  04F9  1D03               	skipz
   572  04FA  2CFC               	goto	l1943
   573                           
   574                           ;PICsun_main.c: 220: calc_times();
   575  04FB  2169               	fcall	_calc_times
   576  04FC                     l1943:	
   577                           
   578                           ;PICsun_main.c: 221: }
   579                           ;PICsun_main.c: 223: simulate();
   580  04FC  2377               	fcall	_simulate
   581                           
   582                           ;PICsun_main.c: 224: _delay((unsigned long)((100000)*(8000000/4000000.0)));
   583  04FD  3002               	movlw	2
   584  04FE  0020               	movlb	0	; select bank0
   585  04FF  00C9               	movwf	??_main+2
   586  0500  3004               	movlw	4
   587  0501  00C8               	movwf	??_main+1
   588  0502  30BA               	movlw	186
   589  0503  00C7               	movwf	??_main
   590  0504                     u2467:	
   591  0504  0BC7               	decfsz	??_main,f
   592  0505  2D04               	goto	u2467
   593  0506  0BC8               	decfsz	??_main+1,f
   594  0507  2D04               	goto	u2467
   595  0508  0BC9               	decfsz	??_main+2,f
   596  0509  2D04               	goto	u2467
   597  050A  0000               	nop
   598                           
   599                           ;PICsun_main.c: 225: simulated_time++;
   600  050B  3001               	movlw	1
   601  050C  0020               	movlb	0	; select bank0
   602  050D  07DA               	addwf	_simulated_time,f
   603  050E  3000               	movlw	0
   604  050F  3DDB               	addwfc	_simulated_time+1,f
   605                           
   606                           ;PICsun_main.c: 226: if (simulated_time >= 1200) {
   607  0510  3004               	movlw	4
   608  0511  025B               	subwf	_simulated_time+1,w
   609  0512  30B0               	movlw	176
   610  0513  1903               	skipnz
   611  0514  025A               	subwf	_simulated_time,w
   612  0515  1C03               	skipc
   613  0516  2CF7               	goto	l1939
   614                           
   615                           ;PICsun_main.c: 227: simulated_time = 0;
   616  0517  01DA               	clrf	_simulated_time
   617  0518  01DB               	clrf	_simulated_time+1
   618  0519  2CF7               	goto	l1939
   619  051A                     __end_of_main:	
   620                           ;PICsun_main.c: 228: }
   621                           ;PICsun_main.c: 229: }
   622                           ;PICsun_main.c: 232: return (0);
   623                           ;	Return value of _main is never used
   624                           
   625                           
   626                           	psect	text1
   627  04A6                     __ptext1:	
   628 ;; *************** function ___init *****************
   629 ;; Defined at:
   630 ;;		line 156 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;		None               void
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1
   644 ;;      Params:         0       0       0
   645 ;;      Locals:         0       0       0
   646 ;;      Temps:          0       3       0
   647 ;;      Totals:         0       3       0
   648 ;;Total ram usage:        3 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    2
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function ___init
   660  04A6                     ___init:	
   661                           
   662                           ;PICsun_main.c: 159: OSCCONbits.SPLLEN = 0;
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in ___init: [wreg+status,2+status,0]
   666  04A6  0021               	movlb	1	; select bank1
   667  04A7  1399               	bcf	25,7	;volatile
   668                           
   669                           ;PICsun_main.c: 160: OSCCONbits.IRCF = 0b1110;
   670  04A8  0819               	movf	25,w	;volatile
   671  04A9  3987               	andlw	-121
   672  04AA  3870               	iorlw	112
   673  04AB  0099               	movwf	25	;volatile
   674                           
   675                           ;PICsun_main.c: 161: OSCCONbits.SCS = 0x02;
   676  04AC  0819               	movf	25,w	;volatile
   677  04AD  39FC               	andlw	-4
   678  04AE  3802               	iorlw	2
   679  04AF  0099               	movwf	25	;volatile
   680                           
   681                           ;PICsun_main.c: 165: TRISAbits.TRISA0 = 0;
   682  04B0  100C               	bcf	12,0	;volatile
   683                           
   684                           ;PICsun_main.c: 166: TRISAbits.TRISA1 = 1;
   685  04B1  148C               	bsf	12,1	;volatile
   686                           
   687                           ;PICsun_main.c: 167: TRISAbits.TRISA2 = 1;
   688  04B2  150C               	bsf	12,2	;volatile
   689                           
   690                           ;PICsun_main.c: 168: TRISAbits.TRISA3 = 0;
   691  04B3  118C               	bcf	12,3	;volatile
   692                           
   693                           ;PICsun_main.c: 169: TRISAbits.TRISA4 = 0;
   694  04B4  120C               	bcf	12,4	;volatile
   695                           
   696                           ;PICsun_main.c: 170: TRISAbits.TRISA5 = 1;
   697  04B5  168C               	bsf	12,5	;volatile
   698                           
   699                           ;PICsun_main.c: 173: ANSELA = 0x00;
   700  04B6  0023               	movlb	3	; select bank3
   701  04B7  018C               	clrf	12	;volatile
   702                           
   703                           ;PICsun_main.c: 176: APFCONbits.CCP1SEL = 1;
   704  04B8  0022               	movlb	2	; select bank2
   705  04B9  141D               	bsf	29,0	;volatile
   706                           
   707                           ;PICsun_main.c: 179: OPTION_REG = 0b00000000;
   708  04BA  0021               	movlb	1	; select bank1
   709  04BB  0195               	clrf	21	;volatile
   710                           
   711                           ;PICsun_main.c: 182: WPUA = 0b00000000;
   712  04BC  0024               	movlb	4	; select bank4
   713  04BD  018C               	clrf	12	;volatile
   714                           
   715                           ;PICsun_main.c: 185: LATA = 0b00000000;
   716  04BE  0022               	movlb	2	; select bank2
   717  04BF  018C               	clrf	12	;volatile
   718                           
   719                           ;PICsun_main.c: 187: SSP1CON1 = 0b00110110;
   720  04C0  3036               	movlw	54
   721  04C1  0024               	movlb	4	; select bank4
   722  04C2  0095               	movwf	21	;volatile
   723                           
   724                           ;PICsun_main.c: 188: SSP1CON2bits.SEN = 1;
   725  04C3  1416               	bsf	22,0	;volatile
   726                           
   727                           ;PICsun_main.c: 189: SSP1ADD = 0x20 << 1;
   728  04C4  3040               	movlw	64
   729  04C5  0092               	movwf	18	;volatile
   730                           
   731                           ;PICsun_main.c: 192: PR2 = 0xFF;
   732  04C6  30FF               	movlw	255
   733  04C7  0020               	movlb	0	; select bank0
   734  04C8  009B               	movwf	27	;volatile
   735                           
   736                           ;PICsun_main.c: 193: CCP1CONbits.CCP1M = 0b1100;
   737  04C9  0025               	movlb	5	; select bank5
   738  04CA  0813               	movf	19,w	;volatile
   739  04CB  39F0               	andlw	-16
   740  04CC  380C               	iorlw	12
   741  04CD  0093               	movwf	19	;volatile
   742                           
   743                           ;PICsun_main.c: 194: T2CONbits.T2CKPS = 0b11;
   744  04CE  3003               	movlw	3
   745  04CF  0020               	movlb	0	; select bank0
   746  04D0  049C               	iorwf	28,f	;volatile
   747                           
   748                           ;PICsun_main.c: 196: PIR1bits.SSP1IF = 0;
   749  04D1  1191               	bcf	17,3	;volatile
   750                           
   751                           ;PICsun_main.c: 197: PIE1bits.SSP1IE = 1;
   752  04D2  0021               	movlb	1	; select bank1
   753  04D3  1591               	bsf	17,3	;volatile
   754                           
   755                           ;PICsun_main.c: 199: INTCONbits.GIE = 1;
   756  04D4  178B               	bsf	11,7	;volatile
   757                           
   758                           ;PICsun_main.c: 200: INTCONbits.PEIE = 1;
   759  04D5  170B               	bsf	11,6	;volatile
   760                           
   761                           ;PICsun_main.c: 202: _delay((unsigned long)((100000)*(8000000/4000000.0)));
   762  04D6  3002               	movlw	2
   763  04D7  0020               	movlb	0	; select bank0
   764  04D8  00A2               	movwf	??___init+2
   765  04D9  3004               	movlw	4
   766  04DA  00A1               	movwf	??___init+1
   767  04DB  30BA               	movlw	186
   768  04DC  00A0               	movwf	??___init
   769  04DD                     u2477:	
   770  04DD  0BA0               	decfsz	??___init,f
   771  04DE  2CDD               	goto	u2477
   772  04DF  0BA1               	decfsz	??___init+1,f
   773  04E0  2CDD               	goto	u2477
   774  04E1  0BA2               	decfsz	??___init+2,f
   775  04E2  2CDD               	goto	u2477
   776  04E3  0000               	nop
   777  04E4  0008               	return
   778  04E5                     __end_of___init:	
   779                           
   780                           	psect	text2
   781  0377                     __ptext2:	
   782 ;; *************** function _simulate *****************
   783 ;; Defined at:
   784 ;;		line 139 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;		None               void
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1
   798 ;;      Params:         0       0       0
   799 ;;      Locals:         0       0       0
   800 ;;      Temps:          0       0       0
   801 ;;      Totals:         0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    5
   805 ;; This function calls:
   806 ;;		_setPWMdc
   807 ;;		___ftadd
   808 ;;		___ftneg
   809 ;;		___ftsub
   810 ;;		___fttol
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           
   817                           ;psect for function _simulate
   818  0377                     _simulate:	
   819                           
   820                           ;PICsun_main.c: 141: if (simulated_time < sunrise_seconds || simulated_time > sunset_sec
      +                          onds) {
   821                           
   822                           ;incstack = 0
   823                           ; Regs used in _simulate: [wreg+status,2+status,0+pclath+cstack]
   824  0377  0871               	movf	_sunrise_seconds+1,w
   825  0378  0020               	movlb	0	; select bank0
   826  0379  025B               	subwf	_simulated_time+1,w
   827  037A  1D03               	skipz
   828  037B  2B7E               	goto	u1925
   829  037C  0870               	movf	_sunrise_seconds,w
   830  037D  025A               	subwf	_simulated_time,w
   831  037E                     u1925:	
   832  037E  1C03               	skipc
   833  037F  2B88               	goto	l1859
   834  0380  085B               	movf	_simulated_time+1,w
   835  0381  025D               	subwf	_sunset_seconds+1,w
   836  0382  1D03               	skipz
   837  0383  2B86               	goto	u1935
   838  0384  085A               	movf	_simulated_time,w
   839  0385  025C               	subwf	_sunset_seconds,w
   840  0386                     u1935:	
   841  0386  1803               	skipnc
   842  0387  2B8E               	goto	l1861
   843  0388                     l1859:	
   844                           
   845                           ;PICsun_main.c: 142: pwmdc = 0;
   846  0388  3000               	movlw	0
   847  0389  00D3               	movwf	_pwmdc
   848  038A  3000               	movlw	0
   849  038B  00D4               	movwf	_pwmdc+1
   850  038C  3000               	movlw	0
   851  038D  2BC5               	goto	L2
   852  038E                     l1861:	
   853                           ;PICsun_main.c: 143: } else if (simulated_time < peak_light_time) {
   854                           
   855  038E  0859               	movf	_peak_light_time+1,w
   856  038F  025B               	subwf	_simulated_time+1,w
   857  0390  1D03               	skipz
   858  0391  2B94               	goto	u1945
   859  0392  0858               	movf	_peak_light_time,w
   860  0393  025A               	subwf	_simulated_time,w
   861  0394                     u1945:	
   862  0394  1803               	skipnc
   863  0395  2BAA               	goto	l1865
   864                           
   865                           ;PICsun_main.c: 144: pwmdc += delta;
   866  0396  0850               	movf	_delta,w
   867  0397  00A8               	movwf	?___ftadd
   868  0398  0851               	movf	_delta+1,w
   869  0399  00A9               	movwf	?___ftadd+1
   870  039A  0852               	movf	_delta+2,w
   871  039B  00AA               	movwf	?___ftadd+2
   872  039C  0853               	movf	_pwmdc,w
   873  039D  00AB               	movwf	?___ftadd+3
   874  039E  0854               	movf	_pwmdc+1,w
   875  039F  00AC               	movwf	?___ftadd+4
   876  03A0  0855               	movf	_pwmdc+2,w
   877  03A1  00AD               	movwf	?___ftadd+5
   878  03A2  2074               	fcall	___ftadd
   879  03A3  0020               	movlb	0	; select bank0
   880  03A4  0828               	movf	?___ftadd,w
   881  03A5  00D3               	movwf	_pwmdc
   882  03A6  0829               	movf	?___ftadd+1,w
   883  03A7  00D4               	movwf	_pwmdc+1
   884  03A8  082A               	movf	?___ftadd+2,w
   885  03A9  2BC5               	goto	L2
   886  03AA                     l1865:	
   887                           ;PICsun_main.c: 145: } else if (simulated_time > peak_light_time) {
   888                           
   889  03AA  085B               	movf	_simulated_time+1,w
   890  03AB  0259               	subwf	_peak_light_time+1,w
   891  03AC  1D03               	skipz
   892  03AD  2BB0               	goto	u1955
   893  03AE  085A               	movf	_simulated_time,w
   894  03AF  0258               	subwf	_peak_light_time,w
   895  03B0                     u1955:	
   896  03B0  1803               	skipnc
   897  03B1  2BC6               	goto	l125
   898                           
   899                           ;PICsun_main.c: 146: pwmdc -= delta;
   900  03B2  0850               	movf	_delta,w
   901  03B3  00B5               	movwf	?___ftsub
   902  03B4  0851               	movf	_delta+1,w
   903  03B5  00B6               	movwf	?___ftsub+1
   904  03B6  0852               	movf	_delta+2,w
   905  03B7  00B7               	movwf	?___ftsub+2
   906  03B8  0853               	movf	_pwmdc,w
   907  03B9  00B8               	movwf	?___ftsub+3
   908  03BA  0854               	movf	_pwmdc+1,w
   909  03BB  00B9               	movwf	?___ftsub+4
   910  03BC  0855               	movf	_pwmdc+2,w
   911  03BD  00BA               	movwf	?___ftsub+5
   912  03BE  2582               	fcall	___ftsub
   913  03BF  0020               	movlb	0	; select bank0
   914  03C0  0835               	movf	?___ftsub,w
   915  03C1  00D3               	movwf	_pwmdc
   916  03C2  0836               	movf	?___ftsub+1,w
   917  03C3  00D4               	movwf	_pwmdc+1
   918  03C4  0837               	movf	?___ftsub+2,w
   919  03C5                     L2:	
   920  03C5  00D5               	movwf	_pwmdc+2
   921  03C6                     l125:	
   922                           
   923                           ;PICsun_main.c: 147: }
   924                           ;PICsun_main.c: 149: setPWMdc((uint16_t)(1023.0 - pwmdc));
   925  03C6  0853               	movf	_pwmdc,w
   926  03C7  00A0               	movwf	?___ftneg
   927  03C8  0854               	movf	_pwmdc+1,w
   928  03C9  00A1               	movwf	?___ftneg+1
   929  03CA  0855               	movf	_pwmdc+2,w
   930  03CB  00A2               	movwf	?___ftneg+2
   931  03CC  25C8               	fcall	___ftneg
   932  03CD  0020               	movlb	0	; select bank0
   933  03CE  0820               	movf	?___ftneg,w
   934  03CF  00AB               	movwf	?___ftadd+3
   935  03D0  0821               	movf	?___ftneg+1,w
   936  03D1  00AC               	movwf	?___ftadd+4
   937  03D2  0822               	movf	?___ftneg+2,w
   938  03D3  00AD               	movwf	?___ftadd+5
   939  03D4  30C0               	movlw	192
   940  03D5  00A8               	movwf	?___ftadd
   941  03D6  307F               	movlw	127
   942  03D7  00A9               	movwf	?___ftadd+1
   943  03D8  3044               	movlw	68
   944  03D9  00AA               	movwf	?___ftadd+2
   945  03DA  2074               	fcall	___ftadd
   946  03DB  0020               	movlb	0	; select bank0
   947  03DC  0828               	movf	?___ftadd,w
   948  03DD  00B5               	movwf	?___fttol
   949  03DE  0829               	movf	?___ftadd+1,w
   950  03DF  00B6               	movwf	?___fttol+1
   951  03E0  082A               	movf	?___ftadd+2,w
   952  03E1  00B7               	movwf	?___fttol+2
   953  03E2  22F0               	fcall	___fttol
   954  03E3  0020               	movlb	0	; select bank0
   955  03E4  0836               	movf	?___fttol+1,w
   956  03E5  01C4               	clrf	?_setPWMdc+1
   957  03E6  07C4               	addwf	?_setPWMdc+1,f
   958  03E7  0835               	movf	?___fttol,w
   959  03E8  01C3               	clrf	?_setPWMdc
   960  03E9  07C3               	addwf	?_setPWMdc,f
   961  03EA  251A               	fcall	_setPWMdc
   962                           
   963                           ;PICsun_main.c: 150: PIR1bits.TMR2IF = 0;
   964  03EB  0020               	movlb	0	; select bank0
   965  03EC  1091               	bcf	17,1	;volatile
   966                           
   967                           ;PICsun_main.c: 151: T2CONbits.TMR2ON = 1;
   968  03ED  151C               	bsf	28,2	;volatile
   969                           
   970                           ;PICsun_main.c: 152: TRISAbits.TRISA5 = 0;
   971  03EE  0021               	movlb	1	; select bank1
   972  03EF  128C               	bcf	12,5	;volatile
   973  03F0  0008               	return
   974  03F1                     __end_of_simulate:	
   975                           
   976                           	psect	text3
   977  02F0                     __ptext3:	
   978 ;; *************** function ___fttol *****************
   979 ;; Defined at:
   980 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\fttol.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  f1              3   21[BANK0 ] float 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  lval            4   30[BANK0 ] unsigned long 
   985 ;;  exp1            1   34[BANK0 ] unsigned char 
   986 ;;  sign1           1   29[BANK0 ] unsigned char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  4   21[BANK0 ] long 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1
   996 ;;      Params:         0       4       0
   997 ;;      Locals:         0       6       0
   998 ;;      Temps:          0       4       0
   999 ;;      Totals:         0      14       0
  1000 ;;Total ram usage:       14 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    2
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_simulate
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function ___fttol
  1012  02F0                     ___fttol:	
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1016  02F0  0020               	movlb	0	; select bank0
  1017  02F1  0835               	movf	___fttol@f1,w
  1018  02F2  00B9               	movwf	??___fttol
  1019  02F3  0836               	movf	___fttol@f1+1,w
  1020  02F4  00BA               	movwf	??___fttol+1
  1021  02F5  0837               	movf	___fttol@f1+2,w
  1022  02F6  00BB               	movwf	??___fttol+2
  1023  02F7  1003               	clrc
  1024  02F8  0D3A               	rlf	??___fttol+1,w
  1025  02F9  0D3B               	rlf	??___fttol+2,w
  1026  02FA  00BC               	movwf	??___fttol+3
  1027  02FB  083C               	movf	??___fttol+3,w
  1028  02FC  00C2               	movwf	___fttol@exp1
  1029  02FD  08C2               	movf	___fttol@exp1,f
  1030  02FE  1D03               	skipz
  1031  02FF  2B09               	goto	l1689
  1032  0300  3000               	movlw	0
  1033  0301  00B8               	movwf	?___fttol+3
  1034  0302  3000               	movlw	0
  1035  0303  00B7               	movwf	?___fttol+2
  1036  0304  3000               	movlw	0
  1037  0305  00B6               	movwf	?___fttol+1
  1038  0306  3000               	movlw	0
  1039  0307  00B5               	movwf	?___fttol
  1040  0308  0008               	return
  1041  0309                     l1689:	
  1042  0309  0835               	movf	___fttol@f1,w
  1043  030A  00B9               	movwf	??___fttol
  1044  030B  0836               	movf	___fttol@f1+1,w
  1045  030C  00BA               	movwf	??___fttol+1
  1046  030D  0837               	movf	___fttol@f1+2,w
  1047  030E  00BB               	movwf	??___fttol+2
  1048  030F  3017               	movlw	23
  1049  0310                     u1645:	
  1050  0310  36BB               	lsrf	??___fttol+2,f
  1051  0311  0CBA               	rrf	??___fttol+1,f
  1052  0312  0CB9               	rrf	??___fttol,f
  1053  0313  0B89               	decfsz	9,f
  1054  0314  2B10               	goto	u1645
  1055  0315  0839               	movf	??___fttol,w
  1056  0316  00BC               	movwf	??___fttol+3
  1057  0317  083C               	movf	??___fttol+3,w
  1058  0318  00BD               	movwf	___fttol@sign1
  1059  0319  17B6               	bsf	___fttol@f1+1,7
  1060  031A  30FF               	movlw	255
  1061  031B  05B5               	andwf	___fttol@f1,f
  1062  031C  30FF               	movlw	255
  1063  031D  05B6               	andwf	___fttol@f1+1,f
  1064  031E  3000               	movlw	0
  1065  031F  05B7               	andwf	___fttol@f1+2,f
  1066  0320  0835               	movf	___fttol@f1,w
  1067  0321  00BE               	movwf	___fttol@lval
  1068  0322  0836               	movf	___fttol@f1+1,w
  1069  0323  00BF               	movwf	___fttol@lval+1
  1070  0324  0837               	movf	___fttol@f1+2,w
  1071  0325  00C0               	movwf	___fttol@lval+2
  1072  0326  01C1               	clrf	___fttol@lval+3
  1073  0327  308E               	movlw	142
  1074  0328  02C2               	subwf	___fttol@exp1,f
  1075  0329  1FC2               	btfss	___fttol@exp1,7
  1076  032A  2B47               	goto	l1709
  1077  032B  0842               	movf	___fttol@exp1,w
  1078  032C  3A80               	xorlw	128
  1079  032D  3E8F               	addlw	143
  1080  032E  1803               	skipnc
  1081  032F  2B39               	goto	l1707
  1082  0330  3000               	movlw	0
  1083  0331  00B8               	movwf	?___fttol+3
  1084  0332  3000               	movlw	0
  1085  0333  00B7               	movwf	?___fttol+2
  1086  0334  3000               	movlw	0
  1087  0335  00B6               	movwf	?___fttol+1
  1088  0336  3000               	movlw	0
  1089  0337  00B5               	movwf	?___fttol
  1090  0338  0008               	return
  1091  0339                     l1707:	
  1092  0339  3001               	movlw	1
  1093  033A                     u1675:	
  1094  033A  36C1               	lsrf	___fttol@lval+3,f
  1095  033B  0CC0               	rrf	___fttol@lval+2,f
  1096  033C  0CBF               	rrf	___fttol@lval+1,f
  1097  033D  0CBE               	rrf	___fttol@lval,f
  1098  033E  0B89               	decfsz	9,f
  1099  033F  2B3A               	goto	u1675
  1100  0340  3001               	movlw	1
  1101  0341  00B9               	movwf	??___fttol
  1102  0342  0839               	movf	??___fttol,w
  1103  0343  07C2               	addwf	___fttol@exp1,f
  1104  0344  1903               	btfsc	3,2
  1105  0345  2B60               	goto	l1719
  1106  0346  2B39               	goto	l1707
  1107  0347                     l1709:	
  1108  0347  3018               	movlw	24
  1109  0348  0242               	subwf	___fttol@exp1,w
  1110  0349  1C03               	skipc
  1111  034A  2B5D               	goto	l1717
  1112  034B  3000               	movlw	0
  1113  034C  00B8               	movwf	?___fttol+3
  1114  034D  3000               	movlw	0
  1115  034E  00B7               	movwf	?___fttol+2
  1116  034F  3000               	movlw	0
  1117  0350  00B6               	movwf	?___fttol+1
  1118  0351  3000               	movlw	0
  1119  0352  00B5               	movwf	?___fttol
  1120  0353  0008               	return
  1121  0354                     l1715:	
  1122  0354  3001               	movlw	1
  1123  0355                     u1705:	
  1124  0355  35BE               	lslf	___fttol@lval,f
  1125  0356  0DBF               	rlf	___fttol@lval+1,f
  1126  0357  0DC0               	rlf	___fttol@lval+2,f
  1127  0358  0DC1               	rlf	___fttol@lval+3,f
  1128  0359  0B89               	decfsz	9,f
  1129  035A  2B55               	goto	u1705
  1130  035B  3001               	movlw	1
  1131  035C  02C2               	subwf	___fttol@exp1,f
  1132  035D                     l1717:	
  1133  035D  08C2               	movf	___fttol@exp1,f
  1134  035E  1D03               	skipz
  1135  035F  2B54               	goto	l1715
  1136  0360                     l1719:	
  1137  0360  083D               	movf	___fttol@sign1,w
  1138  0361  1903               	btfsc	3,2
  1139  0362  2B6E               	goto	l1723
  1140  0363  09BE               	comf	___fttol@lval,f
  1141  0364  09BF               	comf	___fttol@lval+1,f
  1142  0365  09C0               	comf	___fttol@lval+2,f
  1143  0366  09C1               	comf	___fttol@lval+3,f
  1144  0367  0ABE               	incf	___fttol@lval,f
  1145  0368  1903               	skipnz
  1146  0369  0ABF               	incf	___fttol@lval+1,f
  1147  036A  1903               	skipnz
  1148  036B  0AC0               	incf	___fttol@lval+2,f
  1149  036C  1903               	skipnz
  1150  036D  0AC1               	incf	___fttol@lval+3,f
  1151  036E                     l1723:	
  1152  036E  0841               	movf	___fttol@lval+3,w
  1153  036F  00B8               	movwf	?___fttol+3
  1154  0370  0840               	movf	___fttol@lval+2,w
  1155  0371  00B7               	movwf	?___fttol+2
  1156  0372  083F               	movf	___fttol@lval+1,w
  1157  0373  00B6               	movwf	?___fttol+1
  1158  0374  083E               	movf	___fttol@lval,w
  1159  0375  00B5               	movwf	?___fttol
  1160  0376  0008               	return
  1161  0377                     __end_of___fttol:	
  1162                           
  1163                           	psect	text4
  1164  0582                     __ptext4:	
  1165 ;; *************** function ___ftsub *****************
  1166 ;; Defined at:
  1167 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftsub.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  f2              3   21[BANK0 ] float 
  1170 ;;  f1              3   24[BANK0 ] float 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  3   21[BANK0 ] float 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1
  1182 ;;      Params:         0       6       0
  1183 ;;      Locals:         0       0       0
  1184 ;;      Temps:          0       0       0
  1185 ;;      Totals:         0       6       0
  1186 ;;Total ram usage:        6 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    4
  1189 ;; This function calls:
  1190 ;;		___ftadd
  1191 ;; This function is called by:
  1192 ;;		_simulate
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function ___ftsub
  1198  0582                     ___ftsub:	
  1199                           
  1200                           ;incstack = 0
  1201                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  1202  0582  3080               	movlw	128
  1203  0583  0020               	movlb	0	; select bank0
  1204  0584  06B7               	xorwf	___ftsub@f2+2,f
  1205  0585  0838               	movf	___ftsub@f1,w
  1206  0586  00A8               	movwf	?___ftadd
  1207  0587  0839               	movf	___ftsub@f1+1,w
  1208  0588  00A9               	movwf	?___ftadd+1
  1209  0589  083A               	movf	___ftsub@f1+2,w
  1210  058A  00AA               	movwf	?___ftadd+2
  1211  058B  0835               	movf	___ftsub@f2,w
  1212  058C  00AB               	movwf	?___ftadd+3
  1213  058D  0836               	movf	___ftsub@f2+1,w
  1214  058E  00AC               	movwf	?___ftadd+4
  1215  058F  0837               	movf	___ftsub@f2+2,w
  1216  0590  00AD               	movwf	?___ftadd+5
  1217  0591  2074               	fcall	___ftadd
  1218  0592  0020               	movlb	0	; select bank0
  1219  0593  0828               	movf	?___ftadd,w
  1220  0594  00B5               	movwf	?___ftsub
  1221  0595  0829               	movf	?___ftadd+1,w
  1222  0596  00B6               	movwf	?___ftsub+1
  1223  0597  082A               	movf	?___ftadd+2,w
  1224  0598  00B7               	movwf	?___ftsub+2
  1225  0599  0008               	return
  1226  059A                     __end_of___ftsub:	
  1227                           
  1228                           	psect	text5
  1229  05C8                     __ptext5:	
  1230 ;; *************** function ___ftneg *****************
  1231 ;; Defined at:
  1232 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftneg.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  f1              3    0[BANK0 ] float 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  3    0[BANK0 ] float 
  1239 ;; Registers used:
  1240 ;;		wreg
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1
  1246 ;;      Params:         0       3       0
  1247 ;;      Locals:         0       0       0
  1248 ;;      Temps:          0       0       0
  1249 ;;      Totals:         0       3       0
  1250 ;;Total ram usage:        3 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    2
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_simulate
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           
  1261                           ;psect for function ___ftneg
  1262  05C8                     ___ftneg:	
  1263                           
  1264                           ;incstack = 0
  1265                           ; Regs used in ___ftneg: [wreg]
  1266  05C8  0020               	movlb	0	; select bank0
  1267  05C9  0822               	movf	___ftneg@f1+2,w
  1268  05CA  0421               	iorwf	___ftneg@f1+1,w
  1269  05CB  0420               	iorwf	___ftneg@f1,w
  1270  05CC  1903               	skipnz
  1271  05CD  0008               	return
  1272  05CE  3080               	movlw	128
  1273  05CF  06A2               	xorwf	___ftneg@f1+2,f
  1274  05D0  0008               	return
  1275  05D1                     __end_of___ftneg:	
  1276                           
  1277                           	psect	text6
  1278  051A                     __ptext6:	
  1279 ;; *************** function _setPWMdc *****************
  1280 ;; Defined at:
  1281 ;;		line 43 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  dc              2   35[BANK0 ] unsigned int 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;		None               void
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1
  1295 ;;      Params:         0       2       0
  1296 ;;      Locals:         0       0       0
  1297 ;;      Temps:          0       2       0
  1298 ;;      Totals:         0       4       0
  1299 ;;Total ram usage:        4 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    2
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_simulate
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _setPWMdc
  1311  051A                     _setPWMdc:	
  1312                           
  1313                           ;PICsun_main.c: 44: if (dc > 1023)dc = 1023;
  1314                           
  1315                           ;incstack = 0
  1316                           ; Regs used in _setPWMdc: [wreg+status,2+status,0]
  1317  051A  3004               	movlw	4
  1318  051B  0020               	movlb	0	; select bank0
  1319  051C  0244               	subwf	setPWMdc@dc+1,w
  1320  051D  3000               	movlw	0
  1321  051E  1903               	skipnz
  1322  051F  0243               	subwf	setPWMdc@dc,w
  1323  0520  1C03               	skipc
  1324  0521  2D26               	goto	l1339
  1325  0522  30FF               	movlw	255
  1326  0523  00C3               	movwf	setPWMdc@dc
  1327  0524  3003               	movlw	3
  1328  0525  00C4               	movwf	setPWMdc@dc+1
  1329  0526                     l1339:	
  1330                           
  1331                           ;PICsun_main.c: 45: CCPR1L = dc >> 2;
  1332  0526  0844               	movf	setPWMdc@dc+1,w
  1333  0527  00C6               	movwf	??_setPWMdc+1
  1334  0528  0843               	movf	setPWMdc@dc,w
  1335  0529  00C5               	movwf	??_setPWMdc
  1336  052A  36C6               	lsrf	??_setPWMdc+1,f
  1337  052B  0CC5               	rrf	??_setPWMdc,f
  1338  052C  36C6               	lsrf	??_setPWMdc+1,f
  1339  052D  0CC5               	rrf	??_setPWMdc,f
  1340  052E  0845               	movf	??_setPWMdc,w
  1341  052F  0025               	movlb	5	; select bank5
  1342  0530  0091               	movwf	17	;volatile
  1343                           
  1344                           ;PICsun_main.c: 46: CCP1CON = ((CCP1CON & 0b11001111) | ((dc << 4)&0b00110000));
  1345  0531  0020               	movlb	0	; select bank0
  1346  0532  0843               	movf	setPWMdc@dc,w
  1347  0533  00C5               	movwf	??_setPWMdc
  1348  0534  3004               	movlw	4
  1349  0535                     u965:	
  1350  0535  35C5               	lslf	??_setPWMdc,f
  1351  0536  0B89               	decfsz	9,f
  1352  0537  2D35               	goto	u965
  1353  0538  3030               	movlw	48
  1354  0539  0545               	andwf	??_setPWMdc,w
  1355  053A  00C6               	movwf	??_setPWMdc+1
  1356  053B  0025               	movlb	5	; select bank5
  1357  053C  0813               	movf	19,w	;volatile
  1358  053D  39CF               	andlw	207
  1359  053E  0020               	movlb	0	; select bank0
  1360  053F  0446               	iorwf	??_setPWMdc+1,w
  1361  0540  0025               	movlb	5	; select bank5
  1362  0541  0093               	movwf	19	;volatile
  1363  0542  0008               	return
  1364  0543                     __end_of_setPWMdc:	
  1365                           
  1366                           	psect	text7
  1367  0169                     __ptext7:	
  1368 ;; *************** function _calc_times *****************
  1369 ;; Defined at:
  1370 ;;		line 124 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;		None               void
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1
  1384 ;;      Params:         0       0       0
  1385 ;;      Locals:         0       0       0
  1386 ;;      Temps:          0       6       0
  1387 ;;      Totals:         0       6       0
  1388 ;;Total ram usage:        6 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    4
  1391 ;; This function calls:
  1392 ;;		___awdiv
  1393 ;;		___awtoft
  1394 ;;		___ftdiv
  1395 ;;		___lwtoft
  1396 ;;		___wmul
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _calc_times
  1404  0169                     _calc_times:	
  1405                           
  1406                           ;PICsun_main.c: 125: if (rcv_buffer[0] < 24 && rcv_buffer[3] < 24) {
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in _calc_times: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1410  0169  3018               	movlw	24
  1411  016A  0020               	movlb	0	; select bank0
  1412  016B  024A               	subwf	_rcv_buffer,w	;volatile
  1413  016C  1803               	skipnc
  1414  016D  2A46               	goto	l1853
  1415  016E  3018               	movlw	24
  1416  016F  024D               	subwf	_rcv_buffer+3,w	;volatile
  1417  0170  1803               	skipnc
  1418  0171  2A46               	goto	l1853
  1419                           
  1420                           ;PICsun_main.c: 126: sunrise_seconds = rcv_buffer[0] * 50 + (rcv_buffer[1]*5)/6;
  1421  0172  084A               	movf	_rcv_buffer,w	;volatile
  1422  0173  00BE               	movwf	??_calc_times
  1423  0174  01BF               	clrf	??_calc_times+1
  1424  0175  083E               	movf	??_calc_times,w
  1425  0176  00A0               	movwf	?___wmul
  1426  0177  083F               	movf	??_calc_times+1,w
  1427  0178  00A1               	movwf	?___wmul+1
  1428  0179  3032               	movlw	50
  1429  017A  00A2               	movwf	?___wmul+2
  1430  017B  3000               	movlw	0
  1431  017C  00A3               	movwf	?___wmul+3
  1432  017D  2564               	fcall	___wmul
  1433  017E  0020               	movlb	0	; select bank0
  1434  017F  0820               	movf	?___wmul,w
  1435  0180  00C0               	movwf	??_calc_times+2
  1436  0181  0821               	movf	?___wmul+1,w
  1437  0182  00C1               	movwf	??_calc_times+3
  1438  0183  3006               	movlw	6
  1439  0184  00A6               	movwf	?___awdiv
  1440  0185  3000               	movlw	0
  1441  0186  00A7               	movwf	?___awdiv+1
  1442  0187  084B               	movf	_rcv_buffer+1,w	;volatile
  1443  0188  00C2               	movwf	??_calc_times+4
  1444  0189  01C3               	clrf	??_calc_times+5
  1445  018A  0842               	movf	??_calc_times+4,w
  1446  018B  00A0               	movwf	?___wmul
  1447  018C  0843               	movf	??_calc_times+5,w
  1448  018D  00A1               	movwf	?___wmul+1
  1449  018E  3005               	movlw	5
  1450  018F  00A2               	movwf	?___wmul+2
  1451  0190  3000               	movlw	0
  1452  0191  00A3               	movwf	?___wmul+3
  1453  0192  2564               	fcall	___wmul
  1454  0193  0020               	movlb	0	; select bank0
  1455  0194  0821               	movf	?___wmul+1,w
  1456  0195  01A9               	clrf	?___awdiv+3
  1457  0196  07A9               	addwf	?___awdiv+3,f
  1458  0197  0820               	movf	?___wmul,w
  1459  0198  01A8               	clrf	?___awdiv+2
  1460  0199  07A8               	addwf	?___awdiv+2,f
  1461  019A  2452               	fcall	___awdiv
  1462  019B  0020               	movlb	0	; select bank0
  1463  019C  0826               	movf	?___awdiv,w
  1464  019D  0740               	addwf	??_calc_times+2,w
  1465  019E  00F0               	movwf	_sunrise_seconds
  1466  019F  0827               	movf	?___awdiv+1,w
  1467  01A0  3D41               	addwfc	??_calc_times+3,w
  1468  01A1  00F1               	movwf	_sunrise_seconds+1
  1469                           
  1470                           ;PICsun_main.c: 127: sunset_seconds = rcv_buffer[3] * 50+ (rcv_buffer[4]*5)/6;
  1471  01A2  084D               	movf	_rcv_buffer+3,w	;volatile
  1472  01A3  00BE               	movwf	??_calc_times
  1473  01A4  01BF               	clrf	??_calc_times+1
  1474  01A5  083E               	movf	??_calc_times,w
  1475  01A6  00A0               	movwf	?___wmul
  1476  01A7  083F               	movf	??_calc_times+1,w
  1477  01A8  00A1               	movwf	?___wmul+1
  1478  01A9  3032               	movlw	50
  1479  01AA  00A2               	movwf	?___wmul+2
  1480  01AB  3000               	movlw	0
  1481  01AC  00A3               	movwf	?___wmul+3
  1482  01AD  2564               	fcall	___wmul
  1483  01AE  0020               	movlb	0	; select bank0
  1484  01AF  0820               	movf	?___wmul,w
  1485  01B0  00C0               	movwf	??_calc_times+2
  1486  01B1  0821               	movf	?___wmul+1,w
  1487  01B2  00C1               	movwf	??_calc_times+3
  1488  01B3  3006               	movlw	6
  1489  01B4  00A6               	movwf	?___awdiv
  1490  01B5  3000               	movlw	0
  1491  01B6  00A7               	movwf	?___awdiv+1
  1492  01B7  084E               	movf	_rcv_buffer+4,w	;volatile
  1493  01B8  00C2               	movwf	??_calc_times+4
  1494  01B9  01C3               	clrf	??_calc_times+5
  1495  01BA  0842               	movf	??_calc_times+4,w
  1496  01BB  00A0               	movwf	?___wmul
  1497  01BC  0843               	movf	??_calc_times+5,w
  1498  01BD  00A1               	movwf	?___wmul+1
  1499  01BE  3005               	movlw	5
  1500  01BF  00A2               	movwf	?___wmul+2
  1501  01C0  3000               	movlw	0
  1502  01C1  00A3               	movwf	?___wmul+3
  1503  01C2  2564               	fcall	___wmul
  1504  01C3  0020               	movlb	0	; select bank0
  1505  01C4  0821               	movf	?___wmul+1,w
  1506  01C5  01A9               	clrf	?___awdiv+3
  1507  01C6  07A9               	addwf	?___awdiv+3,f
  1508  01C7  0820               	movf	?___wmul,w
  1509  01C8  01A8               	clrf	?___awdiv+2
  1510  01C9  07A8               	addwf	?___awdiv+2,f
  1511  01CA  2452               	fcall	___awdiv
  1512  01CB  0020               	movlb	0	; select bank0
  1513  01CC  0826               	movf	?___awdiv,w
  1514  01CD  0740               	addwf	??_calc_times+2,w
  1515  01CE  00DC               	movwf	_sunset_seconds
  1516  01CF  0827               	movf	?___awdiv+1,w
  1517  01D0  3D41               	addwfc	??_calc_times+3,w
  1518  01D1  00DD               	movwf	_sunset_seconds+1
  1519                           
  1520                           ;PICsun_main.c: 128: peak_light_time = sunrise_seconds + ((sunset_seconds - sunrise_seco
      +                          nds) >> 1);
  1521  01D2  0970               	comf	_sunrise_seconds,w
  1522  01D3  00BE               	movwf	??_calc_times
  1523  01D4  0971               	comf	_sunrise_seconds+1,w
  1524  01D5  00BF               	movwf	??_calc_times+1
  1525  01D6  0ABE               	incf	??_calc_times,f
  1526  01D7  1903               	skipnz
  1527  01D8  0ABF               	incf	??_calc_times+1,f
  1528  01D9  085C               	movf	_sunset_seconds,w
  1529  01DA  073E               	addwf	??_calc_times,w
  1530  01DB  00C0               	movwf	??_calc_times+2
  1531  01DC  085D               	movf	_sunset_seconds+1,w
  1532  01DD  3D3F               	addwfc	??_calc_times+1,w
  1533  01DE  00C1               	movwf	??_calc_times+3
  1534  01DF  36C1               	lsrf	??_calc_times+3,f
  1535  01E0  0CC0               	rrf	??_calc_times+2,f
  1536  01E1  0870               	movf	_sunrise_seconds,w
  1537  01E2  0740               	addwf	??_calc_times+2,w
  1538  01E3  00D8               	movwf	_peak_light_time
  1539  01E4  0871               	movf	_sunrise_seconds+1,w
  1540  01E5  3D41               	addwfc	??_calc_times+3,w
  1541  01E6  00D9               	movwf	_peak_light_time+1
  1542                           
  1543                           ;PICsun_main.c: 131: light_peak = -80 + 60 * (int16_t) (rcv_buffer[3] - rcv_buffer[0]);
  1544  01E7  084A               	movf	_rcv_buffer,w	;volatile
  1545  01E8  00BE               	movwf	??_calc_times
  1546  01E9  01BF               	clrf	??_calc_times+1
  1547  01EA  09BE               	comf	??_calc_times,f
  1548  01EB  09BF               	comf	??_calc_times+1,f
  1549  01EC  0ABE               	incf	??_calc_times,f
  1550  01ED  1903               	skipnz
  1551  01EE  0ABF               	incf	??_calc_times+1,f
  1552  01EF  084D               	movf	_rcv_buffer+3,w	;volatile
  1553  01F0  073E               	addwf	??_calc_times,w
  1554  01F1  00A0               	movwf	?___wmul
  1555  01F2  083F               	movf	??_calc_times+1,w
  1556  01F3  1803               	skipnc
  1557  01F4  0A3F               	incf	??_calc_times+1,w
  1558  01F5  00A1               	movwf	?___wmul+1
  1559  01F6  303C               	movlw	60
  1560  01F7  00A2               	movwf	?___wmul+2
  1561  01F8  3000               	movlw	0
  1562  01F9  00A3               	movwf	?___wmul+3
  1563  01FA  2564               	fcall	___wmul
  1564  01FB  0020               	movlb	0	; select bank0
  1565  01FC  0820               	movf	?___wmul,w
  1566  01FD  3EB0               	addlw	176
  1567  01FE  00D6               	movwf	_light_peak
  1568  01FF  30FF               	movlw	255
  1569  0200  3D21               	addwfc	?___wmul+1,w
  1570  0201  00D7               	movwf	_light_peak+1
  1571                           
  1572                           ;PICsun_main.c: 132: if (light_peak > 1023)light_peak = 1023;
  1573  0202  0857               	movf	_light_peak+1,w
  1574  0203  3A80               	xorlw	128
  1575  0204  00FF               	movwf	127
  1576  0205  3084               	movlw	132
  1577  0206  027F               	subwf	127,w
  1578  0207  1D03               	skipz
  1579  0208  2A0B               	goto	u1915
  1580  0209  3000               	movlw	0
  1581  020A  0256               	subwf	_light_peak,w
  1582  020B                     u1915:	
  1583  020B  1C03               	skipc
  1584  020C  2A12               	goto	l1849
  1585  020D  30FF               	movlw	255
  1586  020E  0020               	movlb	0	; select bank0
  1587  020F  00D6               	movwf	_light_peak
  1588  0210  3003               	movlw	3
  1589  0211  00D7               	movwf	_light_peak+1
  1590  0212                     l1849:	
  1591                           
  1592                           ;PICsun_main.c: 133: delta = (float)light_peak /(float)((sunset_seconds - sunrise_second
      +                          s) >> 1);
  1593  0212  0970               	comf	_sunrise_seconds,w
  1594  0213  0020               	movlb	0	; select bank0
  1595  0214  00BE               	movwf	??_calc_times
  1596  0215  0971               	comf	_sunrise_seconds+1,w
  1597  0216  00BF               	movwf	??_calc_times+1
  1598  0217  0ABE               	incf	??_calc_times,f
  1599  0218  1903               	skipnz
  1600  0219  0ABF               	incf	??_calc_times+1,f
  1601  021A  085C               	movf	_sunset_seconds,w
  1602  021B  073E               	addwf	??_calc_times,w
  1603  021C  00C0               	movwf	??_calc_times+2
  1604  021D  085D               	movf	_sunset_seconds+1,w
  1605  021E  3D3F               	addwfc	??_calc_times+1,w
  1606  021F  00C1               	movwf	??_calc_times+3
  1607  0220  36C1               	lsrf	??_calc_times+3,f
  1608  0221  0CC0               	rrf	??_calc_times+2,f
  1609  0222  0840               	movf	??_calc_times+2,w
  1610  0223  00A8               	movwf	?___lwtoft
  1611  0224  0841               	movf	??_calc_times+3,w
  1612  0225  00A9               	movwf	?___lwtoft+1
  1613  0226  259A               	fcall	___lwtoft
  1614  0227  0020               	movlb	0	; select bank0
  1615  0228  0828               	movf	?___lwtoft,w
  1616  0229  00AE               	movwf	?___ftdiv
  1617  022A  0829               	movf	?___lwtoft+1,w
  1618  022B  00AF               	movwf	?___ftdiv+1
  1619  022C  082A               	movf	?___lwtoft+2,w
  1620  022D  00B0               	movwf	?___ftdiv+2
  1621  022E  0857               	movf	_light_peak+1,w
  1622  022F  01A9               	clrf	?___awtoft+1
  1623  0230  07A9               	addwf	?___awtoft+1,f
  1624  0231  0856               	movf	_light_peak,w
  1625  0232  01A8               	clrf	?___awtoft
  1626  0233  07A8               	addwf	?___awtoft,f
  1627  0234  2543               	fcall	___awtoft
  1628  0235  0020               	movlb	0	; select bank0
  1629  0236  0828               	movf	?___awtoft,w
  1630  0237  00B1               	movwf	?___ftdiv+3
  1631  0238  0829               	movf	?___awtoft+1,w
  1632  0239  00B2               	movwf	?___ftdiv+4
  1633  023A  082A               	movf	?___awtoft+2,w
  1634  023B  00B3               	movwf	?___ftdiv+5
  1635  023C  2248               	fcall	___ftdiv
  1636  023D  0020               	movlb	0	; select bank0
  1637  023E  082E               	movf	?___ftdiv,w
  1638  023F  00D0               	movwf	_delta
  1639  0240  082F               	movf	?___ftdiv+1,w
  1640  0241  00D1               	movwf	_delta+1
  1641  0242  0830               	movf	?___ftdiv+2,w
  1642  0243  00D2               	movwf	_delta+2
  1643                           
  1644                           ;PICsun_main.c: 134: simulated_time = 0;
  1645  0244  01DA               	clrf	_simulated_time
  1646  0245  01DB               	clrf	_simulated_time+1
  1647  0246                     l1853:	
  1648                           
  1649                           ;PICsun_main.c: 135: }
  1650                           ;PICsun_main.c: 136: buffer_valid = 0;
  1651  0246  01F2               	clrf	_buffer_valid	;volatile
  1652  0247  0008               	return
  1653  0248                     __end_of_calc_times:	
  1654                           
  1655                           	psect	text8
  1656  0564                     __ptext8:	
  1657 ;; *************** function ___wmul *****************
  1658 ;; Defined at:
  1659 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1662 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  product         2    4[BANK0 ] unsigned int 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  2    0[BANK0 ] unsigned int 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1
  1674 ;;      Params:         0       4       0
  1675 ;;      Locals:         0       2       0
  1676 ;;      Temps:          0       0       0
  1677 ;;      Totals:         0       6       0
  1678 ;;Total ram usage:        6 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    2
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_calc_times
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function ___wmul
  1690  0564                     ___wmul:	
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1694  0564  0020               	movlb	0	; select bank0
  1695  0565  01A4               	clrf	___wmul@product
  1696  0566  01A5               	clrf	___wmul@product+1
  1697  0567                     l2129:	
  1698  0567  1C20               	btfss	___wmul@multiplier,0
  1699  0568  2D6D               	goto	l573
  1700  0569  0822               	movf	___wmul@multiplicand,w
  1701  056A  07A4               	addwf	___wmul@product,f
  1702  056B  0823               	movf	___wmul@multiplicand+1,w
  1703  056C  3DA5               	addwfc	___wmul@product+1,f
  1704  056D                     l573:	
  1705  056D  3001               	movlw	1
  1706  056E                     u2435:	
  1707  056E  35A2               	lslf	___wmul@multiplicand,f
  1708  056F  0DA3               	rlf	___wmul@multiplicand+1,f
  1709  0570  0B89               	decfsz	9,f
  1710  0571  2D6E               	goto	u2435
  1711  0572  3001               	movlw	1
  1712  0573                     u2445:	
  1713  0573  36A1               	lsrf	___wmul@multiplier+1,f
  1714  0574  0CA0               	rrf	___wmul@multiplier,f
  1715  0575  0B89               	decfsz	9,f
  1716  0576  2D73               	goto	u2445
  1717  0577  0821               	movf	___wmul@multiplier+1,w
  1718  0578  0420               	iorwf	___wmul@multiplier,w
  1719  0579  1D03               	skipz
  1720  057A  2D67               	goto	l2129
  1721  057B  0825               	movf	___wmul@product+1,w
  1722  057C  01A1               	clrf	?___wmul+1
  1723  057D  07A1               	addwf	?___wmul+1,f
  1724  057E  0824               	movf	___wmul@product,w
  1725  057F  01A0               	clrf	?___wmul
  1726  0580  07A0               	addwf	?___wmul,f
  1727  0581  0008               	return
  1728  0582                     __end_of___wmul:	
  1729                           
  1730                           	psect	text9
  1731  059A                     __ptext9:	
  1732 ;; *************** function ___lwtoft *****************
  1733 ;; Defined at:
  1734 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lwtoft.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  c               2    8[BANK0 ] unsigned int 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  3    8[BANK0 ] float 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0, pclath, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1
  1748 ;;      Params:         0       3       0
  1749 ;;      Locals:         0       0       0
  1750 ;;      Temps:          0       1       0
  1751 ;;      Totals:         0       4       0
  1752 ;;Total ram usage:        4 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    3
  1755 ;; This function calls:
  1756 ;;		___ftpack
  1757 ;; This function is called by:
  1758 ;;		_calc_times
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function ___lwtoft
  1764  059A                     ___lwtoft:	
  1765                           
  1766                           ;incstack = 0
  1767                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1768  059A  0020               	movlb	0	; select bank0
  1769  059B  0828               	movf	___lwtoft@c,w
  1770  059C  00A0               	movwf	?___ftpack
  1771  059D  0829               	movf	___lwtoft@c+1,w
  1772  059E  00A1               	movwf	?___ftpack+1
  1773  059F  01A2               	clrf	?___ftpack+2
  1774  05A0  308E               	movlw	142
  1775  05A1  00AB               	movwf	??___lwtoft
  1776  05A2  082B               	movf	??___lwtoft,w
  1777  05A3  00A3               	movwf	?___ftpack+3
  1778  05A4  01A4               	clrf	?___ftpack+4
  1779  05A5  23F1               	fcall	___ftpack
  1780  05A6  0020               	movlb	0	; select bank0
  1781  05A7  0820               	movf	?___ftpack,w
  1782  05A8  00A8               	movwf	?___lwtoft
  1783  05A9  0821               	movf	?___ftpack+1,w
  1784  05AA  00A9               	movwf	?___lwtoft+1
  1785  05AB  0822               	movf	?___ftpack+2,w
  1786  05AC  00AA               	movwf	?___lwtoft+2
  1787  05AD  0008               	return
  1788  05AE                     __end_of___lwtoft:	
  1789                           
  1790                           	psect	text10
  1791  0248                     __ptext10:	
  1792 ;; *************** function ___ftdiv *****************
  1793 ;; Defined at:
  1794 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftdiv.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  f2              3   14[BANK0 ] float 
  1797 ;;  f1              3   17[BANK0 ] float 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  f3              3   25[BANK0 ] float 
  1800 ;;  sign            1   29[BANK0 ] unsigned char 
  1801 ;;  exp             1   28[BANK0 ] unsigned char 
  1802 ;;  cntr            1   24[BANK0 ] unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  3   14[BANK0 ] float 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0, pclath, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1
  1812 ;;      Params:         0       6       0
  1813 ;;      Locals:         0       6       0
  1814 ;;      Temps:          0       4       0
  1815 ;;      Totals:         0      16       0
  1816 ;;Total ram usage:       16 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    3
  1819 ;; This function calls:
  1820 ;;		___ftpack
  1821 ;; This function is called by:
  1822 ;;		_calc_times
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function ___ftdiv
  1828  0248                     ___ftdiv:	
  1829                           
  1830                           ;incstack = 0
  1831                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1832  0248  0020               	movlb	0	; select bank0
  1833  0249  0831               	movf	___ftdiv@f1,w
  1834  024A  00B4               	movwf	??___ftdiv
  1835  024B  0832               	movf	___ftdiv@f1+1,w
  1836  024C  00B5               	movwf	??___ftdiv+1
  1837  024D  0833               	movf	___ftdiv@f1+2,w
  1838  024E  00B6               	movwf	??___ftdiv+2
  1839  024F  1003               	clrc
  1840  0250  0D35               	rlf	??___ftdiv+1,w
  1841  0251  0D36               	rlf	??___ftdiv+2,w
  1842  0252  00B7               	movwf	??___ftdiv+3
  1843  0253  0837               	movf	??___ftdiv+3,w
  1844  0254  00BC               	movwf	___ftdiv@exp
  1845  0255  08BC               	movf	___ftdiv@exp,f
  1846  0256  1D03               	skipz
  1847  0257  2A5F               	goto	l2073
  1848  0258  3000               	movlw	0
  1849  0259  00AE               	movwf	?___ftdiv
  1850  025A  3000               	movlw	0
  1851  025B  00AF               	movwf	?___ftdiv+1
  1852  025C  3000               	movlw	0
  1853  025D  00B0               	movwf	?___ftdiv+2
  1854  025E  0008               	return
  1855  025F                     l2073:	
  1856  025F  082E               	movf	___ftdiv@f2,w
  1857  0260  00B4               	movwf	??___ftdiv
  1858  0261  082F               	movf	___ftdiv@f2+1,w
  1859  0262  00B5               	movwf	??___ftdiv+1
  1860  0263  0830               	movf	___ftdiv@f2+2,w
  1861  0264  00B6               	movwf	??___ftdiv+2
  1862  0265  1003               	clrc
  1863  0266  0D35               	rlf	??___ftdiv+1,w
  1864  0267  0D36               	rlf	??___ftdiv+2,w
  1865  0268  00B7               	movwf	??___ftdiv+3
  1866  0269  0837               	movf	??___ftdiv+3,w
  1867  026A  00BD               	movwf	___ftdiv@sign
  1868  026B  08BD               	movf	___ftdiv@sign,f
  1869  026C  1D03               	skipz
  1870  026D  2A75               	goto	l2079
  1871  026E  3000               	movlw	0
  1872  026F  00AE               	movwf	?___ftdiv
  1873  0270  3000               	movlw	0
  1874  0271  00AF               	movwf	?___ftdiv+1
  1875  0272  3000               	movlw	0
  1876  0273  00B0               	movwf	?___ftdiv+2
  1877  0274  0008               	return
  1878  0275                     l2079:	
  1879  0275  3000               	movlw	0
  1880  0276  00B9               	movwf	___ftdiv@f3
  1881  0277  3000               	movlw	0
  1882  0278  00BA               	movwf	___ftdiv@f3+1
  1883  0279  3000               	movlw	0
  1884  027A  00BB               	movwf	___ftdiv@f3+2
  1885  027B  3089               	movlw	137
  1886  027C  073D               	addwf	___ftdiv@sign,w
  1887  027D  00B4               	movwf	??___ftdiv
  1888  027E  0834               	movf	??___ftdiv,w
  1889  027F  02BC               	subwf	___ftdiv@exp,f
  1890  0280  0831               	movf	___ftdiv@f1,w
  1891  0281  00B4               	movwf	??___ftdiv
  1892  0282  0832               	movf	___ftdiv@f1+1,w
  1893  0283  00B5               	movwf	??___ftdiv+1
  1894  0284  0833               	movf	___ftdiv@f1+2,w
  1895  0285  00B6               	movwf	??___ftdiv+2
  1896  0286  3010               	movlw	16
  1897  0287                     u2355:	
  1898  0287  36B6               	lsrf	??___ftdiv+2,f
  1899  0288  0CB5               	rrf	??___ftdiv+1,f
  1900  0289  0CB4               	rrf	??___ftdiv,f
  1901  028A  0B89               	decfsz	9,f
  1902  028B  2A87               	goto	u2355
  1903  028C  0834               	movf	??___ftdiv,w
  1904  028D  00B7               	movwf	??___ftdiv+3
  1905  028E  0837               	movf	??___ftdiv+3,w
  1906  028F  00BD               	movwf	___ftdiv@sign
  1907  0290  082E               	movf	___ftdiv@f2,w
  1908  0291  00B4               	movwf	??___ftdiv
  1909  0292  082F               	movf	___ftdiv@f2+1,w
  1910  0293  00B5               	movwf	??___ftdiv+1
  1911  0294  0830               	movf	___ftdiv@f2+2,w
  1912  0295  00B6               	movwf	??___ftdiv+2
  1913  0296  3010               	movlw	16
  1914  0297                     u2365:	
  1915  0297  36B6               	lsrf	??___ftdiv+2,f
  1916  0298  0CB5               	rrf	??___ftdiv+1,f
  1917  0299  0CB4               	rrf	??___ftdiv,f
  1918  029A  0B89               	decfsz	9,f
  1919  029B  2A97               	goto	u2365
  1920  029C  0834               	movf	??___ftdiv,w
  1921  029D  00B7               	movwf	??___ftdiv+3
  1922  029E  0837               	movf	??___ftdiv+3,w
  1923  029F  06BD               	xorwf	___ftdiv@sign,f
  1924  02A0  3080               	movlw	128
  1925  02A1  00B4               	movwf	??___ftdiv
  1926  02A2  0834               	movf	??___ftdiv,w
  1927  02A3  05BD               	andwf	___ftdiv@sign,f
  1928  02A4  17B2               	bsf	___ftdiv@f1+1,7
  1929  02A5  30FF               	movlw	255
  1930  02A6  05B1               	andwf	___ftdiv@f1,f
  1931  02A7  30FF               	movlw	255
  1932  02A8  05B2               	andwf	___ftdiv@f1+1,f
  1933  02A9  3000               	movlw	0
  1934  02AA  05B3               	andwf	___ftdiv@f1+2,f
  1935  02AB  17AF               	bsf	___ftdiv@f2+1,7
  1936  02AC  30FF               	movlw	255
  1937  02AD  05AE               	andwf	___ftdiv@f2,f
  1938  02AE  30FF               	movlw	255
  1939  02AF  05AF               	andwf	___ftdiv@f2+1,f
  1940  02B0  3000               	movlw	0
  1941  02B1  05B0               	andwf	___ftdiv@f2+2,f
  1942  02B2  3018               	movlw	24
  1943  02B3  00B4               	movwf	??___ftdiv
  1944  02B4  0834               	movf	??___ftdiv,w
  1945  02B5  00B8               	movwf	___ftdiv@cntr
  1946  02B6                     l2093:	
  1947  02B6  3001               	movlw	1
  1948  02B7                     u2375:	
  1949  02B7  35B9               	lslf	___ftdiv@f3,f
  1950  02B8  0DBA               	rlf	___ftdiv@f3+1,f
  1951  02B9  0DBB               	rlf	___ftdiv@f3+2,f
  1952  02BA  0B89               	decfsz	9,f
  1953  02BB  2AB7               	goto	u2375
  1954  02BC  0830               	movf	___ftdiv@f2+2,w
  1955  02BD  0233               	subwf	___ftdiv@f1+2,w
  1956  02BE  1D03               	skipz
  1957  02BF  2AC6               	goto	u2385
  1958  02C0  082F               	movf	___ftdiv@f2+1,w
  1959  02C1  0232               	subwf	___ftdiv@f1+1,w
  1960  02C2  1D03               	skipz
  1961  02C3  2AC6               	goto	u2385
  1962  02C4  082E               	movf	___ftdiv@f2,w
  1963  02C5  0231               	subwf	___ftdiv@f1,w
  1964  02C6                     u2385:	
  1965  02C6  1C03               	skipc
  1966  02C7  2ACF               	goto	l2101
  1967  02C8  082E               	movf	___ftdiv@f2,w
  1968  02C9  02B1               	subwf	___ftdiv@f1,f
  1969  02CA  082F               	movf	___ftdiv@f2+1,w
  1970  02CB  3BB2               	subwfb	___ftdiv@f1+1,f
  1971  02CC  0830               	movf	___ftdiv@f2+2,w
  1972  02CD  3BB3               	subwfb	___ftdiv@f1+2,f
  1973  02CE  1439               	bsf	___ftdiv@f3,0
  1974  02CF                     l2101:	
  1975  02CF  3001               	movlw	1
  1976  02D0                     u2395:	
  1977  02D0  35B1               	lslf	___ftdiv@f1,f
  1978  02D1  0DB2               	rlf	___ftdiv@f1+1,f
  1979  02D2  0DB3               	rlf	___ftdiv@f1+2,f
  1980  02D3  0B89               	decfsz	9,f
  1981  02D4  2AD0               	goto	u2395
  1982  02D5  3001               	movlw	1
  1983  02D6  02B8               	subwf	___ftdiv@cntr,f
  1984  02D7  1D03               	btfss	3,2
  1985  02D8  2AB6               	goto	l2093
  1986  02D9  0839               	movf	___ftdiv@f3,w
  1987  02DA  00A0               	movwf	?___ftpack
  1988  02DB  083A               	movf	___ftdiv@f3+1,w
  1989  02DC  00A1               	movwf	?___ftpack+1
  1990  02DD  083B               	movf	___ftdiv@f3+2,w
  1991  02DE  00A2               	movwf	?___ftpack+2
  1992  02DF  083C               	movf	___ftdiv@exp,w
  1993  02E0  00B4               	movwf	??___ftdiv
  1994  02E1  0834               	movf	??___ftdiv,w
  1995  02E2  00A3               	movwf	?___ftpack+3
  1996  02E3  083D               	movf	___ftdiv@sign,w
  1997  02E4  00B5               	movwf	??___ftdiv+1
  1998  02E5  0835               	movf	??___ftdiv+1,w
  1999  02E6  00A4               	movwf	?___ftpack+4
  2000  02E7  23F1               	fcall	___ftpack
  2001  02E8  0020               	movlb	0	; select bank0
  2002  02E9  0820               	movf	?___ftpack,w
  2003  02EA  00AE               	movwf	?___ftdiv
  2004  02EB  0821               	movf	?___ftpack+1,w
  2005  02EC  00AF               	movwf	?___ftdiv+1
  2006  02ED  0822               	movf	?___ftpack+2,w
  2007  02EE  00B0               	movwf	?___ftdiv+2
  2008  02EF  0008               	return
  2009  02F0                     __end_of___ftdiv:	
  2010                           
  2011                           	psect	text11
  2012  0543                     __ptext11:	
  2013 ;; *************** function ___awtoft *****************
  2014 ;; Defined at:
  2015 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awtoft.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  c               2    8[BANK0 ] int 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  sign            1   13[BANK0 ] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  3    8[BANK0 ] float 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1
  2029 ;;      Params:         0       3       0
  2030 ;;      Locals:         0       1       0
  2031 ;;      Temps:          0       2       0
  2032 ;;      Totals:         0       6       0
  2033 ;;Total ram usage:        6 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    3
  2036 ;; This function calls:
  2037 ;;		___ftpack
  2038 ;; This function is called by:
  2039 ;;		_calc_times
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function ___awtoft
  2045  0543                     ___awtoft:	
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2049  0543  0020               	movlb	0	; select bank0
  2050  0544  01AD               	clrf	___awtoft@sign
  2051  0545  1FA9               	btfss	___awtoft@c+1,7
  2052  0546  2D4E               	goto	l1991
  2053  0547  09A8               	comf	___awtoft@c,f
  2054  0548  09A9               	comf	___awtoft@c+1,f
  2055  0549  0AA8               	incf	___awtoft@c,f
  2056  054A  1903               	skipnz
  2057  054B  0AA9               	incf	___awtoft@c+1,f
  2058  054C  01AD               	clrf	___awtoft@sign
  2059  054D  0AAD               	incf	___awtoft@sign,f
  2060  054E                     l1991:	
  2061  054E  0828               	movf	___awtoft@c,w
  2062  054F  00A0               	movwf	?___ftpack
  2063  0550  0829               	movf	___awtoft@c+1,w
  2064  0551  00A1               	movwf	?___ftpack+1
  2065  0552  01A2               	clrf	?___ftpack+2
  2066  0553  308E               	movlw	142
  2067  0554  00AB               	movwf	??___awtoft
  2068  0555  082B               	movf	??___awtoft,w
  2069  0556  00A3               	movwf	?___ftpack+3
  2070  0557  082D               	movf	___awtoft@sign,w
  2071  0558  00AC               	movwf	??___awtoft+1
  2072  0559  082C               	movf	??___awtoft+1,w
  2073  055A  00A4               	movwf	?___ftpack+4
  2074  055B  23F1               	fcall	___ftpack
  2075  055C  0020               	movlb	0	; select bank0
  2076  055D  0820               	movf	?___ftpack,w
  2077  055E  00A8               	movwf	?___awtoft
  2078  055F  0821               	movf	?___ftpack+1,w
  2079  0560  00A9               	movwf	?___awtoft+1
  2080  0561  0822               	movf	?___ftpack+2,w
  2081  0562  00AA               	movwf	?___awtoft+2
  2082  0563  0008               	return
  2083  0564                     __end_of___awtoft:	
  2084                           
  2085                           	psect	text12
  2086  0452                     __ptext12:	
  2087 ;; *************** function ___awdiv *****************
  2088 ;; Defined at:
  2089 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awdiv.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  divisor         2    6[BANK0 ] int 
  2092 ;;  dividend        2    8[BANK0 ] int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  quotient        2   13[BANK0 ] int 
  2095 ;;  sign            1   12[BANK0 ] unsigned char 
  2096 ;;  counter         1   11[BANK0 ] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2    6[BANK0 ] int 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1
  2106 ;;      Params:         0       4       0
  2107 ;;      Locals:         0       4       0
  2108 ;;      Temps:          0       1       0
  2109 ;;      Totals:         0       9       0
  2110 ;;Total ram usage:        9 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    2
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_calc_times
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function ___awdiv
  2122  0452                     ___awdiv:	
  2123                           
  2124                           ;incstack = 0
  2125                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2126  0452  0020               	movlb	0	; select bank0
  2127  0453  01AC               	clrf	___awdiv@sign
  2128  0454  1FA7               	btfss	___awdiv@divisor+1,7
  2129  0455  2C5D               	goto	l1507
  2130  0456  09A6               	comf	___awdiv@divisor,f
  2131  0457  09A7               	comf	___awdiv@divisor+1,f
  2132  0458  0AA6               	incf	___awdiv@divisor,f
  2133  0459  1903               	skipnz
  2134  045A  0AA7               	incf	___awdiv@divisor+1,f
  2135  045B  01AC               	clrf	___awdiv@sign
  2136  045C  0AAC               	incf	___awdiv@sign,f
  2137  045D                     l1507:	
  2138  045D  1FA9               	btfss	___awdiv@dividend+1,7
  2139  045E  2C68               	goto	l1513
  2140  045F  09A8               	comf	___awdiv@dividend,f
  2141  0460  09A9               	comf	___awdiv@dividend+1,f
  2142  0461  0AA8               	incf	___awdiv@dividend,f
  2143  0462  1903               	skipnz
  2144  0463  0AA9               	incf	___awdiv@dividend+1,f
  2145  0464  3001               	movlw	1
  2146  0465  00AA               	movwf	??___awdiv
  2147  0466  082A               	movf	??___awdiv,w
  2148  0467  06AC               	xorwf	___awdiv@sign,f
  2149  0468                     l1513:	
  2150  0468  01AD               	clrf	___awdiv@quotient
  2151  0469  01AE               	clrf	___awdiv@quotient+1
  2152  046A  0827               	movf	___awdiv@divisor+1,w
  2153  046B  0426               	iorwf	___awdiv@divisor,w
  2154  046C  1903               	skipnz
  2155  046D  2C97               	goto	l1535
  2156  046E  01AB               	clrf	___awdiv@counter
  2157  046F  0AAB               	incf	___awdiv@counter,f
  2158  0470                     l1523:	
  2159  0470  1BA7               	btfsc	___awdiv@divisor+1,7
  2160  0471  2C7C               	goto	l1525
  2161  0472  3001               	movlw	1
  2162  0473                     u1235:	
  2163  0473  35A6               	lslf	___awdiv@divisor,f
  2164  0474  0DA7               	rlf	___awdiv@divisor+1,f
  2165  0475  0B89               	decfsz	9,f
  2166  0476  2C73               	goto	u1235
  2167  0477  3001               	movlw	1
  2168  0478  00AA               	movwf	??___awdiv
  2169  0479  082A               	movf	??___awdiv,w
  2170  047A  07AB               	addwf	___awdiv@counter,f
  2171  047B  2C70               	goto	l1523
  2172  047C                     l1525:	
  2173  047C  3001               	movlw	1
  2174  047D                     u1255:	
  2175  047D  35AD               	lslf	___awdiv@quotient,f
  2176  047E  0DAE               	rlf	___awdiv@quotient+1,f
  2177  047F  0B89               	decfsz	9,f
  2178  0480  2C7D               	goto	u1255
  2179  0481  0827               	movf	___awdiv@divisor+1,w
  2180  0482  0229               	subwf	___awdiv@dividend+1,w
  2181  0483  1D03               	skipz
  2182  0484  2C87               	goto	u1265
  2183  0485  0826               	movf	___awdiv@divisor,w
  2184  0486  0228               	subwf	___awdiv@dividend,w
  2185  0487                     u1265:	
  2186  0487  1C03               	skipc
  2187  0488  2C8E               	goto	l1531
  2188  0489  0826               	movf	___awdiv@divisor,w
  2189  048A  02A8               	subwf	___awdiv@dividend,f
  2190  048B  0827               	movf	___awdiv@divisor+1,w
  2191  048C  3BA9               	subwfb	___awdiv@dividend+1,f
  2192  048D  142D               	bsf	___awdiv@quotient,0
  2193  048E                     l1531:	
  2194  048E  3001               	movlw	1
  2195  048F                     u1275:	
  2196  048F  36A7               	lsrf	___awdiv@divisor+1,f
  2197  0490  0CA6               	rrf	___awdiv@divisor,f
  2198  0491  0B89               	decfsz	9,f
  2199  0492  2C8F               	goto	u1275
  2200  0493  3001               	movlw	1
  2201  0494  02AB               	subwf	___awdiv@counter,f
  2202  0495  1D03               	btfss	3,2
  2203  0496  2C7C               	goto	l1525
  2204  0497                     l1535:	
  2205  0497  082C               	movf	___awdiv@sign,w
  2206  0498  1903               	btfsc	3,2
  2207  0499  2C9F               	goto	l1539
  2208  049A  09AD               	comf	___awdiv@quotient,f
  2209  049B  09AE               	comf	___awdiv@quotient+1,f
  2210  049C  0AAD               	incf	___awdiv@quotient,f
  2211  049D  1903               	skipnz
  2212  049E  0AAE               	incf	___awdiv@quotient+1,f
  2213  049F                     l1539:	
  2214  049F  082E               	movf	___awdiv@quotient+1,w
  2215  04A0  01A7               	clrf	?___awdiv+1
  2216  04A1  07A7               	addwf	?___awdiv+1,f
  2217  04A2  082D               	movf	___awdiv@quotient,w
  2218  04A3  01A6               	clrf	?___awdiv
  2219  04A4  07A6               	addwf	?___awdiv,f
  2220  04A5  0008               	return
  2221  04A6                     __end_of___awdiv:	
  2222                           
  2223                           	psect	text13
  2224  0074                     __ptext13:	
  2225 ;; *************** function ___ftadd *****************
  2226 ;; Defined at:
  2227 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\ftadd.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  f1              3    8[BANK0 ] float 
  2230 ;;  f2              3   11[BANK0 ] float 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  exp1            1   20[BANK0 ] unsigned char 
  2233 ;;  exp2            1   19[BANK0 ] unsigned char 
  2234 ;;  sign            1   18[BANK0 ] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  3    8[BANK0 ] float 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1
  2244 ;;      Params:         0       6       0
  2245 ;;      Locals:         0       3       0
  2246 ;;      Temps:          0       4       0
  2247 ;;      Totals:         0      13       0
  2248 ;;Total ram usage:       13 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    3
  2251 ;; This function calls:
  2252 ;;		___ftpack
  2253 ;; This function is called by:
  2254 ;;		_simulate
  2255 ;;		___ftsub
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           
  2260                           ;psect for function ___ftadd
  2261  0074                     ___ftadd:	
  2262                           
  2263                           ;incstack = 0
  2264                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2265  0074  0020               	movlb	0	; select bank0
  2266  0075  0828               	movf	___ftadd@f1,w
  2267  0076  00AE               	movwf	??___ftadd
  2268  0077  0829               	movf	___ftadd@f1+1,w
  2269  0078  00AF               	movwf	??___ftadd+1
  2270  0079  082A               	movf	___ftadd@f1+2,w
  2271  007A  00B0               	movwf	??___ftadd+2
  2272  007B  1003               	clrc
  2273  007C  0D2F               	rlf	??___ftadd+1,w
  2274  007D  0D30               	rlf	??___ftadd+2,w
  2275  007E  00B1               	movwf	??___ftadd+3
  2276  007F  0831               	movf	??___ftadd+3,w
  2277  0080  00B4               	movwf	___ftadd@exp1
  2278  0081  082B               	movf	___ftadd@f2,w
  2279  0082  00AE               	movwf	??___ftadd
  2280  0083  082C               	movf	___ftadd@f2+1,w
  2281  0084  00AF               	movwf	??___ftadd+1
  2282  0085  082D               	movf	___ftadd@f2+2,w
  2283  0086  00B0               	movwf	??___ftadd+2
  2284  0087  1003               	clrc
  2285  0088  0D2F               	rlf	??___ftadd+1,w
  2286  0089  0D30               	rlf	??___ftadd+2,w
  2287  008A  00B1               	movwf	??___ftadd+3
  2288  008B  0831               	movf	??___ftadd+3,w
  2289  008C  00B3               	movwf	___ftadd@exp2
  2290  008D  0834               	movf	___ftadd@exp1,w
  2291  008E  1903               	btfsc	3,2
  2292  008F  289C               	goto	l2003
  2293  0090  0833               	movf	___ftadd@exp2,w
  2294  0091  0234               	subwf	___ftadd@exp1,w
  2295  0092  1803               	skipnc
  2296  0093  28A3               	goto	l2007
  2297  0094  0334               	decf	___ftadd@exp1,w
  2298  0095  3AFF               	xorlw	255
  2299  0096  0733               	addwf	___ftadd@exp2,w
  2300  0097  00AE               	movwf	??___ftadd
  2301  0098  3019               	movlw	25
  2302  0099  022E               	subwf	??___ftadd,w
  2303  009A  1C03               	skipc
  2304  009B  28A3               	goto	l2007
  2305  009C                     l2003:	
  2306  009C  082B               	movf	___ftadd@f2,w
  2307  009D  00A8               	movwf	?___ftadd
  2308  009E  082C               	movf	___ftadd@f2+1,w
  2309  009F  00A9               	movwf	?___ftadd+1
  2310  00A0  082D               	movf	___ftadd@f2+2,w
  2311  00A1  00AA               	movwf	?___ftadd+2
  2312  00A2  0008               	return
  2313  00A3                     l2007:	
  2314  00A3  0833               	movf	___ftadd@exp2,w
  2315  00A4  1903               	btfsc	3,2
  2316  00A5  0008               	return
  2317  00A6  0834               	movf	___ftadd@exp1,w
  2318  00A7  0233               	subwf	___ftadd@exp2,w
  2319  00A8  1803               	skipnc
  2320  00A9  28B2               	goto	l2013
  2321  00AA  0333               	decf	___ftadd@exp2,w
  2322  00AB  3AFF               	xorlw	255
  2323  00AC  0734               	addwf	___ftadd@exp1,w
  2324  00AD  00AE               	movwf	??___ftadd
  2325  00AE  3019               	movlw	25
  2326  00AF  022E               	subwf	??___ftadd,w
  2327  00B0  1803               	btfsc	3,0
  2328  00B1  0008               	return
  2329  00B2                     l2013:	
  2330  00B2  3006               	movlw	6
  2331  00B3  00AE               	movwf	??___ftadd
  2332  00B4  082E               	movf	??___ftadd,w
  2333  00B5  00B2               	movwf	___ftadd@sign
  2334  00B6  1BAA               	btfsc	___ftadd@f1+2,7
  2335  00B7  17B2               	bsf	___ftadd@sign,7
  2336  00B8  1BAD               	btfsc	___ftadd@f2+2,7
  2337  00B9  1732               	bsf	___ftadd@sign,6
  2338  00BA  17A9               	bsf	___ftadd@f1+1,7
  2339  00BB  30FF               	movlw	255
  2340  00BC  05A8               	andwf	___ftadd@f1,f
  2341  00BD  30FF               	movlw	255
  2342  00BE  05A9               	andwf	___ftadd@f1+1,f
  2343  00BF  3000               	movlw	0
  2344  00C0  05AA               	andwf	___ftadd@f1+2,f
  2345  00C1  17AC               	bsf	___ftadd@f2+1,7
  2346  00C2  30FF               	movlw	255
  2347  00C3  05AB               	andwf	___ftadd@f2,f
  2348  00C4  30FF               	movlw	255
  2349  00C5  05AC               	andwf	___ftadd@f2+1,f
  2350  00C6  3000               	movlw	0
  2351  00C7  05AD               	andwf	___ftadd@f2+2,f
  2352  00C8  0833               	movf	___ftadd@exp2,w
  2353  00C9  0234               	subwf	___ftadd@exp1,w
  2354  00CA  1803               	skipnc
  2355  00CB  28EE               	goto	l2035
  2356  00CC                     l2025:	
  2357  00CC  3001               	movlw	1
  2358  00CD                     u2195:	
  2359  00CD  35AB               	lslf	___ftadd@f2,f
  2360  00CE  0DAC               	rlf	___ftadd@f2+1,f
  2361  00CF  0DAD               	rlf	___ftadd@f2+2,f
  2362  00D0  0B89               	decfsz	9,f
  2363  00D1  28CD               	goto	u2195
  2364  00D2  3001               	movlw	1
  2365  00D3  02B3               	subwf	___ftadd@exp2,f
  2366  00D4  0833               	movf	___ftadd@exp2,w
  2367  00D5  0634               	xorwf	___ftadd@exp1,w
  2368  00D6  1903               	skipnz
  2369  00D7  28E9               	goto	l2033
  2370  00D8  3001               	movlw	1
  2371  00D9  02B2               	subwf	___ftadd@sign,f
  2372  00DA  0832               	movf	___ftadd@sign,w
  2373  00DB  3907               	andlw	7
  2374  00DC  1903               	btfsc	3,2
  2375  00DD  28E9               	goto	l2033
  2376  00DE  28CC               	goto	l2025
  2377  00DF                     l2031:	
  2378  00DF  3001               	movlw	1
  2379  00E0                     u2225:	
  2380  00E0  36AA               	lsrf	___ftadd@f1+2,f
  2381  00E1  0CA9               	rrf	___ftadd@f1+1,f
  2382  00E2  0CA8               	rrf	___ftadd@f1,f
  2383  00E3  0B89               	decfsz	9,f
  2384  00E4  28E0               	goto	u2225
  2385  00E5  3001               	movlw	1
  2386  00E6  00AE               	movwf	??___ftadd
  2387  00E7  082E               	movf	??___ftadd,w
  2388  00E8  07B4               	addwf	___ftadd@exp1,f
  2389  00E9                     l2033:	
  2390  00E9  0834               	movf	___ftadd@exp1,w
  2391  00EA  0633               	xorwf	___ftadd@exp2,w
  2392  00EB  1903               	btfsc	3,2
  2393  00EC  2913               	goto	l396
  2394  00ED  28DF               	goto	l2031
  2395  00EE                     l2035:	
  2396  00EE  0834               	movf	___ftadd@exp1,w
  2397  00EF  0233               	subwf	___ftadd@exp2,w
  2398  00F0  1803               	skipnc
  2399  00F1  2913               	goto	l396
  2400  00F2                     l2037:	
  2401  00F2  3001               	movlw	1
  2402  00F3                     u2255:	
  2403  00F3  35A8               	lslf	___ftadd@f1,f
  2404  00F4  0DA9               	rlf	___ftadd@f1+1,f
  2405  00F5  0DAA               	rlf	___ftadd@f1+2,f
  2406  00F6  0B89               	decfsz	9,f
  2407  00F7  28F3               	goto	u2255
  2408  00F8  3001               	movlw	1
  2409  00F9  02B4               	subwf	___ftadd@exp1,f
  2410  00FA  0833               	movf	___ftadd@exp2,w
  2411  00FB  0634               	xorwf	___ftadd@exp1,w
  2412  00FC  1903               	skipnz
  2413  00FD  290F               	goto	l2045
  2414  00FE  3001               	movlw	1
  2415  00FF  02B2               	subwf	___ftadd@sign,f
  2416  0100  0832               	movf	___ftadd@sign,w
  2417  0101  3907               	andlw	7
  2418  0102  1903               	btfsc	3,2
  2419  0103  290F               	goto	l2045
  2420  0104  28F2               	goto	l2037
  2421  0105                     l2043:	
  2422  0105  3001               	movlw	1
  2423  0106                     u2285:	
  2424  0106  36AD               	lsrf	___ftadd@f2+2,f
  2425  0107  0CAC               	rrf	___ftadd@f2+1,f
  2426  0108  0CAB               	rrf	___ftadd@f2,f
  2427  0109  0B89               	decfsz	9,f
  2428  010A  2906               	goto	u2285
  2429  010B  3001               	movlw	1
  2430  010C  00AE               	movwf	??___ftadd
  2431  010D  082E               	movf	??___ftadd,w
  2432  010E  07B3               	addwf	___ftadd@exp2,f
  2433  010F                     l2045:	
  2434  010F  0834               	movf	___ftadd@exp1,w
  2435  0110  0633               	xorwf	___ftadd@exp2,w
  2436  0111  1D03               	skipz
  2437  0112  2905               	goto	l2043
  2438  0113                     l396:	
  2439  0113  1FB2               	btfss	___ftadd@sign,7
  2440  0114  2925               	goto	l2049
  2441  0115  30FF               	movlw	255
  2442  0116  06A8               	xorwf	___ftadd@f1,f
  2443  0117  30FF               	movlw	255
  2444  0118  06A9               	xorwf	___ftadd@f1+1,f
  2445  0119  30FF               	movlw	255
  2446  011A  06AA               	xorwf	___ftadd@f1+2,f
  2447  011B  3001               	movlw	1
  2448  011C  07A8               	addwf	___ftadd@f1,f
  2449  011D  3000               	movlw	0
  2450  011E  1803               	skipnc
  2451  011F  3001               	movlw	1
  2452  0120  07A9               	addwf	___ftadd@f1+1,f
  2453  0121  3000               	movlw	0
  2454  0122  1803               	skipnc
  2455  0123  3001               	movlw	1
  2456  0124  07AA               	addwf	___ftadd@f1+2,f
  2457  0125                     l2049:	
  2458  0125  1F32               	btfss	___ftadd@sign,6
  2459  0126  2937               	goto	l2053
  2460  0127  30FF               	movlw	255
  2461  0128  06AB               	xorwf	___ftadd@f2,f
  2462  0129  30FF               	movlw	255
  2463  012A  06AC               	xorwf	___ftadd@f2+1,f
  2464  012B  30FF               	movlw	255
  2465  012C  06AD               	xorwf	___ftadd@f2+2,f
  2466  012D  3001               	movlw	1
  2467  012E  07AB               	addwf	___ftadd@f2,f
  2468  012F  3000               	movlw	0
  2469  0130  1803               	skipnc
  2470  0131  3001               	movlw	1
  2471  0132  07AC               	addwf	___ftadd@f2+1,f
  2472  0133  3000               	movlw	0
  2473  0134  1803               	skipnc
  2474  0135  3001               	movlw	1
  2475  0136  07AD               	addwf	___ftadd@f2+2,f
  2476  0137                     l2053:	
  2477  0137  01B2               	clrf	___ftadd@sign
  2478  0138  0828               	movf	___ftadd@f1,w
  2479  0139  07AB               	addwf	___ftadd@f2,f
  2480  013A  0829               	movf	___ftadd@f1+1,w
  2481  013B  3DAC               	addwfc	___ftadd@f2+1,f
  2482  013C  082A               	movf	___ftadd@f1+2,w
  2483  013D  3DAD               	addwfc	___ftadd@f2+2,f
  2484  013E  1FAD               	btfss	___ftadd@f2+2,7
  2485  013F  2952               	goto	l2063
  2486  0140  30FF               	movlw	255
  2487  0141  06AB               	xorwf	___ftadd@f2,f
  2488  0142  30FF               	movlw	255
  2489  0143  06AC               	xorwf	___ftadd@f2+1,f
  2490  0144  30FF               	movlw	255
  2491  0145  06AD               	xorwf	___ftadd@f2+2,f
  2492  0146  3001               	movlw	1
  2493  0147  07AB               	addwf	___ftadd@f2,f
  2494  0148  3000               	movlw	0
  2495  0149  1803               	skipnc
  2496  014A  3001               	movlw	1
  2497  014B  07AC               	addwf	___ftadd@f2+1,f
  2498  014C  3000               	movlw	0
  2499  014D  1803               	skipnc
  2500  014E  3001               	movlw	1
  2501  014F  07AD               	addwf	___ftadd@f2+2,f
  2502  0150  01B2               	clrf	___ftadd@sign
  2503  0151  0AB2               	incf	___ftadd@sign,f
  2504  0152                     l2063:	
  2505  0152  082B               	movf	___ftadd@f2,w
  2506  0153  00A0               	movwf	?___ftpack
  2507  0154  082C               	movf	___ftadd@f2+1,w
  2508  0155  00A1               	movwf	?___ftpack+1
  2509  0156  082D               	movf	___ftadd@f2+2,w
  2510  0157  00A2               	movwf	?___ftpack+2
  2511  0158  0834               	movf	___ftadd@exp1,w
  2512  0159  00AE               	movwf	??___ftadd
  2513  015A  082E               	movf	??___ftadd,w
  2514  015B  00A3               	movwf	?___ftpack+3
  2515  015C  0832               	movf	___ftadd@sign,w
  2516  015D  00AF               	movwf	??___ftadd+1
  2517  015E  082F               	movf	??___ftadd+1,w
  2518  015F  00A4               	movwf	?___ftpack+4
  2519  0160  23F1               	fcall	___ftpack
  2520  0161  0020               	movlb	0	; select bank0
  2521  0162  0820               	movf	?___ftpack,w
  2522  0163  00A8               	movwf	?___ftadd
  2523  0164  0821               	movf	?___ftpack+1,w
  2524  0165  00A9               	movwf	?___ftadd+1
  2525  0166  0822               	movf	?___ftpack+2,w
  2526  0167  00AA               	movwf	?___ftadd+2
  2527  0168  0008               	return
  2528  0169                     __end_of___ftadd:	
  2529                           
  2530                           	psect	text14
  2531  03F1                     __ptext14:	
  2532 ;; *************** function ___ftpack *****************
  2533 ;; Defined at:
  2534 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\float.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  arg             3    0[BANK0 ] unsigned um
  2537 ;;  exp             1    3[BANK0 ] unsigned char 
  2538 ;;  sign            1    4[BANK0 ] unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  3    0[BANK0 ] float 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1
  2550 ;;      Params:         0       5       0
  2551 ;;      Locals:         0       0       0
  2552 ;;      Temps:          0       3       0
  2553 ;;      Totals:         0       8       0
  2554 ;;Total ram usage:        8 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    2
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		___awtoft
  2561 ;;		___ftadd
  2562 ;;		___ftdiv
  2563 ;;		___lwtoft
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           
  2568                           ;psect for function ___ftpack
  2569  03F1                     ___ftpack:	
  2570                           
  2571                           ;incstack = 0
  2572                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2573  03F1  0020               	movlb	0	; select bank0
  2574  03F2  0823               	movf	___ftpack@exp,w
  2575  03F3  1903               	btfsc	3,2
  2576  03F4  2BFA               	goto	l1957
  2577  03F5  0822               	movf	___ftpack@arg+2,w
  2578  03F6  0421               	iorwf	___ftpack@arg+1,w
  2579  03F7  0420               	iorwf	___ftpack@arg,w
  2580  03F8  1D03               	skipz
  2581  03F9  2C0B               	goto	l1963
  2582  03FA                     l1957:	
  2583  03FA  3000               	movlw	0
  2584  03FB  00A0               	movwf	?___ftpack
  2585  03FC  3000               	movlw	0
  2586  03FD  00A1               	movwf	?___ftpack+1
  2587  03FE  3000               	movlw	0
  2588  03FF  00A2               	movwf	?___ftpack+2
  2589  0400  0008               	return
  2590  0401                     l1961:	
  2591  0401  3001               	movlw	1
  2592  0402  00A5               	movwf	??___ftpack
  2593  0403  0825               	movf	??___ftpack,w
  2594  0404  07A3               	addwf	___ftpack@exp,f
  2595  0405  3001               	movlw	1
  2596  0406                     u2005:	
  2597  0406  36A2               	lsrf	___ftpack@arg+2,f
  2598  0407  0CA1               	rrf	___ftpack@arg+1,f
  2599  0408  0CA0               	rrf	___ftpack@arg,f
  2600  0409  0B89               	decfsz	9,f
  2601  040A  2C06               	goto	u2005
  2602  040B                     l1963:	
  2603  040B  30FE               	movlw	254
  2604  040C  0522               	andwf	___ftpack@arg+2,w
  2605  040D  1903               	btfsc	3,2
  2606  040E  2C24               	goto	l367
  2607  040F  2C01               	goto	l1961
  2608  0410                     l1965:	
  2609  0410  3001               	movlw	1
  2610  0411  00A5               	movwf	??___ftpack
  2611  0412  0825               	movf	??___ftpack,w
  2612  0413  07A3               	addwf	___ftpack@exp,f
  2613  0414  3001               	movlw	1
  2614  0415  07A0               	addwf	___ftpack@arg,f
  2615  0416  3000               	movlw	0
  2616  0417  1803               	skipnc
  2617  0418  3001               	movlw	1
  2618  0419  07A1               	addwf	___ftpack@arg+1,f
  2619  041A  3000               	movlw	0
  2620  041B  1803               	skipnc
  2621  041C  3001               	movlw	1
  2622  041D  07A2               	addwf	___ftpack@arg+2,f
  2623  041E  3001               	movlw	1
  2624  041F                     u2025:	
  2625  041F  36A2               	lsrf	___ftpack@arg+2,f
  2626  0420  0CA1               	rrf	___ftpack@arg+1,f
  2627  0421  0CA0               	rrf	___ftpack@arg,f
  2628  0422  0B89               	decfsz	9,f
  2629  0423  2C1F               	goto	u2025
  2630  0424                     l367:	
  2631  0424  30FF               	movlw	255
  2632  0425  0522               	andwf	___ftpack@arg+2,w
  2633  0426  1903               	btfsc	3,2
  2634  0427  2C31               	goto	l1973
  2635  0428  2C10               	goto	l1965
  2636  0429                     l1971:	
  2637  0429  3001               	movlw	1
  2638  042A  02A3               	subwf	___ftpack@exp,f
  2639  042B  3001               	movlw	1
  2640  042C                     u2045:	
  2641  042C  35A0               	lslf	___ftpack@arg,f
  2642  042D  0DA1               	rlf	___ftpack@arg+1,f
  2643  042E  0DA2               	rlf	___ftpack@arg+2,f
  2644  042F  0B89               	decfsz	9,f
  2645  0430  2C2C               	goto	u2045
  2646  0431                     l1973:	
  2647  0431  1FA1               	btfss	___ftpack@arg+1,7
  2648  0432  2C29               	goto	l1971
  2649  0433  1823               	btfsc	___ftpack@exp,0
  2650  0434  2C3B               	goto	l373
  2651  0435  30FF               	movlw	255
  2652  0436  05A0               	andwf	___ftpack@arg,f
  2653  0437  307F               	movlw	127
  2654  0438  05A1               	andwf	___ftpack@arg+1,f
  2655  0439  30FF               	movlw	255
  2656  043A  05A2               	andwf	___ftpack@arg+2,f
  2657  043B                     l373:	
  2658  043B  1003               	clrc
  2659  043C  0CA3               	rrf	___ftpack@exp,f
  2660  043D  0823               	movf	___ftpack@exp,w
  2661  043E  00A5               	movwf	??___ftpack
  2662  043F  01A6               	clrf	??___ftpack+1
  2663  0440  01A7               	clrf	??___ftpack+2
  2664  0441  3010               	movlw	16
  2665  0442                     u2075:	
  2666  0442  35A5               	lslf	??___ftpack,f
  2667  0443  0DA6               	rlf	??___ftpack+1,f
  2668  0444  0DA7               	rlf	??___ftpack+2,f
  2669  0445  0B89               	decfsz	9,f
  2670  0446  2C42               	goto	u2075
  2671  0447  0825               	movf	??___ftpack,w
  2672  0448  04A0               	iorwf	___ftpack@arg,f
  2673  0449  0826               	movf	??___ftpack+1,w
  2674  044A  04A1               	iorwf	___ftpack@arg+1,f
  2675  044B  0827               	movf	??___ftpack+2,w
  2676  044C  04A2               	iorwf	___ftpack@arg+2,f
  2677  044D  0824               	movf	___ftpack@sign,w
  2678  044E  1903               	btfsc	3,2
  2679  044F  0008               	return
  2680  0450  17A2               	bsf	___ftpack@arg+2,7
  2681  0451  0008               	return
  2682  0452                     __end_of___ftpack:	
  2683                           
  2684                           	psect	intentry
  2685  0004                     __pintentry:	
  2686 ;; *************** function _isr *****************
  2687 ;; Defined at:
  2688 ;;		line 58 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  value           1    4[COMMON] unsigned char 
  2693 ;;  i2cStatus       1    3[COMMON] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1
  2703 ;;      Params:         0       0       0
  2704 ;;      Locals:         2       0       0
  2705 ;;      Temps:          2       0       0
  2706 ;;      Totals:         4       0       0
  2707 ;;Total ram usage:        4 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    1
  2710 ;; This function calls:
  2711 ;;		_I2CWrite
  2712 ;; This function is called by:
  2713 ;;		Interrupt level 1
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717  0004                     _isr:	
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2721  0004  3180               	pagesel	$
  2722  0005  0020               	movlb	0	; select bank0
  2723  0006  087F               	movf	127,w
  2724  0007  00F7               	movwf	??_isr+1
  2725                           
  2726                           ;PICsun_main.c: 59: if (SSP1IF)
  2727  0008  1D91               	btfss	17,3	;volatile
  2728  0009  286F               	goto	i1l114
  2729                           
  2730                           ;PICsun_main.c: 60: {
  2731                           ;PICsun_main.c: 61: SSP1IF = 0;
  2732  000A  1191               	bcf	17,3	;volatile
  2733                           
  2734                           ;PICsun_main.c: 62: unsigned uint8_t i2cStatus, value;
  2735                           ;PICsun_main.c: 65: if (i2cStatus != 0x30) {
  2736  000B  0878               	movf	isr@i2cStatus,w
  2737  000C  3A30               	xorlw	48
  2738  000D  1903               	skipnz
  2739  000E  286F               	goto	i1l114
  2740                           
  2741                           ;PICsun_main.c: 66: i2cStatus = (SSPSTAT & 0b00101101);
  2742  000F  0024               	movlb	4	; select bank4
  2743  0010  0814               	movf	20,w	;volatile
  2744  0011  392D               	andlw	45
  2745  0012  00F6               	movwf	??_isr
  2746  0013  0876               	movf	??_isr,w
  2747  0014  00F8               	movwf	isr@i2cStatus
  2748                           
  2749                           ;PICsun_main.c: 69: switch (i2cStatus) {
  2750  0015  285E               	goto	i1l1803
  2751  0016                     i1l1751:	
  2752                           ;PICsun_main.c: 71: case 0b00001001:
  2753                           
  2754                           
  2755                           ;PICsun_main.c: 73: value = SSPBUF;
  2756  0016  0811               	movf	17,w	;volatile
  2757  0017  00F6               	movwf	??_isr
  2758  0018  0876               	movf	??_isr,w
  2759  0019  00F9               	movwf	isr@value
  2760                           
  2761                           ;PICsun_main.c: 74: if (SSPOV)SSPOV = 0;
  2762  001A  1B15               	btfsc	21,6	;volatile
  2763  001B  1315               	bcf	21,6	;volatile
  2764  001C  285A               	goto	i1l112
  2765  001D                     i1l1759:	
  2766                           ;PICsun_main.c: 78: case 0b00101001:
  2767                           
  2768                           ;PICsun_main.c: 76: break;
  2769                           
  2770                           ;PICsun_main.c: 75: if (SEN) CKP = 1;
  2771                           
  2772                           
  2773                           ;PICsun_main.c: 80: value = SSPBUF;
  2774  001D  0811               	movf	17,w	;volatile
  2775  001E  00F6               	movwf	??_isr
  2776  001F  0876               	movf	??_isr,w
  2777  0020  00F9               	movwf	isr@value
  2778                           
  2779                           ;PICsun_main.c: 81: if (value == 0xFF) {
  2780  0021  0879               	movf	isr@value,w
  2781  0022  3AFF               	xorlw	255
  2782  0023  1D03               	skipz
  2783  0024  282B               	goto	i1l1765
  2784                           
  2785                           ;PICsun_main.c: 82: newcmd = 1;
  2786  0025  3001               	movlw	1
  2787  0026  00F6               	movwf	??_isr
  2788  0027  0876               	movf	??_isr,w
  2789  0028  00F3               	movwf	_newcmd	;volatile
  2790                           
  2791                           ;PICsun_main.c: 83: rcvd_byte = 0;
  2792  0029  01F4               	clrf	_rcvd_byte	;volatile
  2793                           
  2794                           ;PICsun_main.c: 84: } else {
  2795  002A  285A               	goto	i1l112
  2796  002B                     i1l1765:	
  2797                           
  2798                           ;PICsun_main.c: 85: if (newcmd && !buffer_valid) {
  2799  002B  0873               	movf	_newcmd,w	;volatile
  2800  002C  1903               	btfsc	3,2
  2801  002D  283D               	goto	i1l1773
  2802  002E  08F2               	movf	_buffer_valid,f
  2803  002F  1D03               	skipz
  2804  0030  283D               	goto	i1l1773
  2805                           
  2806                           ;PICsun_main.c: 86: rcv_buffer[rcvd_byte++] = value;
  2807  0031  0879               	movf	isr@value,w
  2808  0032  00F6               	movwf	??_isr
  2809  0033  0874               	movf	_rcvd_byte,w
  2810  0034  3E4A               	addlw	_rcv_buffer& (0+255)
  2811  0035  0086               	movwf	6
  2812  0036  0187               	clrf	7
  2813  0037  0876               	movf	??_isr,w
  2814  0038  0081               	movwf	1
  2815  0039  3001               	movlw	1
  2816  003A  00F6               	movwf	??_isr
  2817  003B  0876               	movf	??_isr,w
  2818  003C  07F4               	addwf	_rcvd_byte,f	;volatile
  2819  003D                     i1l1773:	
  2820                           
  2821                           ;PICsun_main.c: 87: }
  2822                           ;PICsun_main.c: 88: if (rcvd_byte == 6) {
  2823  003D  0874               	movf	_rcvd_byte,w	;volatile
  2824  003E  3A06               	xorlw	6
  2825  003F  1D03               	skipz
  2826  0040  285A               	goto	i1l112
  2827                           
  2828                           ;PICsun_main.c: 89: newcmd = 0;
  2829  0041  01F3               	clrf	_newcmd	;volatile
  2830                           
  2831                           ;PICsun_main.c: 90: buffer_valid = 1;
  2832  0042  3001               	movlw	1
  2833  0043  00F6               	movwf	??_isr
  2834  0044  0876               	movf	??_isr,w
  2835  0045  00F2               	movwf	_buffer_valid	;volatile
  2836  0046  285A               	goto	i1l112
  2837  0047                     i1l1783:	
  2838                           ;PICsun_main.c: 95: case 0b00001101:
  2839                           
  2840                           ;PICsun_main.c: 94: break;
  2841                           
  2842                           ;PICsun_main.c: 91: }
  2843                           ;PICsun_main.c: 92: }
  2844                           ;PICsun_main.c: 93: if (SEN) CKP = 1;
  2845                           
  2846                           
  2847                           ;PICsun_main.c: 97: value = SSPBUF;
  2848  0047  0811               	movf	17,w	;volatile
  2849  0048  00F6               	movwf	??_isr
  2850  0049  0876               	movf	??_isr,w
  2851  004A  00F9               	movwf	isr@value
  2852  004B                     i1l1791:	
  2853                           ;PICsun_main.c: 104: case 0b00101100:
  2854                           
  2855                           ;PICsun_main.c: 102: break;
  2856                           
  2857                           ;PICsun_main.c: 101: rcvd_byte++;
  2858                           
  2859                           ;PICsun_main.c: 100: I2CWrite(rcv_buffer[rcvd_byte]);
  2860                           
  2861                           ;PICsun_main.c: 99: rcvd_byte = 0;
  2862                           
  2863                           ;PICsun_main.c: 98: if (rcvd_byte >= 6)
  2864                           
  2865                           
  2866                           ;PICsun_main.c: 106: if (rcvd_byte >= 6)
  2867  004B  3006               	movlw	6
  2868  004C  0274               	subwf	_rcvd_byte,w	;volatile
  2869  004D  1803               	btfsc	3,0
  2870                           
  2871                           ;PICsun_main.c: 107: rcvd_byte = 0;
  2872  004E  01F4               	clrf	_rcvd_byte	;volatile
  2873                           
  2874                           ;PICsun_main.c: 108: I2CWrite(rcv_buffer[rcvd_byte]);
  2875  004F  0874               	movf	_rcvd_byte,w
  2876  0050  3E4A               	addlw	_rcv_buffer& (0+255)
  2877  0051  0086               	movwf	6
  2878  0052  0187               	clrf	7
  2879  0053  0801               	movf	1,w
  2880  0054  25BB               	fcall	_I2CWrite
  2881                           
  2882                           ;PICsun_main.c: 109: rcvd_byte++;
  2883  0055  3001               	movlw	1
  2884  0056  00F6               	movwf	??_isr
  2885  0057  0876               	movf	??_isr,w
  2886  0058  07F4               	addwf	_rcvd_byte,f	;volatile
  2887                           
  2888                           ;PICsun_main.c: 114: break;
  2889                           
  2890                           ;PICsun_main.c: 112: case 0b00101000:
  2891                           
  2892                           ;PICsun_main.c: 110: break;
  2893  0059  286F               	goto	i1l114
  2894  005A                     i1l112:	
  2895                           ;PICsun_main.c: 115: default:
  2896                           
  2897                           
  2898                           ;PICsun_main.c: 116: if (SEN) CKP = 1;
  2899  005A  1C16               	btfss	22,0	;volatile
  2900  005B  286F               	goto	i1l114
  2901  005C  1615               	bsf	21,4	;volatile
  2902                           
  2903                           ;PICsun_main.c: 118: }
  2904                           
  2905                           ;PICsun_main.c: 117: break;
  2906  005D  286F               	goto	i1l114
  2907  005E                     i1l1803:	
  2908  005E  0878               	movf	isr@i2cStatus,w
  2909                           
  2910                           ; Switch size 1, requested type "space"
  2911                           ; Number of cases is 5, Range of values is 9 to 44
  2912                           ; switch strategies available:
  2913                           ; Name         Instructions Cycles
  2914                           ; simple_byte           16     9 (average)
  2915                           ; direct_byte           81     9 (fixed)
  2916                           ; jumptable            263     9 (fixed)
  2917                           ;	Chosen strategy is simple_byte
  2918  005F  3A09               	xorlw	9	; case 9
  2919  0060  1903               	skipnz
  2920  0061  2816               	goto	i1l1751
  2921  0062  3A04               	xorlw	4	; case 13
  2922  0063  1903               	skipnz
  2923  0064  2847               	goto	i1l1783
  2924  0065  3A25               	xorlw	37	; case 40
  2925  0066  1903               	skipnz
  2926  0067  286F               	goto	i1l114
  2927  0068  3A01               	xorlw	1	; case 41
  2928  0069  1903               	skipnz
  2929  006A  281D               	goto	i1l1759
  2930  006B  3A05               	xorlw	5	; case 44
  2931  006C  1903               	skipnz
  2932  006D  284B               	goto	i1l1791
  2933  006E  285A               	goto	i1l112
  2934  006F                     i1l114:	
  2935  006F  0877               	movf	??_isr+1,w
  2936  0070  0020               	movlb	0	; select bank0
  2937  0071  00FF               	movwf	127
  2938  0072  0009               	retfie
  2939  0073                     __end_of_isr:	
  2940                           
  2941                           	psect	text16
  2942  05BB                     __ptext16:	
  2943 ;; *************** function _I2CWrite *****************
  2944 ;; Defined at:
  2945 ;;		line 49 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  data            1    wreg     unsigned char 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  data            1    0[COMMON] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;		None               void
  2952 ;; Registers used:
  2953 ;;		wreg
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMMON   BANK0   BANK1
  2959 ;;      Params:         0       0       0
  2960 ;;      Locals:         1       0       0
  2961 ;;      Temps:          0       0       0
  2962 ;;      Totals:         1       0       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_isr
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _I2CWrite
  2974  05BB                     _I2CWrite:	
  2975                           
  2976                           ;incstack = 0
  2977                           ; Regs used in _I2CWrite: [wreg]
  2978                           ;I2CWrite@data stored from wreg
  2979  05BB  00F5               	movwf	I2CWrite@data
  2980  05BC                     i1l85:	
  2981                           ;PICsun_main.c: 50: while (BF);
  2982                           
  2983  05BC  0024               	movlb	4	; select bank4
  2984  05BD  1814               	btfsc	20,0	;volatile
  2985  05BE  2DBC               	goto	i1l85
  2986  05BF                     i1l88:	
  2987                           ;PICsun_main.c: 51: do {
  2988                           
  2989                           
  2990                           ;PICsun_main.c: 52: WCOL = 0;
  2991  05BF  1395               	bcf	21,7	;volatile
  2992                           
  2993                           ;PICsun_main.c: 53: SSP1BUF = data;
  2994  05C0  0875               	movf	I2CWrite@data,w
  2995  05C1  0091               	movwf	17	;volatile
  2996                           
  2997                           ;PICsun_main.c: 54: } while (WCOL);
  2998  05C2  1B95               	btfsc	21,7	;volatile
  2999  05C3  2DBF               	goto	i1l88
  3000                           
  3001                           ;PICsun_main.c: 55: if (SEN) CKP = 1;
  3002  05C4  1C16               	btfss	22,0	;volatile
  3003  05C5  0008               	return
  3004  05C6  1615               	bsf	21,4	;volatile
  3005  05C7  0008               	return
  3006  05C8                     __end_of_I2CWrite:	
  3007  007E                     btemp	set	126	;btemp
  3008  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     42      62
    BANK1            32      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftneg	float  size(1) Largest target is 0

    ?___ftsub	float  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___awtoft	float  size(1) Largest target is 0

    ?___lwtoft	float  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_I2CWrite

Critical Paths under _main in BANK0

    _simulate->_setPWMdc
    ___fttol->___ftadd
    ___ftsub->___ftadd
    _setPWMdc->___fttol
    _calc_times->___ftdiv
    ___lwtoft->___ftpack
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___awdiv->___wmul
    ___ftadd->___ftpack

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5479
                                             39 BANK0      3     3      0
                         _calc_times
                           _simulate
                             ___init
 ---------------------------------------------------------------------------------
 (1) ___init                                               3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _simulate                                             0     0      0    3523
                           _setPWMdc
                            ___ftadd
                            ___ftneg
                            ___ftsub
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     252
                                             21 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    1602
                                             21 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      65
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _setPWMdc                                             4     2      2      67
                                             35 BANK0      4     2      2
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _calc_times                                           6     6      0    1956
                                             30 BANK0      6     6      0
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                           ___lwtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     136
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3     343
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6     732
                                             14 BANK0     16    10      6
                           ___ftpack
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3     445
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     300
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    1537
                                              8 BANK0     13     7      6
                           ___ftpack
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5     312
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5     312
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0     114
                                              1 COMMON     4     4      0
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (6) _I2CWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calc_times
     ___awdiv
       ___wmul (ARG)
     ___awtoft
       ___ftpack
     ___ftdiv
       ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     ___wmul
   _simulate
     _setPWMdc
       ___ftadd (ARG)
         ___ftpack
         ___ftneg (ARG)
       ___ftneg (ARG)
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           ___ftneg (ARG)
         ___ftneg (ARG)
     ___ftadd
       ___ftpack
       ___ftneg (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         ___ftneg (ARG)
     ___fttol
       ___ftadd (ARG)
         ___ftpack
         ___ftneg (ARG)
       ___ftneg (ARG)
   ___init

 _isr (ROOT)
   _I2CWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       8       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      48       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      3E       6       77.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      50       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Wed Mar 26 12:39:14 2014

            __CFG_CP$OFF 0000                       _BF 10A0             ___awdiv@sign 002C  
    ___wmul@multiplicand 0022             ___ftadd@exp1 0034             ___ftadd@exp2 0033  
           ___ftadd@sign 0032                      l125 03C6                      l373 043B  
                    l367 0424                      l396 0113                      l573 056D  
                    _CKP 10AC                      _PR2 001B             __CFG_CPD$OFF 0000  
                    _SEN 10B0                      u965 0535                      _isr 0004  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
           ___ftdiv@cntr 0038             ___ftdiv@sign 003D                     l2003 009C  
                   l2013 00B2                     l2101 02CF                     l2031 00DF  
                   l2007 00A3                     l2033 00E9                     l2025 00CC  
                   l2043 0105                     l2035 00EE                     l2053 0137  
                   l2045 010F                     l2037 00F2                     l2063 0152  
                   l2049 0125                     l1513 0468                     l2073 025F  
                   l2129 0567                     l1531 048E                     l1523 0470  
                   l1507 045D                     l1339 0526                     l1525 047C  
                   l2093 02B6                     l1535 0497                     l2079 0275  
                   l1539 049F                     l1723 036E                     l1715 0354  
                   l1707 0339                     l1717 035D                     l1709 0347  
                   l1719 0360                     l1853 0246                     l1861 038E  
                   l1943 04FC                     l1961 0401                     l1849 0212  
                   l1689 0309                     l1865 03AA                     l1971 0429  
                   l1963 040B                     l1859 0388                     l1939 04F7  
                   l1973 0431                     l1965 0410                     l1957 03FA  
                   l1991 054E                     ?_isr 0075                     u2005 0406  
                   u2025 041F                     u1235 0473                     u2045 042C  
                   _LATA 010C                     u1255 047D                     u2225 00E0  
                   u1265 0487                     u2075 0442                     u1275 048F  
                   u2255 00F3                     u1705 0355                     u2195 00CD  
                   u2355 0287                     u2435 056E                     u2285 0106  
                   u2365 0297                     u2445 0573                     u1645 0310  
                   u2375 02B7                     u2385 02C6                     u2395 02D0  
                   u1915 020B                     u1675 033A                     u2467 0504  
                   u1925 037E                     u2477 04DD                     u1935 0386  
                   u1945 0394                     u1955 03B0                     i1l85 05BC  
                   i1l88 05BF                     _WCOL 10AF                     _WPUA 020C  
           __CFG_WRT$OFF 0000                     _main 04E5             ___ftpack@arg 0020  
           ___ftpack@exp 0023                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     btemp 007E         __end_of_I2CWrite 05C8  
                   start 0073            __CFG_IESO$OFF 0000          _peak_light_time 0058  
           ___fttol@exp1 0042             ___fttol@lval 003E                    ??_isr 0076  
                  ?_main 0075          __end_of___awdiv 04A6          __end_of___ftadd 0169  
          __CFG_WDTE$OFF 0000          __end_of___ftdiv 02F0          __end_of___ftneg 05D1  
        ___awdiv@divisor 0026          __end_of___ftsub 059A          __end_of___fttol 0377  
                  i1l112 005A                    i1l114 006F          ___awdiv@counter 002B  
                  _SSPOV 10AE           __CFG_FCMEN$OFF 0000            ___awtoft@sign 002D  
                  _delta 0050            ___ftpack@sign 0024                    _pwmdc 0053  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
         __CFG_MCLRE$OFF 0000          __initialization 05AE             __end_of_main 051A  
                 ??_main 0047            ___fttol@sign1 003D           __CFG_PLLEN$OFF 0000  
                 _CCPR1L 0291         ___awdiv@dividend 0028         __end_of___awtoft 0564  
                 _ANSELA 018C         __end_of___ftpack 0452                   i1l1803 005E  
                 i1l1751 0016                   i1l1773 003D                   i1l1765 002B  
                 i1l1791 004B                   i1l1783 0047                   i1l1759 001D  
       __end_of___lwtoft 05AE                   _SSP1IF 008B                   _SSPBUF 0211  
                 ___init 04A6                   ___wmul 0564                ??___awdiv 002A  
              ??___ftadd 002E           __CFG_STVREN$ON 0000                ??___ftdiv 0034  
              ??___ftneg 0023                ??___ftsub 003B                ??___fttol 0039  
                 _newcmd 0073         ___awdiv@quotient 002D         __end_of_setPWMdc 0543  
              ?_I2CWrite 0075             isr@i2cStatus 0078         __end_of_simulate 03F1  
__end_of__initialization 05B9               ___ftadd@f1 0028               ___ftadd@f2 002B  
             ___ftdiv@f1 0031               ___ftdiv@f2 002E               ___ftdiv@f3 0039  
             ___ftneg@f1 0020               ___awtoft@c 0028               ___ftsub@f1 0038  
             ___ftsub@f2 0035               ___fttol@f1 0035           __pcstackCOMMON 0075  
             ___lwtoft@c 0028               ??_I2CWrite 0075               _calc_times 0169  
             __pbssBANK0 004A               __pmaintext 04E5                  ?___init 0075  
                ?___wmul 0020               __pintentry 0004                  _CCP1CON 0293  
              ?___awtoft 0028                ?___ftpack 0020                ?___lwtoft 0028  
        _sunrise_seconds 0070                  _SSP1ADD 0212                  _SSP1BUF 0211  
                _SSPSTAT 0214                ?_setPWMdc 0043                ?_simulate 0075  
        __size_of___init 003F                  ___awdiv 0452                  ___ftadd 0074  
                ___ftdiv 0248                  ___ftneg 05C8          __size_of___wmul 001E  
                ___ftsub 0582                  ___fttol 02F0               _light_peak 0056  
             ??___awtoft 002B               ??___ftpack 0025                  __ptext0 0000  
                __ptext1 04A6                  __ptext2 0377                  __ptext3 02F0  
                __ptext4 0582                  __ptext5 05C8                  __ptext6 051A  
                __ptext7 0169                  __ptext8 0564                  __ptext9 059A  
             ??___lwtoft 002B                _T2CONbits 001C             __size_of_isr 006F  
           I2CWrite@data 0075              ?_calc_times 0075                  clrloop0 05D2  
   end_of_initialization 05B9               _rcv_buffer 004A               ??_setPWMdc 0045  
           _buffer_valid 0072               ??_simulate 0047         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 008C        __size_of_I2CWrite 000D              _CCP1CONbits 0293  
            ___ftdiv@exp 003C      __size_of_calc_times 00DF           __end_of___init 04E5  
         __end_of___wmul 0582      start_initialization 05AE              __end_of_isr 0073  
               ??___init 0020                 ??___wmul 0024        __size_of___awtoft 0021  
      __size_of___ftpack 0061              __pbssCOMMON 0070        __size_of___lwtoft 0014  
          __pcstackBANK0 0020               setPWMdc@dc 0043        __size_of_setPWMdc 0029  
         _sunset_seconds 005C                 ?___awdiv 0026                 ?___ftadd 0028  
               ?___ftdiv 002E                 ?___ftneg 0020                 ?___ftsub 0035  
               ?___fttol 0035        __size_of_simulate 007A                 _I2CWrite 05BB  
           ??_calc_times 003E           ___wmul@product 0024                clear_ram0 05D1  
               _PIE1bits 0091                _rcvd_byte 0074                 _PIR1bits 0011  
     __end_of_calc_times 0248                 _SSP1CON1 0215        ___wmul@multiplier 0020  
             _APFCONbits 011D         __size_of___awdiv 0054         __size_of___ftadd 00F5  
       __size_of___ftdiv 00A8         __size_of___ftneg 0009         __size_of___ftsub 0018  
       __size_of___fttol 0087                 ___awtoft 0543                 ___ftpack 03F1  
               ___lwtoft 059A                 __ptext10 0248                 __ptext11 0543  
               __ptext12 0452                 __ptext13 0074                 __ptext14 03F1  
               __ptext16 05BB             _SSP1CON2bits 0216            __size_of_main 0035  
               _setPWMdc 051A           _simulated_time 005A                 _simulate 0377  
             _INTCONbits 000B                 isr@value 0079                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000               _OSCCONbits 0099               _OPTION_REG 0095  
