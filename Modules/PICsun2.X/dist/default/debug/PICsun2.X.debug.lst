

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue Mar 25 22:25:55 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  008C                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0095                     	;# 
    55  0096                     	;# 
    56  0097                     	;# 
    57  0098                     	;# 
    58  0099                     	;# 
    59  009A                     	;# 
    60  009B                     	;# 
    61  009B                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009E                     	;# 
    65  010C                     	;# 
    66  0111                     	;# 
    67  0112                     	;# 
    68  0115                     	;# 
    69  0116                     	;# 
    70  0117                     	;# 
    71  0118                     	;# 
    72  0119                     	;# 
    73  011A                     	;# 
    74  011B                     	;# 
    75  011D                     	;# 
    76  011D                     	;# 
    77  018C                     	;# 
    78  0191                     	;# 
    79  0191                     	;# 
    80  0192                     	;# 
    81  0193                     	;# 
    82  0193                     	;# 
    83  0193                     	;# 
    84  0194                     	;# 
    85  0195                     	;# 
    86  0196                     	;# 
    87  0199                     	;# 
    88  019A                     	;# 
    89  019B                     	;# 
    90  019B                     	;# 
    91  019C                     	;# 
    92  019D                     	;# 
    93  019E                     	;# 
    94  019F                     	;# 
    95  020C                     	;# 
    96  0211                     	;# 
    97  0211                     	;# 
    98  0212                     	;# 
    99  0212                     	;# 
   100  0213                     	;# 
   101  0213                     	;# 
   102  0214                     	;# 
   103  0214                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0215                     	;# 
   107  0216                     	;# 
   108  0216                     	;# 
   109  0217                     	;# 
   110  0217                     	;# 
   111  0291                     	;# 
   112  0292                     	;# 
   113  0293                     	;# 
   114  0294                     	;# 
   115  0295                     	;# 
   116  0295                     	;# 
   117  0296                     	;# 
   118  0391                     	;# 
   119  0392                     	;# 
   120  0393                     	;# 
   121  039A                     	;# 
   122  039C                     	;# 
   123  039D                     	;# 
   124  039E                     	;# 
   125  039F                     	;# 
   126  0FE4                     	;# 
   127  0FE5                     	;# 
   128  0FE6                     	;# 
   129  0FE7                     	;# 
   130  0FE8                     	;# 
   131  0FE9                     	;# 
   132  0FEA                     	;# 
   133  0FEB                     	;# 
   134  0FED                     	;# 
   135  0FEE                     	;# 
   136  0FEF                     	;# 
   137  000B                     _INTCONbits	set	11
   138  0011                     _PIR1bits	set	17
   139  001B                     _PR2	set	27
   140  001C                     _T2CONbits	set	28
   141  0015                     _TMR0	set	21
   142  008B                     _SSP1IF	set	139
   143  005D                     _TMR0IE	set	93
   144  005A                     _TMR0IF	set	90
   145  0095                     _OPTION_REG	set	149
   146  0099                     _OSCCONbits	set	153
   147  0091                     _PIE1bits	set	145
   148  008C                     _TRISAbits	set	140
   149  011D                     _APFCONbits	set	285
   150  010C                     _LATA	set	268
   151  018C                     _ANSELA	set	396
   152  0212                     _SSP1ADD	set	530
   153  0211                     _SSP1BUF	set	529
   154  0215                     _SSP1CON1	set	533
   155  0216                     _SSP1CON2bits	set	534
   156  0211                     _SSPBUF	set	529
   157  0214                     _SSPSTAT	set	532
   158  020C                     _WPUA	set	524
   159  10A0                     _BF	set	4256
   160  10AC                     _CKP	set	4268
   161  10B0                     _SEN	set	4272
   162  10AE                     _SSPOV	set	4270
   163  10AF                     _WCOL	set	4271
   164  0293                     _CCP1CON	set	659
   165  0293                     _CCP1CONbits	set	659
   166  0291                     _CCPR1L	set	657
   167                           
   168                           	psect	text0
   169  0000                     __ptext0:	
   170                           
   171                           ;psect for function _I2CWrite
   172                           ; #config settings
   173  0000                     
   174                           	psect	cinit
   175  03A3                     start_initialization:	
   176  03A3                     __initialization:	
   177                           
   178                           ; Clear objects allocated to COMMON
   179  03A3  01F0               	clrf	__pbssCOMMON& (0+127)
   180  03A4  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   181  03A5  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   182  03A6  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   183  03A7  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   184                           
   185                           ; Clear objects allocated to BANK0
   186  03A8  304B               	movlw	low __pbssBANK0
   187  03A9  0084               	movwf	4
   188  03AA  3000               	movlw	high __pbssBANK0
   189  03AB  0085               	movwf	5
   190  03AC  300A               	movlw	10
   191  03AD  23D2               	fcall	clear_ram0
   192                           
   193                           ; Clear objects allocated to BANK1
   194  03AE  30A0               	movlw	low __pbssBANK1
   195  03AF  0084               	movwf	4
   196  03B0  3000               	movlw	high __pbssBANK1
   197  03B1  0085               	movwf	5
   198  03B2  3020               	movlw	32
   199  03B3  23D2               	fcall	clear_ram0
   200  03B4                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203  03B4                     __end_of__initialization:	
   204  03B4  0020               	movlb	0
   205  03B5  2B19               	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMMON
   208  0070                     __pbssCOMMON:	
   209  0070                     _msec:	
   210  0070                     	ds	2
   211  0072                     _buffer_valid:	
   212  0072                     	ds	1
   213  0073                     _newcmd:	
   214  0073                     	ds	1
   215  0074                     _rcvd_byte:	
   216  0074                     	ds	1
   217                           
   218                           	psect	bssBANK0
   219  004B                     __pbssBANK0:	
   220  004B                     _rcv_buffer:	
   221  004B                     	ds	6
   222  0051                     _present_segment:	
   223  0051                     	ds	2
   224  0053                     _real_time:	
   225  0053                     	ds	2
   226                           
   227                           	psect	bssBANK1
   228  00A0                     __pbssBANK1:	
   229  00A0                     _light_segments:	
   230  00A0                     	ds	32
   231                           
   232                           	psect	clrtext
   233  03D2                     clear_ram0:	
   234                           ;	Called with FSR0 containing the base address, and
   235                           ;	WREG with the size to clear
   236                           
   237  03D2  0064               	clrwdt	;clear the watchdog before getting into this loop
   238  03D3                     clrloop0:	
   239  03D3  0180               	clrf	0	;clear RAM location pointed to by FSR
   240  03D4  3101               	addfsr 0,1
   241  03D5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   242  03D6  2BD3               	goto	clrloop0	;have we reached the end yet?
   243  03D7  3400               	retlw	0	;all done for this memory range, return
   244                           
   245                           	psect	cstackCOMMON
   246  0075                     __pcstackCOMMON:	
   247  0075                     ?_I2CWrite:	
   248  0075                     ??_I2CWrite:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0075                     ?_isr:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0075                     ?_calc_times:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0075                     ?_simulate:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0075                     ?___init:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0075                     ?_main:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0075                     I2CWrite@data:	
   267                           ; 2 bytes @ 0x0
   268                           
   269                           
   270                           ; 1 bytes @ 0x0
   271  0075                     	ds	1
   272  0076                     ??_isr:	
   273                           
   274                           ; 0 bytes @ 0x1
   275  0076                     	ds	2
   276  0078                     isr@i2cStatus:	
   277                           
   278                           ; 1 bytes @ 0x3
   279  0078                     	ds	1
   280  0079                     isr@value:	
   281                           
   282                           ; 1 bytes @ 0x4
   283  0079                     	ds	1
   284                           
   285                           	psect	cstackBANK0
   286  0020                     __pcstackBANK0:	
   287  0020                     ?_delay_ms:	
   288  0020                     ?_setPWMdc:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0020                     ?_check_segment:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0020                     ?___wmul:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0020                     ?___lldiv:	
   298                           ; 2 bytes @ 0x0
   299                           
   300  0020                     delay_ms@ms:	
   301                           ; 4 bytes @ 0x0
   302                           
   303  0020                     setPWMdc@dc:	
   304                           ; 2 bytes @ 0x0
   305                           
   306  0020                     check_segment@check_time:	
   307                           ; 2 bytes @ 0x0
   308                           
   309  0020                     ___wmul@multiplier:	
   310                           ; 2 bytes @ 0x0
   311                           
   312  0020                     ___lldiv@divisor:	
   313                           ; 2 bytes @ 0x0
   314                           
   315                           
   316                           ; 4 bytes @ 0x0
   317  0020                     	ds	2
   318  0022                     ??_delay_ms:	
   319  0022                     ??_setPWMdc:	
   320                           ; 0 bytes @ 0x2
   321                           
   322  0022                     ??_check_segment:	
   323                           ; 0 bytes @ 0x2
   324                           
   325  0022                     ??___init:	
   326                           ; 0 bytes @ 0x2
   327                           
   328  0022                     ___wmul@multiplicand:	
   329                           ; 0 bytes @ 0x2
   330                           
   331                           
   332                           ; 2 bytes @ 0x2
   333  0022                     	ds	2
   334  0024                     ?_ready_pwm:	
   335  0024                     ??___wmul:	
   336                           ; 0 bytes @ 0x4
   337                           
   338  0024                     ready_pwm@segment:	
   339                           ; 0 bytes @ 0x4
   340                           
   341  0024                     check_segment@i:	
   342                           ; 2 bytes @ 0x4
   343                           
   344  0024                     ___wmul@product:	
   345                           ; 2 bytes @ 0x4
   346                           
   347  0024                     ___lldiv@dividend:	
   348                           ; 2 bytes @ 0x4
   349                           
   350                           
   351                           ; 4 bytes @ 0x4
   352  0024                     	ds	2
   353  0026                     ??_ready_pwm:	
   354  0026                     ??_simulate:	
   355                           ; 0 bytes @ 0x6
   356                           
   357  0026                     simulate@simulation_time:	
   358                           ; 0 bytes @ 0x6
   359                           
   360                           
   361                           ; 2 bytes @ 0x6
   362  0026                     	ds	2
   363  0028                     ??___lldiv:	
   364                           
   365                           ; 0 bytes @ 0x8
   366  0028                     	ds	1
   367  0029                     ___lldiv@quotient:	
   368                           
   369                           ; 4 bytes @ 0x9
   370  0029                     	ds	4
   371  002D                     ___lldiv@counter:	
   372                           
   373                           ; 1 bytes @ 0xD
   374  002D                     	ds	1
   375  002E                     ??_calc_times:	
   376                           
   377                           ; 0 bytes @ 0xE
   378  002E                     	ds	10
   379  0038                     calc_times@sunset_seconds:	
   380                           
   381                           ; 4 bytes @ 0x18
   382  0038                     	ds	4
   383  003C                     calc_times@light_time:	
   384                           
   385                           ; 4 bytes @ 0x1C
   386  003C                     	ds	4
   387  0040                     calc_times@segment_duration:	
   388                           
   389                           ; 4 bytes @ 0x20
   390  0040                     	ds	4
   391  0044                     calc_times@sunrise_seconds:	
   392                           
   393                           ; 4 bytes @ 0x24
   394  0044                     	ds	4
   395  0048                     calc_times@i:	
   396                           
   397                           ; 2 bytes @ 0x28
   398  0048                     	ds	2
   399  004A                     ??_main:	
   400                           
   401                           ; 0 bytes @ 0x2A
   402  004A                     	ds	1
   403                           
   404                           	psect	maintext
   405  0319                     __pmaintext:	
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 268 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  2  168[COMMON] int 
   418 ;; Registers used:
   419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 17F/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1
   425 ;;      Params:         0       0       0
   426 ;;      Locals:         0       0       0
   427 ;;      Temps:          0       1       0
   428 ;;      Totals:         0       1       0
   429 ;;Total ram usage:        1 bytes
   430 ;; Hardware stack levels required when called:    5
   431 ;; This function calls:
   432 ;;		_delay_ms
   433 ;;		_calc_times
   434 ;;		_simulate
   435 ;;		___init
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           
   442                           ;psect for function _main
   443  0319                     _main:	
   444                           
   445                           ;PICsun_main.c: 270: __init();
   446                           
   447                           ;incstack = 0
   448                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstack]
   449  0319  22E1               	fcall	___init
   450                           
   451                           ;PICsun_main.c: 273: rcv_buffer[0] = 6;
   452  031A  3006               	movlw	6
   453  031B  0020               	movlb	0	; select bank0
   454  031C  00CA               	movwf	??_main
   455  031D  084A               	movf	??_main,w
   456  031E  00CB               	movwf	_rcv_buffer	;volatile
   457                           
   458                           ;PICsun_main.c: 274: rcv_buffer[1] = 0;
   459  031F  01CC               	clrf	_rcv_buffer+1	;volatile
   460                           
   461                           ;PICsun_main.c: 275: rcv_buffer[2] = 0;
   462  0320  01CD               	clrf	_rcv_buffer+2	;volatile
   463                           
   464                           ;PICsun_main.c: 276: rcv_buffer[3] = 18;
   465  0321  3012               	movlw	18
   466  0322  00CA               	movwf	??_main
   467  0323  084A               	movf	??_main,w
   468  0324  00CE               	movwf	_rcv_buffer+3	;volatile
   469                           
   470                           ;PICsun_main.c: 277: rcv_buffer[4] = 0;
   471  0325  01CF               	clrf	_rcv_buffer+4	;volatile
   472                           
   473                           ;PICsun_main.c: 278: rcv_buffer[5] = 0;
   474  0326  01D0               	clrf	_rcv_buffer+5	;volatile
   475                           
   476                           ;PICsun_main.c: 279: buffer_valid = 1;
   477  0327  3001               	movlw	1
   478  0328  00CA               	movwf	??_main
   479  0329  084A               	movf	??_main,w
   480  032A  00F2               	movwf	_buffer_valid	;volatile
   481  032B                     l1561:	
   482                           ;PICsun_main.c: 281: while (1) {
   483                           
   484                           
   485                           ;PICsun_main.c: 282: if (buffer_valid == 1) {
   486  032B  0872               	movf	_buffer_valid,w	;volatile
   487  032C  3A01               	xorlw	1
   488  032D  1D03               	skipz
   489  032E  2B30               	goto	l170
   490                           
   491                           ;PICsun_main.c: 283: calc_times();
   492  032F  207D               	fcall	_calc_times
   493  0330                     l170:	
   494                           
   495                           ;PICsun_main.c: 284: }
   496                           ;PICsun_main.c: 286: simulate();
   497  0330  2344               	fcall	_simulate
   498                           
   499                           ;PICsun_main.c: 287: delay_ms(500);
   500  0331  30F4               	movlw	244
   501  0332  0020               	movlb	0	; select bank0
   502  0333  00A0               	movwf	?_delay_ms
   503  0334  3001               	movlw	1
   504  0335  00A1               	movwf	?_delay_ms+1
   505  0336  23B6               	fcall	_delay_ms
   506                           
   507                           ;PICsun_main.c: 289: if (++real_time == 120) {
   508  0337  3001               	movlw	1
   509  0338  0020               	movlb	0	; select bank0
   510  0339  07D3               	addwf	_real_time,f	;volatile
   511  033A  3000               	movlw	0
   512  033B  3DD4               	addwfc	_real_time+1,f	;volatile
   513  033C  3078               	movlw	120
   514  033D  0653               	xorwf	_real_time,w	;volatile
   515  033E  0454               	iorwf	_real_time+1,w	;volatile
   516  033F  1D03               	skipz
   517  0340  2B2B               	goto	l1561
   518                           
   519                           ;PICsun_main.c: 290: real_time = 0;
   520  0341  01D3               	clrf	_real_time	;volatile
   521  0342  01D4               	clrf	_real_time+1	;volatile
   522  0343  2B2B               	goto	l1561
   523  0344                     __end_of_main:	
   524                           ;PICsun_main.c: 291: }
   525                           ;PICsun_main.c: 293: }
   526                           ;PICsun_main.c: 296: return (0);
   527                           ;	Return value of _main is never used
   528                           
   529                           
   530                           	psect	text1
   531  02E1                     __ptext1:	
   532 ;; *************** function ___init *****************
   533 ;; Defined at:
   534 ;;		line 218 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;		None               void
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1
   548 ;;      Params:         0       0       0
   549 ;;      Locals:         0       0       0
   550 ;;      Temps:          0       0       0
   551 ;;      Totals:         0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    3
   555 ;; This function calls:
   556 ;;		_delay_ms
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function ___init
   564  02E1                     ___init:	
   565                           
   566                           ;PICsun_main.c: 221: OSCCONbits.SPLLEN = 0;
   567                           
   568                           ;incstack = 0
   569                           ; Regs used in ___init: [wreg+status,2+status,0+pclath+cstack]
   570  02E1  0021               	movlb	1	; select bank1
   571  02E2  1399               	bcf	25,7	;volatile
   572                           
   573                           ;PICsun_main.c: 222: OSCCONbits.IRCF = 0b1110;
   574  02E3  0819               	movf	25,w	;volatile
   575  02E4  3987               	andlw	-121
   576  02E5  3870               	iorlw	112
   577  02E6  0099               	movwf	25	;volatile
   578                           
   579                           ;PICsun_main.c: 223: OSCCONbits.SCS = 0x02;
   580  02E7  0819               	movf	25,w	;volatile
   581  02E8  39FC               	andlw	-4
   582  02E9  3802               	iorlw	2
   583  02EA  0099               	movwf	25	;volatile
   584                           
   585                           ;PICsun_main.c: 227: TRISAbits.TRISA0 = 0;
   586  02EB  100C               	bcf	12,0	;volatile
   587                           
   588                           ;PICsun_main.c: 228: TRISAbits.TRISA1 = 1;
   589  02EC  148C               	bsf	12,1	;volatile
   590                           
   591                           ;PICsun_main.c: 229: TRISAbits.TRISA2 = 1;
   592  02ED  150C               	bsf	12,2	;volatile
   593                           
   594                           ;PICsun_main.c: 230: TRISAbits.TRISA3 = 0;
   595  02EE  118C               	bcf	12,3	;volatile
   596                           
   597                           ;PICsun_main.c: 231: TRISAbits.TRISA4 = 0;
   598  02EF  120C               	bcf	12,4	;volatile
   599                           
   600                           ;PICsun_main.c: 232: TRISAbits.TRISA5 = 1;
   601  02F0  168C               	bsf	12,5	;volatile
   602                           
   603                           ;PICsun_main.c: 235: ANSELA = 0x00;
   604  02F1  0023               	movlb	3	; select bank3
   605  02F2  018C               	clrf	12	;volatile
   606                           
   607                           ;PICsun_main.c: 238: APFCONbits.CCP1SEL = 1;
   608  02F3  0022               	movlb	2	; select bank2
   609  02F4  141D               	bsf	29,0	;volatile
   610                           
   611                           ;PICsun_main.c: 241: OPTION_REG = 0b00000101;
   612  02F5  3005               	movlw	5
   613  02F6  0021               	movlb	1	; select bank1
   614  02F7  0095               	movwf	21	;volatile
   615                           
   616                           ;PICsun_main.c: 244: WPUA = 0b00000000;
   617  02F8  0024               	movlb	4	; select bank4
   618  02F9  018C               	clrf	12	;volatile
   619                           
   620                           ;PICsun_main.c: 247: LATA = 0b00000000;
   621  02FA  0022               	movlb	2	; select bank2
   622  02FB  018C               	clrf	12	;volatile
   623                           
   624                           ;PICsun_main.c: 249: SSP1CON1 = 0b00110110;
   625  02FC  3036               	movlw	54
   626  02FD  0024               	movlb	4	; select bank4
   627  02FE  0095               	movwf	21	;volatile
   628                           
   629                           ;PICsun_main.c: 250: SSP1CON2bits.SEN = 1;
   630  02FF  1416               	bsf	22,0	;volatile
   631                           
   632                           ;PICsun_main.c: 251: SSP1ADD = 0x20 << 1;
   633  0300  3040               	movlw	64
   634  0301  0092               	movwf	18	;volatile
   635                           
   636                           ;PICsun_main.c: 254: PR2 = 0xFF;
   637  0302  30FF               	movlw	255
   638  0303  0020               	movlb	0	; select bank0
   639  0304  009B               	movwf	27	;volatile
   640                           
   641                           ;PICsun_main.c: 255: CCP1CONbits.CCP1M = 0b1100;
   642  0305  0025               	movlb	5	; select bank5
   643  0306  0813               	movf	19,w	;volatile
   644  0307  39F0               	andlw	-16
   645  0308  380C               	iorlw	12
   646  0309  0093               	movwf	19	;volatile
   647                           
   648                           ;PICsun_main.c: 256: T2CONbits.T2CKPS = 0b11;
   649  030A  3003               	movlw	3
   650  030B  0020               	movlb	0	; select bank0
   651  030C  049C               	iorwf	28,f	;volatile
   652                           
   653                           ;PICsun_main.c: 258: PIR1bits.SSP1IF = 0;
   654  030D  1191               	bcf	17,3	;volatile
   655                           
   656                           ;PICsun_main.c: 259: PIE1bits.SSP1IE = 1;
   657  030E  0021               	movlb	1	; select bank1
   658  030F  1591               	bsf	17,3	;volatile
   659                           
   660                           ;PICsun_main.c: 262: INTCONbits.GIE = 1;
   661  0310  178B               	bsf	11,7	;volatile
   662                           
   663                           ;PICsun_main.c: 263: INTCONbits.PEIE = 1;
   664  0311  170B               	bsf	11,6	;volatile
   665                           
   666                           ;PICsun_main.c: 265: delay_ms(100);
   667  0312  3064               	movlw	100
   668  0313  0020               	movlb	0	; select bank0
   669  0314  00A0               	movwf	?_delay_ms
   670  0315  3000               	movlw	0
   671  0316  00A1               	movwf	?_delay_ms+1
   672  0317  23B6               	fcall	_delay_ms
   673  0318  0008               	return
   674  0319                     __end_of___init:	
   675                           
   676                           	psect	text2
   677  03B6                     __ptext2:	
   678 ;; *************** function _delay_ms *****************
   679 ;; Defined at:
   680 ;;		line 36 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  ms              2    0[BANK0 ] unsigned int 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;		None               void
   687 ;; Registers used:
   688 ;;		wreg, status,2
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1
   694 ;;      Params:         0       2       0
   695 ;;      Locals:         0       0       0
   696 ;;      Temps:          0       0       0
   697 ;;      Totals:         0       2       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    2
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		___init
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _delay_ms
   711  03B6                     _delay_ms:	
   712                           
   713                           ;PICsun_main.c: 37: TMR0IF=0;
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _delay_ms: [wreg+status,2]
   717  03B6  110B               	bcf	11,2	;volatile
   718                           
   719                           ;PICsun_main.c: 38: TMR0IE =1;
   720  03B7  168B               	bsf	11,5	;volatile
   721                           
   722                           ;PICsun_main.c: 39: msec=0;
   723  03B8  01F0               	clrf	_msec	;volatile
   724  03B9  01F1               	clrf	_msec+1	;volatile
   725  03BA                     l1383:	
   726                           ;PICsun_main.c: 40: while(msec!=ms);
   727                           
   728  03BA  0020               	movlb	0	; select bank0
   729  03BB  0821               	movf	delay_ms@ms+1,w
   730  03BC  0671               	xorwf	_msec+1,w	;volatile
   731  03BD  1D03               	skipz
   732  03BE  2BC1               	goto	u1095
   733  03BF  0820               	movf	delay_ms@ms,w
   734  03C0  0670               	xorwf	_msec,w	;volatile
   735  03C1                     u1095:	
   736  03C1  1D03               	skipz
   737  03C2  2BBA               	goto	l1383
   738                           
   739                           ;PICsun_main.c: 41: TMR0IE =0;
   740  03C3  128B               	bcf	11,5	;volatile
   741  03C4  0008               	return
   742  03C5                     __end_of_delay_ms:	
   743                           
   744                           	psect	text3
   745  0344                     __ptext3:	
   746 ;; *************** function _simulate *****************
   747 ;; Defined at:
   748 ;;		line 211 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  simulation_t    2    6[BANK0 ] int 
   753 ;; Return value:  Size  Location     Type
   754 ;;		None               void
   755 ;; Registers used:
   756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1
   762 ;;      Params:         0       0       0
   763 ;;      Locals:         0       2       0
   764 ;;      Temps:          0       0       0
   765 ;;      Totals:         0       2       0
   766 ;;Total ram usage:        2 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    4
   769 ;; This function calls:
   770 ;;		_ready_pwm
   771 ;;		_check_segment
   772 ;;		___wmul
   773 ;; This function is called by:
   774 ;;		_main
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           
   779                           ;psect for function _simulate
   780  0344                     _simulate:	
   781                           
   782                           ;PICsun_main.c: 212: int simulation_time = real_time * 720;
   783                           
   784                           ;incstack = 0
   785                           ; Regs used in _simulate: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstack]
   786  0344  0020               	movlb	0	; select bank0
   787  0345  0854               	movf	_real_time+1,w	;volatile
   788  0346  01A1               	clrf	?___wmul+1
   789  0347  07A1               	addwf	?___wmul+1,f
   790  0348  0853               	movf	_real_time,w	;volatile
   791  0349  01A0               	clrf	?___wmul
   792  034A  07A0               	addwf	?___wmul,f
   793  034B  30D0               	movlw	208
   794  034C  00A2               	movwf	?___wmul+2
   795  034D  3002               	movlw	2
   796  034E  00A3               	movwf	?___wmul+3
   797  034F  2385               	fcall	___wmul
   798  0350  0020               	movlb	0	; select bank0
   799  0351  0821               	movf	?___wmul+1,w
   800  0352  01A7               	clrf	simulate@simulation_time+1
   801  0353  07A7               	addwf	simulate@simulation_time+1,f
   802  0354  0820               	movf	?___wmul,w
   803  0355  01A6               	clrf	simulate@simulation_time
   804  0356  07A6               	addwf	simulate@simulation_time,f
   805                           
   806                           ;PICsun_main.c: 214: check_segment(simulation_time);
   807  0357  0827               	movf	simulate@simulation_time+1,w
   808  0358  01A1               	clrf	?_check_segment+1
   809  0359  07A1               	addwf	?_check_segment+1,f
   810  035A  0826               	movf	simulate@simulation_time,w
   811  035B  01A0               	clrf	?_check_segment
   812  035C  07A0               	addwf	?_check_segment,f
   813  035D  2165               	fcall	_check_segment
   814                           
   815                           ;PICsun_main.c: 215: ready_pwm(present_segment);
   816  035E  0020               	movlb	0	; select bank0
   817  035F  0852               	movf	_present_segment+1,w	;volatile
   818  0360  01A5               	clrf	?_ready_pwm+1
   819  0361  07A5               	addwf	?_ready_pwm+1,f
   820  0362  0851               	movf	_present_segment,w	;volatile
   821  0363  01A4               	clrf	?_ready_pwm
   822  0364  07A4               	addwf	?_ready_pwm,f
   823  0365  220B               	fcall	_ready_pwm
   824  0366  0008               	return
   825  0367                     __end_of_simulate:	
   826                           
   827                           	psect	text4
   828  0165                     __ptext4:	
   829 ;; *************** function _check_segment *****************
   830 ;; Defined at:
   831 ;;		line 190 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  check_time      2    0[BANK0 ] int 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  i               2    4[BANK0 ] int 
   836 ;; Return value:  Size  Location     Type
   837 ;;		None               void
   838 ;; Registers used:
   839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1
   845 ;;      Params:         0       2       0
   846 ;;      Locals:         0       2       0
   847 ;;      Temps:          0       2       0
   848 ;;      Totals:         0       6       0
   849 ;;Total ram usage:        6 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    2
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_simulate
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _check_segment
   861  0165                     _check_segment:	
   862                           
   863                           ;PICsun_main.c: 191: int i;
   864                           ;PICsun_main.c: 193: if (check_time < light_segments[0] || check_time > light_segments[1
      +                          5]) {
   865                           
   866                           ;incstack = 0
   867                           ; Regs used in _check_segment: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1]
   868  0165  0021               	movlb	1	; select bank1
   869  0166  0821               	movf	(_light_segments+1)^(0+128),w	;volatile
   870  0167  0020               	movlb	0	; select bank0
   871  0168  0221               	subwf	check_segment@check_time+1,w
   872  0169  1D03               	skipz
   873  016A  296F               	goto	u1245
   874  016B  0021               	movlb	1	; select bank1
   875  016C  0820               	movf	_light_segments^(0+128),w	;volatile
   876  016D  0020               	movlb	0	; select bank0
   877  016E  0220               	subwf	check_segment@check_time,w
   878  016F                     u1245:	
   879  016F  1C03               	skipc
   880  0170  297C               	goto	l1457
   881  0171  0821               	movf	check_segment@check_time+1,w
   882  0172  0021               	movlb	1	; select bank1
   883  0173  023F               	subwf	((_light_segments+1)^(0+128)+30),w	;volatile
   884  0174  1D03               	skipz
   885  0175  297A               	goto	u1255
   886  0176  0020               	movlb	0	; select bank0
   887  0177  0820               	movf	check_segment@check_time,w
   888  0178  0021               	movlb	1	; select bank1
   889  0179  023E               	subwf	(_light_segments^(0+128)+30),w	;volatile
   890  017A                     u1255:	
   891  017A  1803               	skipnc
   892  017B  2980               	goto	l1459
   893  017C                     l1457:	
   894                           
   895                           ;PICsun_main.c: 194: present_segment = 0;
   896  017C  0020               	movlb	0	; select bank0
   897  017D  01D1               	clrf	_present_segment	;volatile
   898  017E  01D2               	clrf	_present_segment+1	;volatile
   899                           
   900                           ;PICsun_main.c: 195: } else {
   901  017F  0008               	return
   902  0180                     l1459:	
   903                           
   904                           ;PICsun_main.c: 196: for (i = 0; i < 15 + 1; i++) {
   905  0180  0020               	movlb	0	; select bank0
   906  0181  01A4               	clrf	check_segment@i
   907  0182  01A5               	clrf	check_segment@i+1
   908  0183  0825               	movf	check_segment@i+1,w
   909  0184  3A80               	xorlw	128
   910  0185  00FF               	movwf	127
   911  0186  3080               	movlw	128
   912  0187  027F               	subwf	127,w
   913  0188  1D03               	skipz
   914  0189  298C               	goto	u1265
   915  018A  3010               	movlw	16
   916  018B  0224               	subwf	check_segment@i,w
   917  018C                     u1265:	
   918  018C  1803               	btfsc	3,0
   919  018D  29C6               	goto	l1475
   920  018E                     l1465:	
   921                           
   922                           ;PICsun_main.c: 197: if (check_time > light_segments[i] && check_time < light_segments[i
      +                           + 1]) {
   923  018E  0020               	movlb	0	; select bank0
   924  018F  3524               	lslf	check_segment@i,w
   925  0190  3EA0               	addlw	_light_segments& (0+255)
   926  0191  0086               	movwf	6
   927  0192  0187               	clrf	7
   928  0193  3F40               	moviw [0]fsr1
   929  0194  00A2               	movwf	??_check_segment
   930  0195  3F41               	moviw [1]fsr1
   931  0196  00A3               	movwf	??_check_segment+1
   932  0197  0821               	movf	check_segment@check_time+1,w
   933  0198  0223               	subwf	??_check_segment+1,w
   934  0199  1D03               	skipz
   935  019A  299D               	goto	u1275
   936  019B  0820               	movf	check_segment@check_time,w
   937  019C  0222               	subwf	??_check_segment,w
   938  019D                     u1275:	
   939  019D  1803               	skipnc
   940  019E  29B7               	goto	l1471
   941  019F  3524               	lslf	check_segment@i,w
   942  01A0  3E02               	addlw	2
   943  01A1  3EA0               	addlw	_light_segments& (0+255)
   944  01A2  0086               	movwf	6
   945  01A3  0187               	clrf	7
   946  01A4  3F40               	moviw [0]fsr1
   947  01A5  00A2               	movwf	??_check_segment
   948  01A6  3F41               	moviw [1]fsr1
   949  01A7  00A3               	movwf	??_check_segment+1
   950  01A8  0823               	movf	??_check_segment+1,w
   951  01A9  0221               	subwf	check_segment@check_time+1,w
   952  01AA  1D03               	skipz
   953  01AB  29AE               	goto	u1285
   954  01AC  0822               	movf	??_check_segment,w
   955  01AD  0220               	subwf	check_segment@check_time,w
   956  01AE                     u1285:	
   957  01AE  1803               	skipnc
   958  01AF  29B7               	goto	l1471
   959                           
   960                           ;PICsun_main.c: 198: present_segment = i + 1;
   961  01B0  0824               	movf	check_segment@i,w
   962  01B1  3E01               	addlw	1
   963  01B2  00D1               	movwf	_present_segment	;volatile
   964  01B3  3000               	movlw	0
   965  01B4  3D25               	addwfc	check_segment@i+1,w
   966  01B5  00D2               	movwf	_present_segment+1	;volatile
   967                           
   968                           ;PICsun_main.c: 199: break;
   969  01B6  29C6               	goto	l1475
   970  01B7                     l1471:	
   971  01B7  3001               	movlw	1
   972  01B8  07A4               	addwf	check_segment@i,f
   973  01B9  3000               	movlw	0
   974  01BA  3DA5               	addwfc	check_segment@i+1,f
   975  01BB  0825               	movf	check_segment@i+1,w
   976  01BC  3A80               	xorlw	128
   977  01BD  00FF               	movwf	127
   978  01BE  3080               	movlw	128
   979  01BF  027F               	subwf	127,w
   980  01C0  1D03               	skipz
   981  01C1  29C4               	goto	u1295
   982  01C2  3010               	movlw	16
   983  01C3  0224               	subwf	check_segment@i,w
   984  01C4                     u1295:	
   985  01C4  1C03               	skipc
   986  01C5  298E               	goto	l1465
   987  01C6                     l1475:	
   988                           
   989                           ;PICsun_main.c: 200: }
   990                           ;PICsun_main.c: 201: }
   991                           ;PICsun_main.c: 202: for (i = 15; i < 15; i++) {
   992  01C6  300F               	movlw	15
   993  01C7  0020               	movlb	0	; select bank0
   994  01C8  00A4               	movwf	check_segment@i
   995  01C9  3000               	movlw	0
   996  01CA  00A5               	movwf	check_segment@i+1
   997  01CB                     L1:	
   998  01CB  0825               	movf	check_segment@i+1,w
   999  01CC  3A80               	xorlw	128
  1000  01CD  00FF               	movwf	127
  1001  01CE  3080               	movlw	128
  1002  01CF  027F               	subwf	127,w
  1003  01D0  1D03               	skipz
  1004  01D1  29D4               	goto	u1305
  1005  01D2  300F               	movlw	15
  1006  01D3  0224               	subwf	check_segment@i,w
  1007  01D4                     u1305:	
  1008  01D4  1803               	btfsc	3,0
  1009  01D5  0008               	return
  1010                           
  1011                           ;PICsun_main.c: 203: if (check_time > light_segments[i] && check_time < light_segments[i
      +                           + 1]) {
  1012  01D6  0020               	movlb	0	; select bank0
  1013  01D7  3524               	lslf	check_segment@i,w
  1014  01D8  3EA0               	addlw	_light_segments& (0+255)
  1015  01D9  0086               	movwf	6
  1016  01DA  0187               	clrf	7
  1017  01DB  3F40               	moviw [0]fsr1
  1018  01DC  00A2               	movwf	??_check_segment
  1019  01DD  3F41               	moviw [1]fsr1
  1020  01DE  00A3               	movwf	??_check_segment+1
  1021  01DF  0821               	movf	check_segment@check_time+1,w
  1022  01E0  0223               	subwf	??_check_segment+1,w
  1023  01E1  1D03               	skipz
  1024  01E2  29E5               	goto	u1315
  1025  01E3  0820               	movf	check_segment@check_time,w
  1026  01E4  0222               	subwf	??_check_segment,w
  1027  01E5                     u1315:	
  1028  01E5  1803               	skipnc
  1029  01E6  2A06               	goto	l1487
  1030  01E7  3524               	lslf	check_segment@i,w
  1031  01E8  3E02               	addlw	2
  1032  01E9  3EA0               	addlw	_light_segments& (0+255)
  1033  01EA  0086               	movwf	6
  1034  01EB  0187               	clrf	7
  1035  01EC  3F40               	moviw [0]fsr1
  1036  01ED  00A2               	movwf	??_check_segment
  1037  01EE  3F41               	moviw [1]fsr1
  1038  01EF  00A3               	movwf	??_check_segment+1
  1039  01F0  0823               	movf	??_check_segment+1,w
  1040  01F1  0221               	subwf	check_segment@check_time+1,w
  1041  01F2  1D03               	skipz
  1042  01F3  29F6               	goto	u1325
  1043  01F4  0822               	movf	??_check_segment,w
  1044  01F5  0220               	subwf	check_segment@check_time,w
  1045  01F6                     u1325:	
  1046  01F6  1803               	skipnc
  1047  01F7  2A06               	goto	l1487
  1048                           
  1049                           ;PICsun_main.c: 204: present_segment = 15 - i;
  1050  01F8  0924               	comf	check_segment@i,w
  1051  01F9  00A2               	movwf	??_check_segment
  1052  01FA  0925               	comf	check_segment@i+1,w
  1053  01FB  00A3               	movwf	??_check_segment+1
  1054  01FC  0AA2               	incf	??_check_segment,f
  1055  01FD  1903               	skipnz
  1056  01FE  0AA3               	incf	??_check_segment+1,f
  1057  01FF  0822               	movf	??_check_segment,w
  1058  0200  3E0F               	addlw	15
  1059  0201  00D1               	movwf	_present_segment	;volatile
  1060  0202  3000               	movlw	0
  1061  0203  3D23               	addwfc	??_check_segment+1,w
  1062  0204  00D2               	movwf	_present_segment+1	;volatile
  1063                           
  1064                           ;PICsun_main.c: 205: break;
  1065  0205  0008               	return
  1066  0206                     l1487:	
  1067  0206  3001               	movlw	1
  1068  0207  07A4               	addwf	check_segment@i,f
  1069  0208  3000               	movlw	0
  1070  0209  3DA5               	addwfc	check_segment@i+1,f
  1071  020A  29CB               	goto	L1
  1072  020B                     __end_of_check_segment:	
  1073                           
  1074                           	psect	text5
  1075  020B                     __ptext5:	
  1076 ;; *************** function _ready_pwm *****************
  1077 ;; Defined at:
  1078 ;;		line 153 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  segment         2    4[BANK0 ] int 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;		None               void
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1
  1092 ;;      Params:         0       2       0
  1093 ;;      Locals:         0       0       0
  1094 ;;      Temps:          0       0       0
  1095 ;;      Totals:         0       2       0
  1096 ;;Total ram usage:        2 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    3
  1099 ;; This function calls:
  1100 ;;		_setPWMdc
  1101 ;; This function is called by:
  1102 ;;		_simulate
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           
  1107                           ;psect for function _ready_pwm
  1108  020B                     _ready_pwm:	
  1109                           
  1110                           ;PICsun_main.c: 154: if (segment == 0) {
  1111                           
  1112                           ;incstack = 0
  1113                           ; Regs used in _ready_pwm: [wreg+status,2+status,0+pclath+cstack]
  1114  020B  0020               	movlb	0	; select bank0
  1115  020C  0825               	movf	ready_pwm@segment+1,w
  1116  020D  0424               	iorwf	ready_pwm@segment,w
  1117  020E  1D03               	skipz
  1118  020F  2A16               	goto	l1413
  1119                           
  1120                           ;PICsun_main.c: 156: setPWMdc(1023);
  1121  0210  30FF               	movlw	255
  1122  0211  00A0               	movwf	?_setPWMdc
  1123  0212  3003               	movlw	3
  1124  0213  00A1               	movwf	?_setPWMdc+1
  1125  0214  2367               	fcall	_setPWMdc
  1126                           
  1127                           ;PICsun_main.c: 157: } else if (segment == 1) {
  1128  0215  0008               	return
  1129  0216                     l1413:	
  1130  0216  3001               	movlw	1
  1131  0217  0020               	movlb	0	; select bank0
  1132  0218  0624               	xorwf	ready_pwm@segment,w
  1133  0219  0425               	iorwf	ready_pwm@segment+1,w
  1134  021A  1D03               	skipz
  1135  021B  2A22               	goto	l1417
  1136                           
  1137                           ;PICsun_main.c: 159: setPWMdc(976);
  1138  021C  30D0               	movlw	208
  1139  021D  00A0               	movwf	?_setPWMdc
  1140  021E  3003               	movlw	3
  1141  021F  00A1               	movwf	?_setPWMdc+1
  1142  0220  2367               	fcall	_setPWMdc
  1143                           
  1144                           ;PICsun_main.c: 160: } else if (segment == 2) {
  1145  0221  0008               	return
  1146  0222                     l1417:	
  1147  0222  3002               	movlw	2
  1148  0223  0020               	movlb	0	; select bank0
  1149  0224  0624               	xorwf	ready_pwm@segment,w
  1150  0225  0425               	iorwf	ready_pwm@segment+1,w
  1151  0226  1D03               	skipz
  1152  0227  2A2E               	goto	l1421
  1153                           
  1154                           ;PICsun_main.c: 162: setPWMdc(924);
  1155  0228  309C               	movlw	156
  1156  0229  00A0               	movwf	?_setPWMdc
  1157  022A  3003               	movlw	3
  1158  022B  00A1               	movwf	?_setPWMdc+1
  1159  022C  2367               	fcall	_setPWMdc
  1160                           
  1161                           ;PICsun_main.c: 163: } else if (segment == 3) {
  1162  022D  0008               	return
  1163  022E                     l1421:	
  1164  022E  3003               	movlw	3
  1165  022F  0020               	movlb	0	; select bank0
  1166  0230  0624               	xorwf	ready_pwm@segment,w
  1167  0231  0425               	iorwf	ready_pwm@segment+1,w
  1168  0232  1D03               	skipz
  1169  0233  2A3A               	goto	l1425
  1170                           
  1171                           ;PICsun_main.c: 165: setPWMdc(864);
  1172  0234  3060               	movlw	96
  1173  0235  00A0               	movwf	?_setPWMdc
  1174  0236  3003               	movlw	3
  1175  0237  00A1               	movwf	?_setPWMdc+1
  1176  0238  2367               	fcall	_setPWMdc
  1177                           
  1178                           ;PICsun_main.c: 166: } else if (segment == 4) {
  1179  0239  0008               	return
  1180  023A                     l1425:	
  1181  023A  3004               	movlw	4
  1182  023B  0020               	movlb	0	; select bank0
  1183  023C  0624               	xorwf	ready_pwm@segment,w
  1184  023D  0425               	iorwf	ready_pwm@segment+1,w
  1185  023E  1D03               	skipz
  1186  023F  2A46               	goto	l1429
  1187                           
  1188                           ;PICsun_main.c: 168: setPWMdc(796);
  1189  0240  301C               	movlw	28
  1190  0241  00A0               	movwf	?_setPWMdc
  1191  0242  3003               	movlw	3
  1192  0243  00A1               	movwf	?_setPWMdc+1
  1193  0244  2367               	fcall	_setPWMdc
  1194                           
  1195                           ;PICsun_main.c: 169: } else if (segment == 5) {
  1196  0245  0008               	return
  1197  0246                     l1429:	
  1198  0246  3005               	movlw	5
  1199  0247  0020               	movlb	0	; select bank0
  1200  0248  0624               	xorwf	ready_pwm@segment,w
  1201  0249  0425               	iorwf	ready_pwm@segment+1,w
  1202  024A  1D03               	skipz
  1203  024B  2A52               	goto	l1433
  1204                           
  1205                           ;PICsun_main.c: 171: setPWMdc(715);
  1206  024C  30CB               	movlw	203
  1207  024D  00A0               	movwf	?_setPWMdc
  1208  024E  3002               	movlw	2
  1209  024F  00A1               	movwf	?_setPWMdc+1
  1210  0250  2367               	fcall	_setPWMdc
  1211                           
  1212                           ;PICsun_main.c: 172: } else if (segment == 6) {
  1213  0251  0008               	return
  1214  0252                     l1433:	
  1215  0252  3006               	movlw	6
  1216  0253  0020               	movlb	0	; select bank0
  1217  0254  0624               	xorwf	ready_pwm@segment,w
  1218  0255  0425               	iorwf	ready_pwm@segment+1,w
  1219  0256  1D03               	skipz
  1220  0257  2A5E               	goto	l1437
  1221                           
  1222                           ;PICsun_main.c: 174: setPWMdc(616);
  1223  0258  3068               	movlw	104
  1224  0259  00A0               	movwf	?_setPWMdc
  1225  025A  3002               	movlw	2
  1226  025B  00A1               	movwf	?_setPWMdc+1
  1227  025C  2367               	fcall	_setPWMdc
  1228                           
  1229                           ;PICsun_main.c: 175: } else if (segment == 7) {
  1230  025D  0008               	return
  1231  025E                     l1437:	
  1232  025E  3007               	movlw	7
  1233  025F  0020               	movlb	0	; select bank0
  1234  0260  0624               	xorwf	ready_pwm@segment,w
  1235  0261  0425               	iorwf	ready_pwm@segment+1,w
  1236  0262  1D03               	skipz
  1237  0263  2A6A               	goto	l1441
  1238                           
  1239                           ;PICsun_main.c: 177: setPWMdc(488);
  1240  0264  30E8               	movlw	232
  1241  0265  00A0               	movwf	?_setPWMdc
  1242  0266  3001               	movlw	1
  1243  0267  00A1               	movwf	?_setPWMdc+1
  1244  0268  2367               	fcall	_setPWMdc
  1245                           
  1246                           ;PICsun_main.c: 178: } else if (segment == 8) {
  1247  0269  0008               	return
  1248  026A                     l1441:	
  1249  026A  3008               	movlw	8
  1250  026B  0020               	movlb	0	; select bank0
  1251  026C  0624               	xorwf	ready_pwm@segment,w
  1252  026D  0425               	iorwf	ready_pwm@segment+1,w
  1253  026E  1D03               	skipz
  1254  026F  2A76               	goto	l1445
  1255                           
  1256                           ;PICsun_main.c: 180: setPWMdc(307);
  1257  0270  3033               	movlw	51
  1258  0271  00A0               	movwf	?_setPWMdc
  1259  0272  3001               	movlw	1
  1260  0273  00A1               	movwf	?_setPWMdc+1
  1261  0274  2367               	fcall	_setPWMdc
  1262                           
  1263                           ;PICsun_main.c: 181: } else if (segment == 9) {
  1264  0275  0008               	return
  1265  0276                     l1445:	
  1266  0276  3009               	movlw	9
  1267  0277  0020               	movlb	0	; select bank0
  1268  0278  0624               	xorwf	ready_pwm@segment,w
  1269  0279  0425               	iorwf	ready_pwm@segment+1,w
  1270  027A  1D03               	skipz
  1271  027B  2A82               	goto	l1449
  1272                           
  1273                           ;PICsun_main.c: 183: setPWMdc(42);
  1274  027C  302A               	movlw	42
  1275  027D  00A0               	movwf	?_setPWMdc
  1276  027E  3000               	movlw	0
  1277  027F  00A1               	movwf	?_setPWMdc+1
  1278  0280  2367               	fcall	_setPWMdc
  1279                           
  1280                           ;PICsun_main.c: 184: } else if (segment == 10) {
  1281  0281  0008               	return
  1282  0282                     l1449:	
  1283  0282  300A               	movlw	10
  1284  0283  0020               	movlb	0	; select bank0
  1285  0284  0624               	xorwf	ready_pwm@segment,w
  1286  0285  0425               	iorwf	ready_pwm@segment+1,w
  1287  0286  1D03               	skipz
  1288  0287  0008               	return
  1289                           
  1290                           ;PICsun_main.c: 186: setPWMdc(0);
  1291  0288  3000               	movlw	0
  1292  0289  00A0               	movwf	?_setPWMdc
  1293  028A  3000               	movlw	0
  1294  028B  00A1               	movwf	?_setPWMdc+1
  1295  028C  2367               	fcall	_setPWMdc
  1296  028D  0008               	return
  1297  028E                     __end_of_ready_pwm:	
  1298                           
  1299                           	psect	text6
  1300  0367                     __ptext6:	
  1301 ;; *************** function _setPWMdc *****************
  1302 ;; Defined at:
  1303 ;;		line 43 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  dc              2    0[BANK0 ] unsigned int 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;		None               void
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1
  1317 ;;      Params:         0       2       0
  1318 ;;      Locals:         0       0       0
  1319 ;;      Temps:          0       2       0
  1320 ;;      Totals:         0       4       0
  1321 ;;Total ram usage:        4 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    2
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_ready_pwm
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _setPWMdc
  1333  0367                     _setPWMdc:	
  1334                           
  1335                           ;PICsun_main.c: 44: CCPR1L = dc>>2;
  1336                           
  1337                           ;incstack = 0
  1338                           ; Regs used in _setPWMdc: [wreg+status,2+status,0]
  1339  0367  0020               	movlb	0	; select bank0
  1340  0368  0821               	movf	setPWMdc@dc+1,w
  1341  0369  00A3               	movwf	??_setPWMdc+1
  1342  036A  0820               	movf	setPWMdc@dc,w
  1343  036B  00A2               	movwf	??_setPWMdc
  1344  036C  36A3               	lsrf	??_setPWMdc+1,f
  1345  036D  0CA2               	rrf	??_setPWMdc,f
  1346  036E  36A3               	lsrf	??_setPWMdc+1,f
  1347  036F  0CA2               	rrf	??_setPWMdc,f
  1348  0370  0822               	movf	??_setPWMdc,w
  1349  0371  0025               	movlb	5	; select bank5
  1350  0372  0091               	movwf	17	;volatile
  1351                           
  1352                           ;PICsun_main.c: 45: CCP1CON = ((CCP1CON&0b11001111)|((dc<<4)&0b00110000));
  1353  0373  0020               	movlb	0	; select bank0
  1354  0374  0820               	movf	setPWMdc@dc,w
  1355  0375  00A2               	movwf	??_setPWMdc
  1356  0376  3004               	movlw	4
  1357  0377                     u1105:	
  1358  0377  35A2               	lslf	??_setPWMdc,f
  1359  0378  0B89               	decfsz	9,f
  1360  0379  2B77               	goto	u1105
  1361  037A  3030               	movlw	48
  1362  037B  0522               	andwf	??_setPWMdc,w
  1363  037C  00A3               	movwf	??_setPWMdc+1
  1364  037D  0025               	movlb	5	; select bank5
  1365  037E  0813               	movf	19,w	;volatile
  1366  037F  39CF               	andlw	207
  1367  0380  0020               	movlb	0	; select bank0
  1368  0381  0423               	iorwf	??_setPWMdc+1,w
  1369  0382  0025               	movlb	5	; select bank5
  1370  0383  0093               	movwf	19	;volatile
  1371  0384  0008               	return
  1372  0385                     __end_of_setPWMdc:	
  1373                           
  1374                           	psect	text7
  1375  007D                     __ptext7:	
  1376 ;; *************** function _calc_times *****************
  1377 ;; Defined at:
  1378 ;;		line 130 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  sunrise_seco    4   36[BANK0 ] long 
  1383 ;;  segment_dura    4   32[BANK0 ] unsigned long 
  1384 ;;  light_time      4   28[BANK0 ] unsigned long 
  1385 ;;  sunset_secon    4   24[BANK0 ] long 
  1386 ;;  i               2   40[BANK0 ] int 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;		None               void
  1389 ;; Registers used:
  1390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1
  1396 ;;      Params:         0       0       0
  1397 ;;      Locals:         0      18       0
  1398 ;;      Temps:          0      10       0
  1399 ;;      Totals:         0      28       0
  1400 ;;Total ram usage:       28 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    3
  1403 ;; This function calls:
  1404 ;;		___lldiv
  1405 ;;		___wmul
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _calc_times
  1413  007D                     _calc_times:	
  1414                           
  1415                           ;PICsun_main.c: 137: long sunrise_seconds = rcv_buffer[0] * 3600 + rcv_buffer[1] * 60 + 
      +                          rcv_buffer[2];
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _calc_times: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  1419  007D  0020               	movlb	0	; select bank0
  1420  007E  084D               	movf	_rcv_buffer+2,w	;volatile
  1421  007F  00AE               	movwf	??_calc_times
  1422  0080  01AF               	clrf	??_calc_times+1
  1423  0081  084B               	movf	_rcv_buffer,w	;volatile
  1424  0082  00B0               	movwf	??_calc_times+2
  1425  0083  01B1               	clrf	??_calc_times+3
  1426  0084  0830               	movf	??_calc_times+2,w
  1427  0085  00A0               	movwf	?___wmul
  1428  0086  0831               	movf	??_calc_times+3,w
  1429  0087  00A1               	movwf	?___wmul+1
  1430  0088  3010               	movlw	16
  1431  0089  00A2               	movwf	?___wmul+2
  1432  008A  300E               	movlw	14
  1433  008B  00A3               	movwf	?___wmul+3
  1434  008C  2385               	fcall	___wmul
  1435  008D  0020               	movlb	0	; select bank0
  1436  008E  0820               	movf	?___wmul,w
  1437  008F  00B2               	movwf	??_calc_times+4
  1438  0090  0821               	movf	?___wmul+1,w
  1439  0091  00B3               	movwf	??_calc_times+5
  1440  0092  084C               	movf	_rcv_buffer+1,w	;volatile
  1441  0093  00B4               	movwf	??_calc_times+6
  1442  0094  01B5               	clrf	??_calc_times+7
  1443  0095  0834               	movf	??_calc_times+6,w
  1444  0096  00A0               	movwf	?___wmul
  1445  0097  0835               	movf	??_calc_times+7,w
  1446  0098  00A1               	movwf	?___wmul+1
  1447  0099  303C               	movlw	60
  1448  009A  00A2               	movwf	?___wmul+2
  1449  009B  3000               	movlw	0
  1450  009C  00A3               	movwf	?___wmul+3
  1451  009D  2385               	fcall	___wmul
  1452  009E  0020               	movlb	0	; select bank0
  1453  009F  0820               	movf	?___wmul,w
  1454  00A0  0732               	addwf	??_calc_times+4,w
  1455  00A1  00B6               	movwf	??_calc_times+8
  1456  00A2  0821               	movf	?___wmul+1,w
  1457  00A3  3D33               	addwfc	??_calc_times+5,w
  1458  00A4  00B7               	movwf	??_calc_times+9
  1459  00A5  082E               	movf	??_calc_times,w
  1460  00A6  0736               	addwf	??_calc_times+8,w
  1461  00A7  00C4               	movwf	calc_times@sunrise_seconds
  1462  00A8  082F               	movf	??_calc_times+1,w
  1463  00A9  3D37               	addwfc	??_calc_times+9,w
  1464  00AA  00C5               	movwf	calc_times@sunrise_seconds+1
  1465  00AB  01C6               	clrf	calc_times@sunrise_seconds+2
  1466  00AC  1BC5               	btfsc	calc_times@sunrise_seconds+1,7
  1467  00AD  03C6               	decf	calc_times@sunrise_seconds+2,f
  1468  00AE  0846               	movf	calc_times@sunrise_seconds+2,w
  1469  00AF  00C7               	movwf	calc_times@sunrise_seconds+3
  1470                           
  1471                           ;PICsun_main.c: 138: long sunset_seconds = rcv_buffer[3] * 3600 + rcv_buffer[4] * 60 + r
      +                          cv_buffer[5];
  1472  00B0  0850               	movf	_rcv_buffer+5,w	;volatile
  1473  00B1  00AE               	movwf	??_calc_times
  1474  00B2  01AF               	clrf	??_calc_times+1
  1475  00B3  084E               	movf	_rcv_buffer+3,w	;volatile
  1476  00B4  00B0               	movwf	??_calc_times+2
  1477  00B5  01B1               	clrf	??_calc_times+3
  1478  00B6  0830               	movf	??_calc_times+2,w
  1479  00B7  00A0               	movwf	?___wmul
  1480  00B8  0831               	movf	??_calc_times+3,w
  1481  00B9  00A1               	movwf	?___wmul+1
  1482  00BA  3010               	movlw	16
  1483  00BB  00A2               	movwf	?___wmul+2
  1484  00BC  300E               	movlw	14
  1485  00BD  00A3               	movwf	?___wmul+3
  1486  00BE  2385               	fcall	___wmul
  1487  00BF  0020               	movlb	0	; select bank0
  1488  00C0  0820               	movf	?___wmul,w
  1489  00C1  00B2               	movwf	??_calc_times+4
  1490  00C2  0821               	movf	?___wmul+1,w
  1491  00C3  00B3               	movwf	??_calc_times+5
  1492  00C4  084F               	movf	_rcv_buffer+4,w	;volatile
  1493  00C5  00B4               	movwf	??_calc_times+6
  1494  00C6  01B5               	clrf	??_calc_times+7
  1495  00C7  0834               	movf	??_calc_times+6,w
  1496  00C8  00A0               	movwf	?___wmul
  1497  00C9  0835               	movf	??_calc_times+7,w
  1498  00CA  00A1               	movwf	?___wmul+1
  1499  00CB  303C               	movlw	60
  1500  00CC  00A2               	movwf	?___wmul+2
  1501  00CD  3000               	movlw	0
  1502  00CE  00A3               	movwf	?___wmul+3
  1503  00CF  2385               	fcall	___wmul
  1504  00D0  0020               	movlb	0	; select bank0
  1505  00D1  0820               	movf	?___wmul,w
  1506  00D2  0732               	addwf	??_calc_times+4,w
  1507  00D3  00B6               	movwf	??_calc_times+8
  1508  00D4  0821               	movf	?___wmul+1,w
  1509  00D5  3D33               	addwfc	??_calc_times+5,w
  1510  00D6  00B7               	movwf	??_calc_times+9
  1511  00D7  082E               	movf	??_calc_times,w
  1512  00D8  0736               	addwf	??_calc_times+8,w
  1513  00D9  00B8               	movwf	calc_times@sunset_seconds
  1514  00DA  082F               	movf	??_calc_times+1,w
  1515  00DB  3D37               	addwfc	??_calc_times+9,w
  1516  00DC  00B9               	movwf	calc_times@sunset_seconds+1
  1517  00DD  01BA               	clrf	calc_times@sunset_seconds+2
  1518  00DE  1BB9               	btfsc	calc_times@sunset_seconds+1,7
  1519  00DF  03BA               	decf	calc_times@sunset_seconds+2,f
  1520  00E0  083A               	movf	calc_times@sunset_seconds+2,w
  1521  00E1  00BB               	movwf	calc_times@sunset_seconds+3
  1522                           
  1523                           ;PICsun_main.c: 139: unsigned long light_time = sunset_seconds - sunrise_seconds;
  1524  00E2  0838               	movf	calc_times@sunset_seconds,w
  1525  00E3  00AE               	movwf	??_calc_times
  1526  00E4  0839               	movf	calc_times@sunset_seconds+1,w
  1527  00E5  00AF               	movwf	??_calc_times+1
  1528  00E6  083A               	movf	calc_times@sunset_seconds+2,w
  1529  00E7  00B0               	movwf	??_calc_times+2
  1530  00E8  083B               	movf	calc_times@sunset_seconds+3,w
  1531  00E9  00B1               	movwf	??_calc_times+3
  1532  00EA  0944               	comf	calc_times@sunrise_seconds,w
  1533  00EB  00B2               	movwf	??_calc_times+4
  1534  00EC  0945               	comf	calc_times@sunrise_seconds+1,w
  1535  00ED  00B3               	movwf	??_calc_times+5
  1536  00EE  0946               	comf	calc_times@sunrise_seconds+2,w
  1537  00EF  00B4               	movwf	??_calc_times+6
  1538  00F0  0947               	comf	calc_times@sunrise_seconds+3,w
  1539  00F1  00B5               	movwf	??_calc_times+7
  1540  00F2  0AB2               	incf	??_calc_times+4,f
  1541  00F3  1903               	skipnz
  1542  00F4  0AB3               	incf	??_calc_times+5,f
  1543  00F5  1903               	skipnz
  1544  00F6  0AB4               	incf	??_calc_times+6,f
  1545  00F7  1903               	skipnz
  1546  00F8  0AB5               	incf	??_calc_times+7,f
  1547  00F9  0832               	movf	??_calc_times+4,w
  1548  00FA  07AE               	addwf	??_calc_times,f
  1549  00FB  0833               	movf	??_calc_times+5,w
  1550  00FC  3DAF               	addwfc	??_calc_times+1,f
  1551  00FD  0834               	movf	??_calc_times+6,w
  1552  00FE  3DB0               	addwfc	??_calc_times+2,f
  1553  00FF  0835               	movf	??_calc_times+7,w
  1554  0100  3DB1               	addwfc	??_calc_times+3,f
  1555  0101  0831               	movf	??_calc_times+3,w
  1556  0102  00BF               	movwf	calc_times@light_time+3
  1557  0103  0830               	movf	??_calc_times+2,w
  1558  0104  00BE               	movwf	calc_times@light_time+2
  1559  0105  082F               	movf	??_calc_times+1,w
  1560  0106  00BD               	movwf	calc_times@light_time+1
  1561  0107  082E               	movf	??_calc_times,w
  1562  0108  00BC               	movwf	calc_times@light_time
  1563                           
  1564                           ;PICsun_main.c: 140: unsigned long segment_duration = light_time / 15;
  1565  0109  3000               	movlw	0
  1566  010A  00A3               	movwf	?___lldiv+3
  1567  010B  3000               	movlw	0
  1568  010C  00A2               	movwf	?___lldiv+2
  1569  010D  3000               	movlw	0
  1570  010E  00A1               	movwf	?___lldiv+1
  1571  010F  300F               	movlw	15
  1572  0110  00A0               	movwf	?___lldiv
  1573  0111  083F               	movf	calc_times@light_time+3,w
  1574  0112  00A7               	movwf	?___lldiv+7
  1575  0113  083E               	movf	calc_times@light_time+2,w
  1576  0114  00A6               	movwf	?___lldiv+6
  1577  0115  083D               	movf	calc_times@light_time+1,w
  1578  0116  00A5               	movwf	?___lldiv+5
  1579  0117  083C               	movf	calc_times@light_time,w
  1580  0118  00A4               	movwf	?___lldiv+4
  1581  0119  228E               	fcall	___lldiv
  1582  011A  0020               	movlb	0	; select bank0
  1583  011B  0823               	movf	?___lldiv+3,w
  1584  011C  00C3               	movwf	calc_times@segment_duration+3
  1585  011D  0822               	movf	?___lldiv+2,w
  1586  011E  00C2               	movwf	calc_times@segment_duration+2
  1587  011F  0821               	movf	?___lldiv+1,w
  1588  0120  00C1               	movwf	calc_times@segment_duration+1
  1589  0121  0820               	movf	?___lldiv,w
  1590  0122  00C0               	movwf	calc_times@segment_duration
  1591                           
  1592                           ;PICsun_main.c: 141: int i = 0;
  1593  0123  01C8               	clrf	calc_times@i
  1594  0124  01C9               	clrf	calc_times@i+1
  1595                           
  1596                           ;PICsun_main.c: 143: for (i = 0; i <= 15; i++) {
  1597  0125  01C8               	clrf	calc_times@i
  1598  0126  01C9               	clrf	calc_times@i+1
  1599  0127  0849               	movf	calc_times@i+1,w
  1600  0128  3A80               	xorlw	128
  1601  0129  00FF               	movwf	127
  1602  012A  3080               	movlw	128
  1603  012B  027F               	subwf	127,w
  1604  012C  1D03               	skipz
  1605  012D  2930               	goto	u1115
  1606  012E  3010               	movlw	16
  1607  012F  0248               	subwf	calc_times@i,w
  1608  0130                     u1115:	
  1609  0130  1803               	btfsc	3,0
  1610  0131  295E               	goto	l1407
  1611  0132                     l1401:	
  1612                           
  1613                           ;PICsun_main.c: 144: light_segments[i] = sunrise_seconds + i*segment_duration;
  1614  0132  0020               	movlb	0	; select bank0
  1615  0133  0849               	movf	calc_times@i+1,w
  1616  0134  01A1               	clrf	?___wmul+1
  1617  0135  07A1               	addwf	?___wmul+1,f
  1618  0136  0848               	movf	calc_times@i,w
  1619  0137  01A0               	clrf	?___wmul
  1620  0138  07A0               	addwf	?___wmul,f
  1621  0139  0841               	movf	calc_times@segment_duration+1,w
  1622  013A  01A3               	clrf	?___wmul+3
  1623  013B  07A3               	addwf	?___wmul+3,f
  1624  013C  0840               	movf	calc_times@segment_duration,w
  1625  013D  01A2               	clrf	?___wmul+2
  1626  013E  07A2               	addwf	?___wmul+2,f
  1627  013F  2385               	fcall	___wmul
  1628  0140  0020               	movlb	0	; select bank0
  1629  0141  0844               	movf	calc_times@sunrise_seconds,w
  1630  0142  0720               	addwf	?___wmul,w
  1631  0143  00AE               	movwf	??_calc_times
  1632  0144  0845               	movf	calc_times@sunrise_seconds+1,w
  1633  0145  3D21               	addwfc	?___wmul+1,w
  1634  0146  00AF               	movwf	??_calc_times+1
  1635  0147  3548               	lslf	calc_times@i,w
  1636  0148  3EA0               	addlw	_light_segments& (0+255)
  1637  0149  0086               	movwf	6
  1638  014A  0187               	clrf	7
  1639  014B  082E               	movf	??_calc_times,w
  1640  014C  3FC0               	movwi [0]fsr1
  1641  014D  082F               	movf	??_calc_times+1,w
  1642  014E  3FC1               	movwi [1]fsr1
  1643  014F  3001               	movlw	1
  1644  0150  07C8               	addwf	calc_times@i,f
  1645  0151  3000               	movlw	0
  1646  0152  3DC9               	addwfc	calc_times@i+1,f
  1647  0153  0849               	movf	calc_times@i+1,w
  1648  0154  3A80               	xorlw	128
  1649  0155  00FF               	movwf	127
  1650  0156  3080               	movlw	128
  1651  0157  027F               	subwf	127,w
  1652  0158  1D03               	skipz
  1653  0159  295C               	goto	u1125
  1654  015A  3010               	movlw	16
  1655  015B  0248               	subwf	calc_times@i,w
  1656  015C                     u1125:	
  1657  015C  1C03               	skipc
  1658  015D  2932               	goto	l1401
  1659  015E                     l1407:	
  1660                           
  1661                           ;PICsun_main.c: 145: }
  1662                           ;PICsun_main.c: 147: real_time = 0;
  1663  015E  0020               	movlb	0	; select bank0
  1664  015F  01D3               	clrf	_real_time	;volatile
  1665  0160  01D4               	clrf	_real_time+1	;volatile
  1666                           
  1667                           ;PICsun_main.c: 148: present_segment = 0;
  1668  0161  01D1               	clrf	_present_segment	;volatile
  1669  0162  01D2               	clrf	_present_segment+1	;volatile
  1670                           
  1671                           ;PICsun_main.c: 149: buffer_valid = 0;
  1672  0163  01F2               	clrf	_buffer_valid	;volatile
  1673  0164  0008               	return
  1674  0165                     __end_of_calc_times:	
  1675                           
  1676                           	psect	text8
  1677  0385                     __ptext8:	
  1678 ;; *************** function ___wmul *****************
  1679 ;; Defined at:
  1680 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1683 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  product         2    4[BANK0 ] unsigned int 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  2    0[BANK0 ] unsigned int 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1
  1695 ;;      Params:         0       4       0
  1696 ;;      Locals:         0       2       0
  1697 ;;      Temps:          0       0       0
  1698 ;;      Totals:         0       6       0
  1699 ;;Total ram usage:        6 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    2
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_calc_times
  1706 ;;		_simulate
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function ___wmul
  1712  0385                     ___wmul:	
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1716  0385  0020               	movlb	0	; select bank0
  1717  0386  01A4               	clrf	___wmul@product
  1718  0387  01A5               	clrf	___wmul@product+1
  1719  0388                     l1597:	
  1720  0388  1C20               	btfss	___wmul@multiplier,0
  1721  0389  2B8E               	goto	l607
  1722  038A  0822               	movf	___wmul@multiplicand,w
  1723  038B  07A4               	addwf	___wmul@product,f
  1724  038C  0823               	movf	___wmul@multiplicand+1,w
  1725  038D  3DA5               	addwfc	___wmul@product+1,f
  1726  038E                     l607:	
  1727  038E  3001               	movlw	1
  1728  038F                     u1445:	
  1729  038F  35A2               	lslf	___wmul@multiplicand,f
  1730  0390  0DA3               	rlf	___wmul@multiplicand+1,f
  1731  0391  0B89               	decfsz	9,f
  1732  0392  2B8F               	goto	u1445
  1733  0393  3001               	movlw	1
  1734  0394                     u1455:	
  1735  0394  36A1               	lsrf	___wmul@multiplier+1,f
  1736  0395  0CA0               	rrf	___wmul@multiplier,f
  1737  0396  0B89               	decfsz	9,f
  1738  0397  2B94               	goto	u1455
  1739  0398  0821               	movf	___wmul@multiplier+1,w
  1740  0399  0420               	iorwf	___wmul@multiplier,w
  1741  039A  1D03               	skipz
  1742  039B  2B88               	goto	l1597
  1743  039C  0825               	movf	___wmul@product+1,w
  1744  039D  01A1               	clrf	?___wmul+1
  1745  039E  07A1               	addwf	?___wmul+1,f
  1746  039F  0824               	movf	___wmul@product,w
  1747  03A0  01A0               	clrf	?___wmul
  1748  03A1  07A0               	addwf	?___wmul,f
  1749  03A2  0008               	return
  1750  03A3                     __end_of___wmul:	
  1751                           
  1752                           	psect	text9
  1753  028E                     __ptext9:	
  1754 ;; *************** function ___lldiv *****************
  1755 ;; Defined at:
  1756 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\lldiv.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  divisor         4    0[BANK0 ] unsigned long 
  1759 ;;  dividend        4    4[BANK0 ] unsigned long 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  quotient        4    9[BANK0 ] unsigned long 
  1762 ;;  counter         1   13[BANK0 ] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  4    0[BANK0 ] unsigned long 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1
  1772 ;;      Params:         0       8       0
  1773 ;;      Locals:         0       5       0
  1774 ;;      Temps:          0       1       0
  1775 ;;      Totals:         0      14       0
  1776 ;;Total ram usage:       14 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    2
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_calc_times
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function ___lldiv
  1788  028E                     ___lldiv:	
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1792  028E  3000               	movlw	0
  1793  028F  0020               	movlb	0	; select bank0
  1794  0290  00AC               	movwf	___lldiv@quotient+3
  1795  0291  3000               	movlw	0
  1796  0292  00AB               	movwf	___lldiv@quotient+2
  1797  0293  3000               	movlw	0
  1798  0294  00AA               	movwf	___lldiv@quotient+1
  1799  0295  3000               	movlw	0
  1800  0296  00A9               	movwf	___lldiv@quotient
  1801  0297  0823               	movf	___lldiv@divisor+3,w
  1802  0298  0422               	iorwf	___lldiv@divisor+2,w
  1803  0299  0421               	iorwf	___lldiv@divisor+1,w
  1804  029A  0420               	iorwf	___lldiv@divisor,w
  1805  029B  1903               	skipnz
  1806  029C  2AD8               	goto	l1591
  1807  029D  01AD               	clrf	___lldiv@counter
  1808  029E  0AAD               	incf	___lldiv@counter,f
  1809  029F                     l1577:	
  1810  029F  1BA3               	btfsc	___lldiv@divisor+3,7
  1811  02A0  2AAD               	goto	l1579
  1812  02A1  3001               	movlw	1
  1813  02A2                     u1375:	
  1814  02A2  35A0               	lslf	___lldiv@divisor,f
  1815  02A3  0DA1               	rlf	___lldiv@divisor+1,f
  1816  02A4  0DA2               	rlf	___lldiv@divisor+2,f
  1817  02A5  0DA3               	rlf	___lldiv@divisor+3,f
  1818  02A6  0B89               	decfsz	9,f
  1819  02A7  2AA2               	goto	u1375
  1820  02A8  3001               	movlw	1
  1821  02A9  00A8               	movwf	??___lldiv
  1822  02AA  0828               	movf	??___lldiv,w
  1823  02AB  07AD               	addwf	___lldiv@counter,f
  1824  02AC  2A9F               	goto	l1577
  1825  02AD                     l1579:	
  1826  02AD  3001               	movlw	1
  1827  02AE                     u1395:	
  1828  02AE  35A9               	lslf	___lldiv@quotient,f
  1829  02AF  0DAA               	rlf	___lldiv@quotient+1,f
  1830  02B0  0DAB               	rlf	___lldiv@quotient+2,f
  1831  02B1  0DAC               	rlf	___lldiv@quotient+3,f
  1832  02B2  0B89               	decfsz	9,f
  1833  02B3  2AAE               	goto	u1395
  1834  02B4  0823               	movf	___lldiv@divisor+3,w
  1835  02B5  0227               	subwf	___lldiv@dividend+3,w
  1836  02B6  1D03               	skipz
  1837  02B7  2AC2               	goto	u1405
  1838  02B8  0822               	movf	___lldiv@divisor+2,w
  1839  02B9  0226               	subwf	___lldiv@dividend+2,w
  1840  02BA  1D03               	skipz
  1841  02BB  2AC2               	goto	u1405
  1842  02BC  0821               	movf	___lldiv@divisor+1,w
  1843  02BD  0225               	subwf	___lldiv@dividend+1,w
  1844  02BE  1D03               	skipz
  1845  02BF  2AC2               	goto	u1405
  1846  02C0  0820               	movf	___lldiv@divisor,w
  1847  02C1  0224               	subwf	___lldiv@dividend,w
  1848  02C2                     u1405:	
  1849  02C2  1C03               	skipc
  1850  02C3  2ACD               	goto	l1587
  1851  02C4  0820               	movf	___lldiv@divisor,w
  1852  02C5  02A4               	subwf	___lldiv@dividend,f
  1853  02C6  0821               	movf	___lldiv@divisor+1,w
  1854  02C7  3BA5               	subwfb	___lldiv@dividend+1,f
  1855  02C8  0822               	movf	___lldiv@divisor+2,w
  1856  02C9  3BA6               	subwfb	___lldiv@dividend+2,f
  1857  02CA  0823               	movf	___lldiv@divisor+3,w
  1858  02CB  3BA7               	subwfb	___lldiv@dividend+3,f
  1859  02CC  1429               	bsf	___lldiv@quotient,0
  1860  02CD                     l1587:	
  1861  02CD  3001               	movlw	1
  1862  02CE                     u1415:	
  1863  02CE  36A3               	lsrf	___lldiv@divisor+3,f
  1864  02CF  0CA2               	rrf	___lldiv@divisor+2,f
  1865  02D0  0CA1               	rrf	___lldiv@divisor+1,f
  1866  02D1  0CA0               	rrf	___lldiv@divisor,f
  1867  02D2  0B89               	decfsz	9,f
  1868  02D3  2ACE               	goto	u1415
  1869  02D4  3001               	movlw	1
  1870  02D5  02AD               	subwf	___lldiv@counter,f
  1871  02D6  1D03               	btfss	3,2
  1872  02D7  2AAD               	goto	l1579
  1873  02D8                     l1591:	
  1874  02D8  082C               	movf	___lldiv@quotient+3,w
  1875  02D9  00A3               	movwf	?___lldiv+3
  1876  02DA  082B               	movf	___lldiv@quotient+2,w
  1877  02DB  00A2               	movwf	?___lldiv+2
  1878  02DC  082A               	movf	___lldiv@quotient+1,w
  1879  02DD  00A1               	movwf	?___lldiv+1
  1880  02DE  0829               	movf	___lldiv@quotient,w
  1881  02DF  00A0               	movwf	?___lldiv
  1882  02E0  0008               	return
  1883  02E1                     __end_of___lldiv:	
  1884                           
  1885                           	psect	intentry
  1886  0004                     __pintentry:	
  1887 ;; *************** function _isr *****************
  1888 ;; Defined at:
  1889 ;;		line 57 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  value           1    4[COMMON] unsigned char 
  1894 ;;  i2cStatus       1    3[COMMON] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;		None               void
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1
  1904 ;;      Params:         0       0       0
  1905 ;;      Locals:         2       0       0
  1906 ;;      Temps:          2       0       0
  1907 ;;      Totals:         4       0       0
  1908 ;;Total ram usage:        4 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    1
  1911 ;; This function calls:
  1912 ;;		_I2CWrite
  1913 ;; This function is called by:
  1914 ;;		Interrupt level 1
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918  0004                     _isr:	
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1922  0004  3180               	pagesel	$
  1923  0005  0020               	movlb	0	; select bank0
  1924  0006  087F               	movf	127,w
  1925  0007  00F7               	movwf	??_isr+1
  1926                           
  1927                           ;PICsun_main.c: 58: if(TMR0IF){
  1928  0008  1D0B               	btfss	11,2	;volatile
  1929  0009  2811               	goto	i1l1303
  1930                           
  1931                           ;PICsun_main.c: 59: TMR0=(255-(8000000/64000));
  1932  000A  3082               	movlw	130
  1933  000B  0095               	movwf	21	;volatile
  1934                           
  1935                           ;PICsun_main.c: 60: msec++;
  1936  000C  3001               	movlw	1
  1937  000D  07F0               	addwf	_msec,f	;volatile
  1938  000E  3000               	movlw	0
  1939  000F  3DF1               	addwfc	_msec+1,f	;volatile
  1940                           
  1941                           ;PICsun_main.c: 61: TMR0IF=0;
  1942  0010  110B               	bcf	11,2	;volatile
  1943  0011                     i1l1303:	
  1944                           
  1945                           ;PICsun_main.c: 62: }
  1946                           ;PICsun_main.c: 63: if(SSP1IF)
  1947  0011  1D91               	btfss	17,3	;volatile
  1948  0012  2878               	goto	i1l118
  1949                           
  1950                           ;PICsun_main.c: 64: {
  1951                           ;PICsun_main.c: 65: SSP1IF = 0;
  1952  0013  1191               	bcf	17,3	;volatile
  1953                           
  1954                           ;PICsun_main.c: 66: unsigned char i2cStatus, value;
  1955                           ;PICsun_main.c: 69: if(i2cStatus != 0x30)
  1956  0014  0878               	movf	isr@i2cStatus,w
  1957  0015  3A30               	xorlw	48
  1958  0016  1903               	skipnz
  1959  0017  2878               	goto	i1l118
  1960                           
  1961                           ;PICsun_main.c: 70: {
  1962                           ;PICsun_main.c: 71: i2cStatus = (SSPSTAT & 0b00101101);
  1963  0018  0024               	movlb	4	; select bank4
  1964  0019  0814               	movf	20,w	;volatile
  1965  001A  392D               	andlw	45
  1966  001B  00F6               	movwf	??_isr
  1967  001C  0876               	movf	??_isr,w
  1968  001D  00F8               	movwf	isr@i2cStatus
  1969                           
  1970                           ;PICsun_main.c: 74: switch (i2cStatus){
  1971  001E  2867               	goto	i1l1363
  1972  001F                     i1l1311:	
  1973                           ;PICsun_main.c: 76: case 0b00001001:
  1974                           
  1975                           
  1976                           ;PICsun_main.c: 78: value = SSPBUF;
  1977  001F  0811               	movf	17,w	;volatile
  1978  0020  00F6               	movwf	??_isr
  1979  0021  0876               	movf	??_isr,w
  1980  0022  00F9               	movwf	isr@value
  1981                           
  1982                           ;PICsun_main.c: 79: if(SSPOV)SSPOV = 0;
  1983  0023  1B15               	btfsc	21,6	;volatile
  1984  0024  1315               	bcf	21,6	;volatile
  1985  0025  2863               	goto	i1l116
  1986  0026                     i1l1319:	
  1987                           ;PICsun_main.c: 83: case 0b00101001:
  1988                           
  1989                           ;PICsun_main.c: 81: break;
  1990                           
  1991                           ;PICsun_main.c: 80: if (SEN) CKP = 1;
  1992                           
  1993                           
  1994                           ;PICsun_main.c: 85: value=SSPBUF;
  1995  0026  0811               	movf	17,w	;volatile
  1996  0027  00F6               	movwf	??_isr
  1997  0028  0876               	movf	??_isr,w
  1998  0029  00F9               	movwf	isr@value
  1999                           
  2000                           ;PICsun_main.c: 86: if(value == 0xFF){
  2001  002A  0879               	movf	isr@value,w
  2002  002B  3AFF               	xorlw	255
  2003  002C  1D03               	skipz
  2004  002D  2834               	goto	i1l1325
  2005                           
  2006                           ;PICsun_main.c: 87: newcmd=1;
  2007  002E  3001               	movlw	1
  2008  002F  00F6               	movwf	??_isr
  2009  0030  0876               	movf	??_isr,w
  2010  0031  00F3               	movwf	_newcmd	;volatile
  2011                           
  2012                           ;PICsun_main.c: 88: rcvd_byte=0;
  2013  0032  01F4               	clrf	_rcvd_byte	;volatile
  2014                           
  2015                           ;PICsun_main.c: 89: }else{
  2016  0033  2863               	goto	i1l116
  2017  0034                     i1l1325:	
  2018                           
  2019                           ;PICsun_main.c: 90: if(newcmd && !buffer_valid)
  2020  0034  0873               	movf	_newcmd,w	;volatile
  2021  0035  1903               	btfsc	3,2
  2022  0036  2846               	goto	i1l1333
  2023  0037  08F2               	movf	_buffer_valid,f
  2024  0038  1D03               	skipz
  2025  0039  2846               	goto	i1l1333
  2026                           
  2027                           ;PICsun_main.c: 91: {
  2028                           ;PICsun_main.c: 92: rcv_buffer[rcvd_byte++]= value;
  2029  003A  0879               	movf	isr@value,w
  2030  003B  00F6               	movwf	??_isr
  2031  003C  0874               	movf	_rcvd_byte,w
  2032  003D  3E4B               	addlw	_rcv_buffer& (0+255)
  2033  003E  0086               	movwf	6
  2034  003F  0187               	clrf	7
  2035  0040  0876               	movf	??_isr,w
  2036  0041  0081               	movwf	1
  2037  0042  3001               	movlw	1
  2038  0043  00F6               	movwf	??_isr
  2039  0044  0876               	movf	??_isr,w
  2040  0045  07F4               	addwf	_rcvd_byte,f	;volatile
  2041  0046                     i1l1333:	
  2042                           
  2043                           ;PICsun_main.c: 93: }
  2044                           ;PICsun_main.c: 94: if(rcvd_byte== 6){
  2045  0046  0874               	movf	_rcvd_byte,w	;volatile
  2046  0047  3A06               	xorlw	6
  2047  0048  1D03               	skipz
  2048  0049  2863               	goto	i1l116
  2049                           
  2050                           ;PICsun_main.c: 95: newcmd = 0;
  2051  004A  01F3               	clrf	_newcmd	;volatile
  2052                           
  2053                           ;PICsun_main.c: 96: buffer_valid = 1;
  2054  004B  3001               	movlw	1
  2055  004C  00F6               	movwf	??_isr
  2056  004D  0876               	movf	??_isr,w
  2057  004E  00F2               	movwf	_buffer_valid	;volatile
  2058  004F  2863               	goto	i1l116
  2059  0050                     i1l1343:	
  2060                           ;PICsun_main.c: 101: case 0b00001101:
  2061                           
  2062                           ;PICsun_main.c: 100: break;
  2063                           
  2064                           ;PICsun_main.c: 97: }
  2065                           ;PICsun_main.c: 98: }
  2066                           ;PICsun_main.c: 99: if (SEN) CKP = 1;
  2067                           
  2068                           
  2069                           ;PICsun_main.c: 103: value = SSPBUF;
  2070  0050  0811               	movf	17,w	;volatile
  2071  0051  00F6               	movwf	??_isr
  2072  0052  0876               	movf	??_isr,w
  2073  0053  00F9               	movwf	isr@value
  2074  0054                     i1l1351:	
  2075                           ;PICsun_main.c: 110: case 0b00101100:
  2076                           
  2077                           ;PICsun_main.c: 108: break;
  2078                           
  2079                           ;PICsun_main.c: 107: rcvd_byte++;
  2080                           
  2081                           ;PICsun_main.c: 106: I2CWrite(rcv_buffer[rcvd_byte]);
  2082                           
  2083                           ;PICsun_main.c: 105: rcvd_byte = 0;
  2084                           
  2085                           ;PICsun_main.c: 104: if (rcvd_byte >= 6)
  2086                           
  2087                           
  2088                           ;PICsun_main.c: 112: if(rcvd_byte>=6)
  2089  0054  3006               	movlw	6
  2090  0055  0274               	subwf	_rcvd_byte,w	;volatile
  2091  0056  1803               	btfsc	3,0
  2092                           
  2093                           ;PICsun_main.c: 113: rcvd_byte = 0;
  2094  0057  01F4               	clrf	_rcvd_byte	;volatile
  2095                           
  2096                           ;PICsun_main.c: 114: I2CWrite(rcv_buffer[rcvd_byte]);
  2097  0058  0874               	movf	_rcvd_byte,w
  2098  0059  3E4B               	addlw	_rcv_buffer& (0+255)
  2099  005A  0086               	movwf	6
  2100  005B  0187               	clrf	7
  2101  005C  0801               	movf	1,w
  2102  005D  23C5               	fcall	_I2CWrite
  2103                           
  2104                           ;PICsun_main.c: 115: rcvd_byte++;
  2105  005E  3001               	movlw	1
  2106  005F  00F6               	movwf	??_isr
  2107  0060  0876               	movf	??_isr,w
  2108  0061  07F4               	addwf	_rcvd_byte,f	;volatile
  2109                           
  2110                           ;PICsun_main.c: 120: break;
  2111                           
  2112                           ;PICsun_main.c: 118: case 0b00101000:
  2113                           
  2114                           ;PICsun_main.c: 116: break;
  2115  0062  2878               	goto	i1l118
  2116  0063                     i1l116:	
  2117                           ;PICsun_main.c: 121: default:
  2118                           
  2119                           
  2120                           ;PICsun_main.c: 122: if (SEN) CKP = 1;
  2121  0063  1C16               	btfss	22,0	;volatile
  2122  0064  2878               	goto	i1l118
  2123  0065  1615               	bsf	21,4	;volatile
  2124                           
  2125                           ;PICsun_main.c: 124: }
  2126                           
  2127                           ;PICsun_main.c: 123: break;
  2128  0066  2878               	goto	i1l118
  2129  0067                     i1l1363:	
  2130  0067  0878               	movf	isr@i2cStatus,w
  2131                           
  2132                           ; Switch size 1, requested type "space"
  2133                           ; Number of cases is 5, Range of values is 9 to 44
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; simple_byte           16     9 (average)
  2137                           ; direct_byte           81     9 (fixed)
  2138                           ; jumptable            263     9 (fixed)
  2139                           ;	Chosen strategy is simple_byte
  2140  0068  3A09               	xorlw	9	; case 9
  2141  0069  1903               	skipnz
  2142  006A  281F               	goto	i1l1311
  2143  006B  3A04               	xorlw	4	; case 13
  2144  006C  1903               	skipnz
  2145  006D  2850               	goto	i1l1343
  2146  006E  3A25               	xorlw	37	; case 40
  2147  006F  1903               	skipnz
  2148  0070  2878               	goto	i1l118
  2149  0071  3A01               	xorlw	1	; case 41
  2150  0072  1903               	skipnz
  2151  0073  2826               	goto	i1l1319
  2152  0074  3A05               	xorlw	5	; case 44
  2153  0075  1903               	skipnz
  2154  0076  2854               	goto	i1l1351
  2155  0077  2863               	goto	i1l116
  2156  0078                     i1l118:	
  2157  0078  0877               	movf	??_isr+1,w
  2158  0079  0020               	movlb	0	; select bank0
  2159  007A  00FF               	movwf	127
  2160  007B  0009               	retfie
  2161  007C                     __end_of_isr:	
  2162                           
  2163                           	psect	text11
  2164  03C5                     __ptext11:	
  2165 ;; *************** function _I2CWrite *****************
  2166 ;; Defined at:
  2167 ;;		line 48 in file "C:/Users/David/MPLABXProjects/PICsun2.X/PICsun_main.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  data            1    wreg     unsigned char 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  data            1    0[COMMON] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;		None               void
  2174 ;; Registers used:
  2175 ;;		wreg
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1
  2181 ;;      Params:         0       0       0
  2182 ;;      Locals:         1       0       0
  2183 ;;      Temps:          0       0       0
  2184 ;;      Totals:         1       0       0
  2185 ;;Total ram usage:        1 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_isr
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           
  2195                           ;psect for function _I2CWrite
  2196  03C5                     _I2CWrite:	
  2197                           
  2198                           ;incstack = 0
  2199                           ; Regs used in _I2CWrite: [wreg]
  2200                           ;I2CWrite@data stored from wreg
  2201  03C5  00F5               	movwf	I2CWrite@data
  2202  03C6                     i1l88:	
  2203                           ;PICsun_main.c: 49: while(BF);
  2204                           
  2205  03C6  0024               	movlb	4	; select bank4
  2206  03C7  1814               	btfsc	20,0	;volatile
  2207  03C8  2BC6               	goto	i1l88
  2208  03C9                     i1l91:	
  2209                           ;PICsun_main.c: 50: do{
  2210                           
  2211                           
  2212                           ;PICsun_main.c: 51: WCOL = 0;
  2213  03C9  1395               	bcf	21,7	;volatile
  2214                           
  2215                           ;PICsun_main.c: 52: SSP1BUF = data;
  2216  03CA  0875               	movf	I2CWrite@data,w
  2217  03CB  0091               	movwf	17	;volatile
  2218                           
  2219                           ;PICsun_main.c: 53: }while (WCOL);
  2220  03CC  1B95               	btfsc	21,7	;volatile
  2221  03CD  2BC9               	goto	i1l91
  2222                           
  2223                           ;PICsun_main.c: 54: if (SEN) CKP = 1;
  2224  03CE  1C16               	btfss	22,0	;volatile
  2225  03CF  0008               	return
  2226  03D0  1615               	bsf	21,4	;volatile
  2227  03D1  0008               	return
  2228  03D2                     __end_of_I2CWrite:	
  2229  007E                     btemp	set	126	;btemp
  2230  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     43      53
    BANK1            32      0      32

Pointer List with Targets:

    ?___lldiv	unsigned long  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_I2CWrite

Critical Paths under _main in BANK0

    _main->_calc_times
    ___init->_delay_ms
    _simulate->_ready_pwm
    _simulate->_check_segment
    _simulate->___wmul
    _ready_pwm->_setPWMdc
    _calc_times->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1820
                                             42 BANK0      1     1      0
                           _delay_ms
                         _calc_times
                           _simulate
                             ___init
 ---------------------------------------------------------------------------------
 (1) ___init                                               0     0      0      31
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2      31
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _simulate                                             2     2      0    1081
                                              6 BANK0      2     2      0
                          _ready_pwm
                      _check_segment
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _check_segment                                        6     4      2     508
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _ready_pwm                                            2     0      2     403
                                              4 BANK0      2     0      2
                           _setPWMdc
 ---------------------------------------------------------------------------------
 (3) _setPWMdc                                             4     2      2      62
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _calc_times                                          28    28      0     677
                                             14 BANK0     28    28      0
                            ___lldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     136
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     241
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0     114
                                              1 COMMON     4     4      0
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (5) _I2CWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
   _calc_times
     ___lldiv
     ___wmul
   _simulate
     _ready_pwm
       _setPWMdc
     _check_segment
     ___wmul
   ___init
     _delay_ms

 _isr (ROOT)
   _I2CWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       7       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2B      35       6       66.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      20       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      66       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Mar 25 22:25:55 2014

               __CFG_CP$OFF 0000                          _BF 10A0         ___wmul@multiplicand 0022  
                       l170 0330                         l607 038E                         _CKP 10AC  
                       _PR2 001B                __CFG_CPD$OFF 0000                         _SEN 10B0  
                       _isr 0004                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_LVP$OFF 0000                        l1401 0132                        l1421 022E  
                      l1413 0216                        l1407 015E                        l1441 026A  
                      l1433 0252                        l1425 023A                        l1417 0222  
                      l1445 0276                        l1437 025E                        l1429 0246  
                      l1471 01B7                        l1383 03BA                        l1449 0282  
                      l1465 018E                        l1457 017C                        l1561 032B  
                      l1475 01C6                        l1459 0180                        l1591 02D8  
                      l1487 0206                        l1577 029F                        l1587 02CD  
                      l1579 02AD                        l1597 0388                        ?_isr 0075  
                      u1105 0377                        u1115 0130                        u1125 015C  
                      u1305 01D4                        u1315 01E5                        u1405 02C2  
                      u1325 01F6                        u1245 016F                        _LATA 010C  
                      u1415 02CE                        u1255 017A                        u1095 03C1  
                      u1265 018C                        u1275 019D                        u1445 038F  
                      u1285 01AE                        u1375 02A2                        u1455 0394  
                      u1295 01C4                        u1395 02AE                        i1l91 03C9  
                      i1l88 03C6                        _TMR0 0015                        _WCOL 10AF  
                      _WPUA 020C                __CFG_WRT$OFF 0000       __end_of_check_segment 020B  
                      _main 0319                        _msec 0070                        fsr0h 0005  
                      fsr1h 0007                        fsr0l 0004                        indf0 0000  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
          __end_of_I2CWrite 03D2                        start 007C               __CFG_IESO$OFF 0000  
                     ??_isr 0076                       ?_main 0075               __CFG_WDTE$OFF 0000  
           __end_of___lldiv 02E1                       i1l116 0063                       i1l118 0078  
                     _SSPOV 10AE              __CFG_FCMEN$OFF 0000              __CFG_BOREN$OFF 0000  
                     status 0003                       wtemp0 007E              __CFG_MCLRE$OFF 0000  
           __initialization 03A3                __end_of_main 0344                      ??_main 004A  
            __CFG_PLLEN$OFF 0000            ready_pwm@segment 0024                      _CCPR1L 0291  
                    _ANSELA 018C                      i1l1311 001F                      i1l1303 0011  
                    i1l1333 0046                      i1l1325 0034                      i1l1351 0054  
                    i1l1343 0050                      i1l1319 0026                      i1l1363 0067  
                    _TMR0IE 005D                      _TMR0IF 005A                      _SSP1IF 008B  
                    _SSPBUF 0211            __end_of_delay_ms 03C5                      ___init 02E1  
                    ___wmul 0385              __CFG_STVREN$ON 0000                   ??___lldiv 0028  
                    _newcmd 0073            __end_of_setPWMdc 0385                   ?_I2CWrite 0075  
              isr@i2cStatus 0078            __end_of_simulate 0367     __end_of__initialization 03B4  
            __pcstackCOMMON 0075     simulate@simulation_time 0026                  ??_I2CWrite 0075  
                _calc_times 007D                  __pbssBANK0 004B                  __pbssBANK1 00A0  
                __pmaintext 0319          __size_of_ready_pwm 0083                     ?___init 0075  
                   ?___wmul 0020                  __pintentry 0004                     _CCP1CON 0293  
                 ?_delay_ms 0020                     _SSP1ADD 0212                     _SSP1BUF 0211  
                   _SSPSTAT 0214                   ?_setPWMdc 0020                   ?_simulate 0075  
           __size_of___init 0038                     ___lldiv 028E             __size_of___wmul 001E  
                   __ptext0 0000                     __ptext1 02E1                     __ptext2 03B6  
                   __ptext3 0344                     __ptext4 0165                     __ptext5 020B  
                   __ptext6 0367                     __ptext7 007D                     __ptext8 0385  
                   __ptext9 028E      __size_of_check_segment 00A6                   _T2CONbits 001C  
              __size_of_isr 0078                I2CWrite@data 0075                 ?_calc_times 0075  
                ??_delay_ms 0022           __end_of_ready_pwm 028E    calc_times@sunset_seconds 0038  
                   clrloop0 03D3                  delay_ms@ms 0020        end_of_initialization 03B4  
                _rcv_buffer 004B                  ??_setPWMdc 0022             ___lldiv@divisor 0020  
           ___lldiv@counter 002D                _buffer_valid 0072                  ??_simulate 0026  
 calc_times@sunrise_seconds 0044            __CFG_FOSC$INTOSC 0000                   _TRISAbits 008C  
         __size_of_I2CWrite 000D                 _CCP1CONbits 0293               _check_segment 0165  
           _present_segment 0051         __size_of_calc_times 00E8              __end_of___init 0319  
            __end_of___wmul 03A3     check_segment@check_time 0020              _light_segments 00A0  
       start_initialization 03A3                 __end_of_isr 007C              ?_check_segment 0020  
                  ??___init 0022                    ??___wmul 0024              check_segment@i 0024  
               __pbssCOMMON 0070               __pcstackBANK0 0020           __size_of_delay_ms 000F  
                setPWMdc@dc 0020           __size_of_setPWMdc 001E                    ?___lldiv 0020  
         __size_of_simulate 0023                    _I2CWrite 03C5                ??_calc_times 002E  
           ??_check_segment 0022                   _real_time 0053                   _ready_pwm 020B  
            ___wmul@product 0024                   clear_ram0 03D2                    _PIE1bits 0091  
                 _rcvd_byte 0074                    _PIR1bits 0011          __end_of_calc_times 0165  
                  _SSP1CON1 0215           ___wmul@multiplier 0020                 calc_times@i 0048  
                ?_ready_pwm 0024                  _APFCONbits 011D            __size_of___lldiv 0053  
                  _delay_ms 03B6        calc_times@light_time 003C                    __ptext11 03C5  
              _SSP1CON2bits 0216  calc_times@segment_duration 0040               __size_of_main 002B  
                  _setPWMdc 0367                    _simulate 0344                  _INTCONbits 000B  
                  isr@value 0079                    intlevel1 0000                 ??_ready_pwm 0026  
          ___lldiv@dividend 0024           __CFG_CLKOUTEN$OFF 0000                  _OSCCONbits 0099  
                _OPTION_REG 0095            ___lldiv@quotient 0029  
